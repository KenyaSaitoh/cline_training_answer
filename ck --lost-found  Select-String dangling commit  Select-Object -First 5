warning: in the working copy of '.gitignore', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'README.md', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'build.gradle', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'env-conf.gradle', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'payara6/glassfish/lib/install/applications/__admingui/WEB-INF/faces-config.xml', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'settings.gradle', LF will be replaced by CRLF the next time Git touches it
[1mdiff --git a/.gitignore b/.gitignore[m
[1mindex cb117da..1dc6fc2 100644[m
[1m--- a/.gitignore[m
[1m+++ b/.gitignore[m
[36m@@ -1,15 +1,74 @@[m
[31m-# Payara Server - デプロイされたアプリケーションと生成ファイル[m
[32m+[m[32m# Payara Server - domain1配下はディレクトリ構造のみ管理（.gitkeepのみ）[m
 /payara6/glassfish/domains/domain1/applications/**[m
[32m+[m[32m!/payara6/glassfish/domains/domain1/applications/.gitkeep[m
 /payara6/glassfish/domains/domain1/autodeploy/**[m
[32m+[m[32m!/payara6/glassfish/domains/domain1/autodeploy/.gitkeep[m
 /payara6/glassfish/domains/domain1/logs/**[m
[31m-/payara6/glassfish/domains/domain1/lib/*.jar[m
[32m+[m[32m!/payara6/glassfish/domains/domain1/logs/.gitkeep[m
 /payara6/glassfish/domains/domain1/generated/**[m
[32m+[m[32m!/payara6/glassfish/domains/domain1/generated/.gitkeep[m
 /payara6/glassfish/domains/domain1/osgi-cache/**[m
[31m-/payara6/glassfish/domains/domain1/config/**[m
[32m+[m[32m!/payara6/glassfish/domains/domain1/osgi-cache/.gitkeep[m
 /payara6/glassfish/domains/domain1/docroot/**[m
[32m+[m[32m!/payara6/glassfish/domains/domain1/docroot/.gitkeep[m
[32m+[m[32m/payara6/glassfish/domains/domain1/config/**[m
[32m+[m[32m!/payara6/glassfish/domains/domain1/config/.gitkeep[m
[32m+[m[32m/payara6/glassfish/domains/domain1/endpoints/**[m
[32m+[m[32m!/payara6/glassfish/domains/domain1/endpoints/.gitkeep[m
[32m+[m[32m/payara6/glassfish/domains/domain1/init-info/**[m
[32m+[m[32m!/payara6/glassfish/domains/domain1/init-info/.gitkeep[m
[32m+[m[32m/payara6/glassfish/domains/domain1/lib/**[m
[32m+[m[32m!/payara6/glassfish/domains/domain1/lib/.gitkeep[m
[32m+[m[32m!/payara6/glassfish/domains/domain1/lib/hsqldb.jar[m
[32m+[m[32m!/payara6/glassfish/domains/domain1/lib/applibs/.gitkeep[m
[32m+[m[32m!/payara6/glassfish/domains/domain1/lib/classes/.gitkeep[m
[32m+[m[32m!/payara6/glassfish/domains/domain1/lib/databases/.gitkeep[m
[32m+[m[32m!/payara6/glassfish/domains/domain1/lib/warlibs/.gitkeep[m
[32m+[m
[32m+[m[32m# TomEE 8 - 実行時生成ファイルのみ除外[m
[32m+[m[32m# （conf/*.template、conf/tomee.xml、lib/*.jarは初期セットアップ用に管理対象）[m
[32m+[m[32m/tomee8/webapps/*[m
[32m+[m[32m!/tomee8/webapps/[m
[32m+[m[32m/tomee8/logs/**[m
[32m+[m[32m!/tomee8/logs/.gitkeep[m
[32m+[m[32m/tomee8/temp/**[m
[32m+[m[32m/tomee8/work/**[m
[32m+[m[32m/tomee8/conf/Catalina/**[m
[32m+[m
[32m+[m[32m# TomEE 8 - HSQLDB 動的ファイル除外[m
[32m+[m[32m/tomee8/data/hsqldb/*.log[m
[32m+[m[32m/tomee8/data/hsqldb/*.lck[m
[32m+[m[32m/tomee8/data/hsqldb/*.tmp/[m
[32m+[m[32m/tomee8/data/hsqldb/hsqldb.tmp/**[m
[32m+[m
[32m+[m[32m# TomEE 8 - 動的に変更される設定ファイルを除外[m
[32m+[m[32m/tomee8/conf/server.xml[m
[32m+[m[32m!/tomee8/conf/server.xml.template[m
[32m+[m[32m!/tomee8/conf/server.xml.original[m
[32m+[m[32m!/tomee8/conf/tomee.xml[m
[32m+[m
[32m+[m[32m# TomEE 8 - 文字化け対策のsetenvスクリプトは管理対象[m
[32m+[m[32m!/tomee8/bin/setenv.bat[m
[32m+[m[32m!/tomee8/bin/setenv.sh[m
 [m
 # HSQLDB データファイル[m
[31m-/hsqldb/data/[m
[32m+[m[32m/hsqldb/data/**[m
[32m+[m[32m!/hsqldb/data/.gitkeep[m
[32m+[m
[32m+[m[32m# Python ETL 出力ファイル[m
[32m+[m[32m/projects/python/accounting_glue/output/*.csv[m
[32m+[m[32m/projects/python/accounting_glue/output/*.txt[m
[32m+[m[32m/projects/python/accounting_glue/output/*.log[m
[32m+[m
[32m+[m[32m# Python キャッシュファイル[m
[32m+[m[32m__pycache__/[m
[32m+[m[32m*.py[cod][m
[32m+[m[32m*$py.class[m
[32m+[m[32m*.so[m
[32m+[m[32m.Python[m
[32m+[m[32m*.egg-info/[m
[32m+[m[32mdist/[m
[32m+[m[32mbuild/[m
 [m
 # Gradle ビルドファイル[m
 /classes[m
[36m@@ -18,6 +77,7 @@[m
 /target[m
 /.gradle[m
 /projects/build[m
[32m+[m[32mprojects/**/build/[m
 *.war[m
 *.class[m
 [m
[1mdiff --git a/README.md b/README.md[m
[1mindex 616c9bc..a21e699 100644[m
[1m--- a/README.md[m
[1m+++ b/README.md[m
[36m@@ -3,44 +3,33 @@[m
 ## 📖 概要[m
 [m
 Jakarta EE 10とPayara Serverを使用したWebアプリケーションの学習プロジェクト集です。[m
[31m-全13プロジェクトで、Servlet/JSP、JSF、CDI、JAX-RSを段階的に学習できます。[m
[32m+[m[32mServlet/JSP、JSF、CDI、JAX-RSを段階的に学習できます。[m
 [m
[31m-## 📦 プロジェクト一覧[m
[32m+[m[32m## 📁 プロジェクト構成[m
 [m
[31m-### Servlet系プロジェクト（3個）[m
[32m+[m[32mこのリポジトリは複数の技術スタックを含むマルチプロジェクト構成です：[m
 [m
[31m-| プロジェクト | 説明 |[m
[31m-|------------|------|[m
[31m-| `servlet_jsp` | ServletとJSPの基本 |[m
[31m-| `servlet_jsp_mvc` | Servlet + JSP MVC パターン |[m
[31m-| `servlet_session` | セッション管理とCookie |[m
[31m-[m
[31m-### JSF系プロジェクト（3個）[m
[31m-[m
[31m-| プロジェクト | 説明 |[m
[31m-|------------|------|[m
[31m-| `jsf_person` | JSFの基本（マネージドBean、Facelets） |[m
[31m-| `jsf_person_rdb` | JSF + JPA（データベース連携） |[m
[31m-| `jsf_ajax` | JSF Ajax機能 |[m
[31m-[m
[31m-### CDI系プロジェクト（3個）[m
[31m-[m
[31m-| プロジェクト | 説明 |[m
[31m-|------------|------|[m
[31m-| `cdi_inject` | CDI依存性注入の基本 |[m
[31m-| `cdi_conversation` | 会話スコープ（@ConversationScoped） |[m
[31m-| `cdi_transactional` | @Transactional（トランザクション管理） |[m
[31m-[m
[31m-### RESTful Webサービス（4個）[m
[31m-[m
[31m-| プロジェクト | 説明 |[m
[31m-|------------|------|[m
[31m-| `rs_hello_service` | JAX-RS Hello World |[m
[31m-| `rs_greeting_service` | JAX-RS CRUD操作 |[m
[31m-| `rs_employee_service` | JAX-RS + JPA（データベース連携） |[m
[31m-| `person_service` | RESTful API設計の実践 |[m
[32m+[m[32m```[m
[32m+[m[32mjee_micro_vsc/[m
[32m+[m[32m├── projects/[m
[32m+[m[32m│   ├── java/                    # Jakarta EE (Java) プロジェクト[m
[32m+[m[32m│   │   ├── berry-books/         # JSF MVCオンライン書店[m
[32m+[m[32m│   │   ├── berry-books-rest/    # JAX-RS REST API[m
[32m+[m[32m│   │   ├── jsf_person_rdb/      # JSF + JPA CRUD[m
[32m+[m[32m│   │   └── struts_person_rdb/   # Struts 1.3 + EJB[m
[32m+[m[32m│   ├── python/                  # Pythonプロジェクト（今後追加予定）[m
[32m+[m[32m│   └── react/                   # Reactプロジェクト（今後追加予定）[m
[32m+[m[32m│[m
[32m+[m[32m├── payara6/                     # Payara Server 6[m
[32m+[m[32m├── hsqldb/                      # HSQLDB Database Server[m
[32m+[m[32m├── tomee8/                      # Apache TomEE 8 (Struts用)[m
[32m+[m[32m│[m
[32m+[m[32m├── build.gradle                 # Javaプロジェクト用ビルド設定[m
[32m+[m[32m├── settings.gradle              # Gradleマルチプロジェクト設定[m
[32m+[m[32m└── env-conf.gradle              # 環境設定[m
[32m+[m[32m```[m
 [m
[31m-## 🚀 クイックスタート[m
[32m+[m[32m## 🚀 セットアップとコマンド実行ガイド[m
 [m
 ### 前提条件[m
 [m
[36m@@ -48,61 +37,94 @@[m [mJakarta EE 10とPayara Serverを使用したWebアプリケーションの学習[m
 - **Gradle 8.x以上**[m
 - **Payara Server 6** (プロジェクトルートの`payara6/`に配置済み)[m
 - **HSQLDB** (プロジェクトルートの`hsqldb/`に配置済み)[m
[32m+[m[32m- **Windows**: Git Bash（Gradleコマンド実行用）[m
 [m
[31m-### 初回セットアップ[m
[32m+[m[32m> **Note**: すべてのコマンドはbash形式（`./gradlew`）です。WindowsではGit Bashを使用してください。[m
 [m
[31m-```powershell[m
[31m-# 1. 全プロジェクトをビルド[m
[31m-.\gradlew build[m
[32m+[m[32m### ① 研修環境セットアップ後に1回だけ実行[m
 [m
[31m-# 2. HSQLDBサーバーを起動（毎回必要）[m
[31m-.\gradlew startHsqldb[m
[32m+[m[32m```bash[m
[32m+[m[32m# HSQLDBドライバをPayara Serverにインストール[m
[32m+[m[32m./gradlew installHsqldbDriver[m
[32m+[m[32m```[m
 [m
[31m-# 3. ドライバをコピー（初回のみ）[m
[31m-.\gradlew installHsqldbDriver[m
[32m+[m[32m### ② 研修開催につき初回に1回だけ実行[m
 [m
[31m-# 4. Payara Serverを起動（毎回必要）[m
[31m-.\gradlew startPayara[m
[32m+[m[32m```bash[m
[32m+[m[32m# 1. Payara Serverのdomain.xmlを初期化（クリーンな状態にリセット）[m
[32m+[m[32m./gradlew initPayaraDomainConfig[m
 [m
[31m-# 5. データソースを作成（初回のみ）[m
[31m-.\gradlew createConnectionPool[m
[31m-.\gradlew createDataSource[m
[32m+[m[32m# 2. HSQLDBサーバーを起動[m
[32m+[m[32m./gradlew startHsqldb[m
 [m
[31m-# 6. アプリケーションをデプロイ[m
[31m-.\gradlew :projects:servlet_jsp:deploy[m
[31m-```[m
[32m+[m[32m# 3. Payara Serverを起動[m
[32m+[m[32m./gradlew startPayara[m
 [m
[31m-**2回目以降の起動**：[m
[31m-```powershell[m
[31m-.\gradlew startHsqldb[m
[31m-.\gradlew startPayara[m
[32m+[m[32m# 4. データソースをセットアップ（コネクションプール＋データソース作成）[m
[32m+[m[32m./gradlew setupDataSource[m
[32m+[m
[32m+[m[32m# または、個別に実行する場合：[m
[32m+[m[32m# ./gradlew createConnectionPool[m
[32m+[m[32m# ./gradlew createDataSource[m
 ```[m
 [m
[31m-### アプリケーションへのアクセス[m
[32m+[m[32m### ③ 研修開催につき最後に1回だけ実行（CleanUp）[m
[32m+[m
[32m+[m[32m```bash[m
[32m+[m[32m# すべてのアプリケーションをアンデプロイし、データソースを削除[m
[32m+[m[32m./gradlew cleanupAll[m
 [m
[32m+[m[32m# サーバーを停止[m
[32m+[m[32m./gradlew stopPayara[m
[32m+[m[32m./gradlew stopHsqldb[m
 ```[m
[31m-http://localhost:8080/servlet_jsp/PersonServlet?personName=Alice[m
[32m+[m
[32m+[m[32m### ④ プロジェクトを開始するときに1回だけ実行[m
[32m+[m
[32m+[m[32m```bash[m
[32m+[m[32m# プロジェクトのデータベーステーブルとデータを作成[m
[32m+[m[32m# 例：berry-booksの場合[m
[32m+[m[32m./gradlew :projects:java:berry-books:setupHsqldb[m
[32m+[m
[32m+[m[32m# プロジェクトをビルド[m
[32m+[m[32m./gradlew :projects:java:berry-books:war[m
[32m+[m
[32m+[m[32m# プロジェクトをデプロイ[m
[32m+[m[32m./gradlew :projects:java:berry-books:deploy[m
 ```[m
 [m
[31m-### ログをリアルタイム監視（別のターミナル）[m
[32m+[m[32m### ⑤ プロジェクトを終了するときに1回だけ実行（CleanUp）[m
 [m
[31m-**Windows (PowerShell):**[m
[31m-```powershell[m
[31m-Get-Content -Path payara6\glassfish\domains\domain1\logs\server.log -Wait -Tail 50 -Encoding UTF8[m
[32m+[m[32m```bash[m
[32m+[m[32m# プロジェクトをアンデプロイ[m
[32m+[m[32m# 例：berry-booksの場合[m
[32m+[m[32m./gradlew :projects:java:berry-books:undeploy[m
 ```[m
 [m
[31m-**Linux/Mac:**[m
[32m+[m[32m### ⑥ アプリケーション作成・更新のたびに実行[m
[32m+[m
 ```bash[m
[31m-tail -f -n 50 payara6/glassfish/domains/domain1/logs/server.log[m
[32m+[m[32m# アプリケーションを再ビルドして再デプロイ[m
[32m+[m[32m# 例：berry-booksの場合[m
[32m+[m[32m./gradlew :projects:java:berry-books:war[m
[32m+[m[32m./gradlew :projects:java:berry-books:deploy[m
 ```[m
 [m
[31m-### サーバーの停止[m
[32m+[m[32m## 🌐 アプリケーションへのアクセス[m
 [m
[31m-```powershell[m
[31m-.\gradlew stopPayara[m
[31m-.\gradlew stopHsqldb[m
[32m+[m[32mプロジェクトごとのアクセスURL例：[m
[32m+[m[32m```[m
[32m+[m[32mhttp://localhost:8080/berry-books[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## 📊 ログをリアルタイム監視（別のターミナル）[m
[32m+[m
[32m+[m[32m```bash[m
[32m+[m[32mtail -f -n 50 payara6/glassfish/domains/domain1/logs/server.log[m
 ```[m
 [m
[32m+[m[32m> **Note**: Windowsでは**Git Bash**を使用してください。[m
[32m+[m
 ## 📋 Gradle タスク[m
 [m
 ### ビルドタスク[m
[36m@@ -122,6 +144,7 @@[m [mtail -f -n 50 payara6/glassfish/domains/domain1/logs/server.log[m
 | `restartPayara` | Payara Serverを再起動 |[m
 | `statusPayara` | Payara Serverのステータスを確認 |[m
 | `killAllJava` | 全てのJavaプロセスを強制終了（緊急時用） |[m
[32m+[m[32m| `initPayaraDomainConfig` | domain.xmlを初期状態にリセット（研修開催時に実行） |[m
 | `setupDataSource` | HSQLDBデータソースをセットアップ（初回向け統合タスク） |[m
 | `installHsqldbDriver` | HSQLDBドライバをPayara Serverにコピー（初回のみ） |[m
 | `createConnectionPool` | JDBCコネクションプールを作成 |[m
[36m@@ -163,16 +186,13 @@[m [mtail -f -n 50 payara6/glassfish/domains/domain1/logs/server.log[m
 [m
 コマンドラインからSQLを実行する場合は、SqlToolを使用します：[m
 [m
[31m-**Windows (PowerShell):**[m
[31m-```powershell[m
[31m-java -cp "hsqldb\lib\hsqldb.jar;hsqldb\lib\sqltool.jar" org.hsqldb.cmdline.SqlTool --rcFile hsqldb\sqltool.rc testdb[m
[31m-```[m
[31m-[m
[31m-**Linux/Mac:**[m
 ```bash[m
[32m+[m[32m# Windows (Git Bash) / macOS / Linux[m
 java -cp "hsqldb/lib/hsqldb.jar:hsqldb/lib/sqltool.jar" org.hsqldb.cmdline.SqlTool --rcFile hsqldb/sqltool.rc testdb[m
 ```[m
 [m
[32m+[m[32m> **Note**: Windowsでは**Git Bash**を使用してください。PowerShellの場合は、クラスパス区切りを`;`に、パス区切りを`\`に変更する必要があります。[m
[32m+[m
 接続設定は`hsqldb/sqltool.rc`に記述されています。[m
 [m
 **SQLの実行例:**[m
[36m@@ -195,13 +215,13 @@[m [mSELECT * FROM PERSON;[m
 [m
 研修終了時に環境をクリーンアップするには：[m
 [m
[31m-```powershell[m
[32m+[m[32m```bash[m
 # すべてのアプリ、データソース、コネクションプールを削除[m
[31m-.\gradlew cleanupAll[m
[32m+[m[32m./gradlew cleanupAll[m
 [m
 # サーバーを停止[m
[31m-.\gradlew stopPayara[m
[31m-.\gradlew stopHsqldb[m
[32m+[m[32m./gradlew stopPayara[m
[32m+[m[32m./gradlew stopHsqldb[m
 ```[m
 [m
 ## 🔧 使用技術[m
[36m@@ -224,40 +244,57 @@[m [mSELECT * FROM PERSON;[m
 ## 📚 ドキュメント[m
 [m
 - **[設定ファイル](env-conf.gradle)** - Payara ServerとHSQLDB Database環境設定[m
[32m+[m[32m- **[domain.xml.template](payara6/glassfish/domains/domain1/config/domain.xml.template)** - Payara Serverのクリーンな初期設定（Git管理対象）[m
[32m+[m[32m- **[server.xml.template](tomee8/conf/server.xml.template)** - TomEE 8のクリーンな初期設定（Git管理対象）[m
 - **各プロジェクトのREADME.md** - プロジェクト固有の詳細情報[m
 [m
[32m+[m[32m### 設定ファイルのテンプレート管理について[m
[32m+[m
[32m+[m[32m#### Payara Server - domain.xml[m
[32m+[m
[32m+[m[32m- **`domain.xml.template`**: Git管理対象の初期設定ファイル（デプロイ情報・データソース設定なし）[m
[32m+[m[32m- **`domain.xml`**: 実行時に使用される設定ファイル（Git管理対象外、実行時に動的に変更される）[m
[32m+[m[32m- 研修開催時に`initPayaraDomainConfig`タスクでテンプレートから初期化される[m
[32m+[m
[32m+[m[32m#### TomEE 8 - server.xml[m
[32m+[m
[32m+[m[32m- **`server.xml.template`**: Git管理対象の初期設定ファイル（デフォルトポート8080）[m
[32m+[m[32m- **`server.xml`**: 実行時に使用される設定ファイル（Git管理対象外、`configureTomee8Ports`で動的に変更される）[m
[32m+[m[32m- 研修開催時に`initTomee8Config`タスクでテンプレートから初期化される[m
[32m+[m[32m- **`tomee.xml`**: データソース設定（Git管理対象、手動で設定済み）[m
[32m+[m
 ## 🐛 トラブルシューティング[m
 [m
 ### Payara Serverが起動しない[m
 [m
 Payara Serverのドメインステータスを確認：[m
[31m-```powershell[m
[31m-.\gradlew statusPayara[m
[32m+[m[32m```bash[m
[32m+[m[32m./gradlew statusPayara[m
 ```[m
 [m
 既存のドメインをクリーンアップして再起動：[m
[31m-```powershell[m
[31m-.\gradlew stopPayara[m
[31m-.\gradlew startPayara[m
[32m+[m[32m```bash[m
[32m+[m[32m./gradlew stopPayara[m
[32m+[m[32m./gradlew startPayara[m
 ```[m
 [m
 プロセスが残っている場合（緊急時）：[m
[31m-```powershell[m
[32m+[m[32m```bash[m
 # 全てのJavaプロセスを強制終了（Gradleも含む）[m
[31m-.\gradlew killAllJava[m
[32m+[m[32m./gradlew killAllJava[m
 ```[m
 [m
 ### データベース接続エラー[m
 [m
 1. HSQLDB Databaseサーバーが起動していることを確認：[m
[31m-```powershell[m
[31m-.\gradlew startHsqldb[m
[32m+[m[32m```bash[m
[32m+[m[32m./gradlew startHsqldb[m
 ```[m
 [m
 2. データソースがセットアップされていることを確認：[m
[31m-```powershell[m
[31m-.\gradlew setupDataSource[m
[31m-.\gradlew pingConnectionPool[m
[32m+[m[32m```bash[m
[32m+[m[32m./gradlew setupDataSource[m
[32m+[m[32m./gradlew pingConnectionPool[m
 ```[m
 [m
 3. `env-conf.gradle`の接続情報を確認[m
[36m@@ -265,14 +302,14 @@[m [mPayara Serverのドメインステータスを確認：[m
 ### デプロイエラー[m
 [m
 アプリケーションをアンデプロイしてから再デプロイ：[m
[31m-```powershell[m
[31m-.\gradlew :projects:servlet_jsp:undeploy[m
[31m-.\gradlew :projects:servlet_jsp:deploy[m
[32m+[m[32m```bash[m
[32m+[m[32m./gradlew :projects:java:berry-books:undeploy[m
[32m+[m[32m./gradlew :projects:java:berry-books:deploy[m
 ```[m
 [m
 ### ビルドエラー[m
 [m
 クリーンビルドを実行：[m
[31m-```powershell[m
[31m-.\gradlew clean build[m
[32m+[m[32m```bash[m
[32m+[m[32m./gradlew clean build[m
 ```[m
[1mdiff --git a/build.gradle b/build.gradle[m
[1mindex ca436fa..5a008e0 100644[m
[1m--- a/build.gradle[m
[1m+++ b/build.gradle[m
[36m@@ -36,27 +36,58 @@[m [msubprojects {[m
         duplicatesStrategy = DuplicatesStrategy.INCLUDE[m
     }[m
 [m
[31m-    // Jakarta EE 10依存関係設定[m
[32m+[m[32m    // 依存関係設定[m
     dependencies {[m
[31m-        // Jakarta EE 10 API（provided scope）[m
[31m-        compileOnly "jakarta.platform:jakarta.jakartaee-api:10.0.0"[m
[32m+[m[32m        // SLF4J Logging（全プロジェクト共通）[m
[32m+[m[32m        implementation "org.slf4j:slf4j-api:2.0.12"[m
[32m+[m[32m        implementation "org.slf4j:slf4j-simple:2.0.12"[m
         [m
[31m-        // Jakarta Faces (JSF) API - JSFプロジェクト用[m
[31m-        compileOnly "jakarta.faces:jakarta.faces-api:4.0.1"[m
[31m-        [m
[31m-        // Jakarta Servlet Pages (JSP) API[m
[31m-        compileOnly "jakarta.servlet.jsp:jakarta.servlet.jsp-api:3.1.1"[m
[31m-        [m
[31m-        // JSTL API & Implementation[m
[31m-        implementation "org.glassfish.web:jakarta.servlet.jsp.jstl:3.0.1"[m
[31m-        [m
[31m-        // HSQLDB Database（ランタイム）[m
[32m+[m[32m        // HSQLDB Database（ランタイム - 全プロジェクト共通）[m
         implementation files(rootProject.file('hsqldb/lib/hsqldb.jar'))[m
         [m
[32m+[m[32m        // Struts 1.3.10 - Strutsプロジェクト用（条件付き - TomEE 8用）[m
[32m+[m[32m        if (project.name == "struts_person_rdb") {[m
[32m+[m[32m            implementation "org.apache.struts:struts-core:1.3.10"[m
[32m+[m[32m            implementation "org.apache.struts:struts-taglib:1.3.10"[m
[32m+[m[32m            implementation "commons-beanutils:commons-beanutils:1.9.4"[m
[32m+[m[32m            implementation "commons-digester:commons-digester:2.1"[m
[32m+[m[32m            implementation "commons-validator:commons-validator:1.7"[m
[32m+[m[41m            [m
[32m+[m[32m            // Java EE 8（TomEE 8はこちらを使用）[m
[32m+[m[32m            compileOnly "javax.servlet:javax.servlet-api:4.0.1"[m
[32m+[m[32m            compileOnly "javax.servlet.jsp:javax.servlet.jsp-api:2.3.3"[m
[32m+[m[32m            compileOnly "javax.ejb:javax.ejb-api:3.2.2"[m
[32m+[m[32m        } else {[m
[32m+[m[32m            // Jakarta EE 10依存関係（Payara Server用プロジェクト）[m
[32m+[m[32m            // Jakarta EE 10 API（provided scope）[m
[32m+[m[32m            compileOnly "jakarta.platform:jakarta.jakartaee-api:10.0.0"[m
[32m+[m[41m            [m
[32m+[m[32m            // Jakarta Faces (JSF) API - JSFプロジェクト用[m
[32m+[m[32m            compileOnly "jakarta.faces:jakarta.faces-api:4.0.1"[m
[32m+[m[41m            [m
[32m+[m[32m            // Jakarta Servlet Pages (JSP) API[m
[32m+[m[32m            compileOnly "jakarta.servlet.jsp:jakarta.servlet.jsp-api:3.1.1"[m
[32m+[m[41m            [m
[32m+[m[32m            // JSTL API & Implementation[m
[32m+[m[32m            implementation "org.glassfish.web:jakarta.servlet.jsp.jstl:3.0.1"[m
[32m+[m[41m            [m
[32m+[m[32m            // Jakarta Bean Validation[m
[32m+[m[32m            implementation "org.hibernate.validator:hibernate-validator:8.0.1.Final"[m
[32m+[m[41m            [m
[32m+[m[32m            // Jakarta Faces (JSF) Implementation - MVCプロジェクト用[m
[32m+[m[32m            implementation "org.glassfish:jakarta.faces:4.0.5"[m
[32m+[m[41m            [m
[32m+[m[32m            // JSON-B Implementation (Yasson) - RESTプロジェクト用[m
[32m+[m[32m            implementation "org.eclipse:yasson:3.0.3"[m
[32m+[m[32m        }[m
[32m+[m[41m        [m
         // テスト依存関係[m
         testImplementation "org.junit.jupiter:junit-jupiter:5.10.0"[m
         testImplementation "org.mockito:mockito-core:5.5.0"[m
         testImplementation "org.mockito:mockito-junit-jupiter:5.5.0"[m
[32m+[m[41m        [m
[32m+[m[32m        // Jakarta EE API（テスト用）[m
[32m+[m[32m        testImplementation "jakarta.platform:jakarta.jakartaee-api:10.0.0"[m
     }[m
 [m
     // Javaプラグイン設定[m
[36m@@ -152,6 +183,236 @@[m [msubprojects {[m
         useJUnitPlatform()[m
     }[m
 [m
[32m+[m[32m    // TomEE 8専用タスク（struts_person_rdbプロジェクトのみ）[m
[32m+[m[32m    if (project.name == "struts_person_rdb") {[m
[32m+[m[32m        // クリーンなserver.xmlをテンプレートから初期化する[m
[32m+[m[32m        task initTomee8Config doLast {[m
[32m+[m[32m            def templateFile = rootProject.file("${rootProject.conf.tomee8.home}/conf/server.xml.template")[m
[32m+[m[32m            def targetFile = rootProject.file("${rootProject.conf.tomee8.home}/conf/server.xml")[m
[32m+[m[41m            [m
[32m+[m[32m            if (!templateFile.exists()) {[m
[32m+[m[32m                throw new GradleException("Template file not found: ${templateFile}")[m
[32m+[m[32m            }[m
[32m+[m[41m            [m
[32m+[m[32m            println "Initializing TomEE 8 configuration..."[m
[32m+[m[32m            println "  Template: ${templateFile.absolutePath}"[m
[32m+[m[32m            println "  Target:   ${targetFile.absolutePath}"[m
[32m+[m[41m            [m
[32m+[m[32m            // バックアップを作成（既存ファイルが存在する場合）[m
[32m+[m[32m            if (targetFile.exists()) {[m
[32m+[m[32m                def timestamp = new java.text.SimpleDateFormat("yyyyMMdd_HHmmss").format(new Date())[m
[32m+[m[32m                def backupFile = new File(targetFile.parent, "server.xml.backup_${timestamp}")[m
[32m+[m[32m                java.nio.file.Files.copy([m
[32m+[m[32m                    targetFile.toPath(),[m
[32m+[m[32m                    backupFile.toPath(),[m
[32m+[m[32m                    java.nio.file.StandardCopyOption.REPLACE_EXISTING[m
[32m+[m[32m                )[m
[32m+[m[32m                println "  Backup:   ${backupFile.absolutePath}"[m
[32m+[m[32m            }[m
[32m+[m[41m            [m
[32m+[m[32m            // テンプレートをコピー[m
[32m+[m[32m            java.nio.file.Files.copy([m
[32m+[m[32m                templateFile.toPath(),[m
[32m+[m[32m                targetFile.toPath(),[m
[32m+[m[32m                java.nio.file.StandardCopyOption.REPLACE_EXISTING[m
[32m+[m[32m            )[m
[32m+[m[41m            [m
[32m+[m[32m            println ""[m
[32m+[m[32m            println "===================================="[m
[32m+[m[32m            println "TomEE 8 configuration initialized!"[m
[32m+[m[32m            println "===================================="[m
[32m+[m[32m            println ""[m
[32m+[m[32m            println "次のステップ:"[m
[32m+[m[32m            println "  1. ポート設定を変更: gradle :projects:java:struts_person_rdb:configureTomee8Ports"[m
[32m+[m[32m            println "  2. TomEE 8を起動: gradle :projects:java:struts_person_rdb:startTomee8"[m
[32m+[m[32m        }[m
[32m+[m[41m        [m
[32m+[m[32m        // TomEE 8のポート設定を変更[m
[32m+[m[32m        task configureTomee8Ports doLast {[m
[32m+[m[32m            def serverXml = rootProject.file("${rootProject.conf.tomee8.home}/conf/server.xml")[m
[32m+[m[41m            [m
[32m+[m[32m            if (!serverXml.exists()) {[m
[32m+[m[32m                throw new GradleException("server.xml not found: ${serverXml}")[m
[32m+[m[32m            }[m
[32m+[m[41m            [m
[32m+[m[32m            println "Configuring TomEE 8 ports..."[m
[32m+[m[41m            [m
[32m+[m[32m            def content = serverXml.text[m
[32m+[m[41m            [m
[32m+[m[32m            // HTTPポート変更[m
[32m+[m[32m            content = content.replaceAll('port="8080"', "port=\"${rootProject.conf.tomee8.httpPort}\"")[m
[32m+[m[32m            // HTTPSポート変更[m
[32m+[m[32m            content = content.replaceAll('redirectPort="8443"', "redirectPort=\"${rootProject.conf.tomee8.httpsPort}\"")[m
[32m+[m[32m            // Shutdownポート変更[m
[32m+[m[32m            content = content.replaceAll('<Server port="8005"', "<Server port=\"${rootProject.conf.tomee8.shutdownPort}\"")[m
[32m+[m[32m            // AJPポート変更[m
[32m+[m[32m            content = content.replaceAll('port="8009" protocol="AJP', "port=\"${rootProject.conf.tomee8.ajpPort}\" protocol=\"AJP")[m
[32m+[m[41m            [m
[32m+[m[32m            serverXml.text = content[m
[32m+[m[41m            [m
[32m+[m[32m            println "TomEE 8 ports configured:"[m
[32m+[m[32m            println "  - HTTP Port: ${rootProject.conf.tomee8.httpPort}"[m
[32m+[m[32m            println "  - HTTPS Port: ${rootProject.conf.tomee8.httpsPort}"[m
[32m+[m[32m            println "  - Shutdown Port: ${rootProject.conf.tomee8.shutdownPort}"[m
[32m+[m[32m            println "  - AJP Port: ${rootProject.conf.tomee8.ajpPort}"[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        // TomEE 8を起動（フォアグラウンド - Ctrl+Cで停止可能）[m
[32m+[m[32m        task startTomee8 doLast {[m
[32m+[m[32m            def catalinaCmd = rootProject.file(rootProject.conf.tomee8.catalinaCmd)[m
[32m+[m[41m            [m
[32m+[m[32m            if (!catalinaCmd.exists()) {[m
[32m+[m[32m                throw new GradleException("Catalina script not found: ${catalinaCmd}")[m
[32m+[m[32m            }[m
[32m+[m[41m            [m
[32m+[m[32m            println "Starting TomEE 8 (Foreground Mode)..."[m
[32m+[m[32m            println "  - HTTP Port: ${rootProject.conf.tomee8.httpPort}"[m
[32m+[m[32m            println "  - Access URL: http://localhost:${rootProject.conf.tomee8.httpPort}"[m
[32m+[m[32m            println ""[m
[32m+[m[32m            println "Press Ctrl+C to stop the server"[m
[32m+[m[32m            println "=========================================="[m
[32m+[m[32m            println ""[m
[32m+[m[41m            [m
[32m+[m[32m            exec {[m
[32m+[m[32m                workingDir rootProject.file(rootProject.conf.tomee8.home)[m
[32m+[m[32m                if (System.properties['os.name'].toLowerCase().contains('windows')) {[m
[32m+[m[32m                    // Windowsの場合 - setenv.batが自動的に読み込まれる[m
[32m+[m[32m                    commandLine 'cmd', '/c', 'chcp', '65001', '&', catalinaCmd.absolutePath, 'run'[m
[32m+[m[32m                } else {[m
[32m+[m[32m                    // Linux/Macの場合 - setenv.shが自動的に読み込まれる[m
[32m+[m[32m                    commandLine catalinaCmd.absolutePath, 'run'[m
[32m+[m[32m                }[m
[32m+[m[32m                standardOutput = System.out[m
[32m+[m[32m                errorOutput = System.err[m
[32m+[m[32m                ignoreExitValue = false[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        // TomEE 8を停止[m
[32m+[m[32m        task stopTomee8 doLast {[m
[32m+[m[32m            def shutdownCmd = rootProject.file(rootProject.conf.tomee8.shutdownCmd)[m
[32m+[m[41m            [m
[32m+[m[32m            if (!shutdownCmd.exists()) {[m
[32m+[m[32m                throw new GradleException("Shutdown script not found: ${shutdownCmd}")[m
[32m+[m[32m            }[m
[32m+[m[41m            [m
[32m+[m[32m            println "Stopping TomEE 8..."[m
[32m+[m[41m            [m
[32m+[m[32m            exec {[m
[32m+[m[32m                workingDir rootProject.conf.tomee8.home[m
[32m+[m[32m                commandLine shutdownCmd.absolutePath[m
[32m+[m[32m                ignoreExitValue = true[m
[32m+[m[32m            }[m
[32m+[m[41m            [m
[32m+[m[32m            println "TomEE 8 stopped successfully."[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        // TomEE 8をバックグラウンドで起動（停止はstopTomee8を使用）[m
[32m+[m[32m        task startTomee8Background doLast {[m
[32m+[m[32m            def startupCmd = rootProject.file(rootProject.conf.tomee8.startupCmd)[m
[32m+[m[41m            [m
[32m+[m[32m            if (!startupCmd.exists()) {[m
[32m+[m[32m                throw new GradleException("Startup script not found: ${startupCmd}")[m
[32m+[m[32m            }[m
[32m+[m[41m            [m
[32m+[m[32m            println "Starting TomEE 8 (Background Mode)..."[m
[32m+[m[32m            println "  - HTTP Port: ${rootProject.conf.tomee8.httpPort}"[m
[32m+[m[32m            println "  - Access URL: http://localhost:${rootProject.conf.tomee8.httpPort}"[m
[32m+[m[32m            println ""[m
[32m+[m[41m            [m
[32m+[m[32m            exec {[m
[32m+[m[32m                workingDir rootProject.file(rootProject.conf.tomee8.home)[m
[32m+[m[32m                // setenv.bat/setenv.shが自動的に読み込まれる[m
[32m+[m[32m                commandLine startupCmd.absolutePath[m
[32m+[m[32m            }[m
[32m+[m[41m            [m
[32m+[m[32m            println ""[m
[32m+[m[32m            println "TomEE 8 started in background."[m
[32m+[m[32m            println "To stop the server, run: gradle :projects:struts_person_rdb:stopTomee8"[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        // TomEE 8を再起動[m
[32m+[m[32m        task restartTomee8 {[m
[32m+[m[32m            group = "tomee8"[m
[32m+[m[32m            description = "Restart TomEE 8"[m
[32m+[m[32m            dependsOn stopTomee8[m
[32m+[m[32m            finalizedBy startTomee8Background[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        // TomEE 8にデプロイ[m
[32m+[m[32m        task deployToTomee8 {[m
[32m+[m[32m            group = "tomee8"[m
[32m+[m[32m            description = "Deploy struts_person_rdb to TomEE 8"[m
[32m+[m[32m            dependsOn "war"[m
[32m+[m[41m            [m
[32m+[m[32m            doLast {[m
[32m+[m[32m                def webappsDir = rootProject.file(rootProject.conf.tomee8.webappsDir)[m
[32m+[m[32m                def warFile = file("${buildDir}/libs/${project.name}.war")[m
[32m+[m[41m                [m
[32m+[m[32m                if (!webappsDir.exists()) {[m
[32m+[m[32m                    throw new GradleException("TomEE webapps directory not found: ${webappsDir}")[m
[32m+[m[32m                }[m
[32m+[m[41m                [m
[32m+[m[32m                if (!warFile.exists()) {[m
[32m+[m[32m                    throw new GradleException("WAR file not found: ${warFile}")[m
[32m+[m[32m                }[m
[32m+[m[41m                [m
[32m+[m[32m                println "Deploying ${warFile.name} to TomEE 8..."[m
[32m+[m[41m                [m
[32m+[m[32m                // 既存のデプロイを削除[m
[32m+[m[32m                def deployedWar = new File(webappsDir, warFile.name)[m
[32m+[m[32m                def deployedDir = new File(webappsDir, project.name)[m
[32m+[m[41m                [m
[32m+[m[32m                if (deployedWar.exists()) {[m
[32m+[m[32m                    deployedWar.delete()[m
[32m+[m[32m                }[m
[32m+[m[32m                if (deployedDir.exists()) {[m
[32m+[m[32m                    deployedDir.deleteDir()[m
[32m+[m[32m                }[m
[32m+[m[41m                [m
[32m+[m[32m                // WARファイルをコピー[m
[32m+[m[32m                java.nio.file.Files.copy([m
[32m+[m[32m                    warFile.toPath(),[m
[32m+[m[32m                    deployedWar.toPath(),[m
[32m+[m[32m                    java.nio.file.StandardCopyOption.REPLACE_EXISTING[m
[32m+[m[32m                )[m
[32m+[m[41m                [m
[32m+[m[32m                println "Application deployed successfully."[m
[32m+[m[32m                println "Access URL: http://localhost:${rootProject.conf.tomee8.httpPort}/${project.name}/"[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        // TomEE 8からアンデプロイ[m
[32m+[m[32m        task undeployFromTomee8 {[m
[32m+[m[32m            group = "tomee8"[m
[32m+[m[32m            description = "Undeploy struts_person_rdb from TomEE 8"[m
[32m+[m[41m            [m
[32m+[m[32m            doLast {[m
[32m+[m[32m                def webappsDir = rootProject.file(rootProject.conf.tomee8.webappsDir)[m
[32m+[m[32m                def deployedWar = new File(webappsDir, "${project.name}.war")[m
[32m+[m[32m                def deployedDir = new File(webappsDir, project.name)[m
[32m+[m[41m                [m
[32m+[m[32m                println "Undeploying ${project.name} from TomEE 8..."[m
[32m+[m[41m                [m
[32m+[m[32m                if (deployedWar.exists()) {[m
[32m+[m[32m                    deployedWar.delete()[m
[32m+[m[32m                    println "Removed: ${deployedWar.name}"[m
[32m+[m[32m                }[m
[32m+[m[41m                [m
[32m+[m[32m                if (deployedDir.exists()) {[m
[32m+[m[32m                    deployedDir.deleteDir()[m
[32m+[m[32m                    println "Removed: ${deployedDir.name}/"[m
[32m+[m[32m                }[m
[32m+[m[41m                [m
[32m+[m[32m                println "Application undeployed successfully."[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        // タスクをグループ化する[m
[32m+[m[32m        [initTomee8Config, configureTomee8Ports, startTomee8, startTomee8Background, stopTomee8, restartTomee8,[m[41m [m
[32m+[m[32m         deployToTomee8, undeployFromTomee8]*.group = "tomee8"[m
[32m+[m[32m    }[m
[32m+[m
     // タスクをグループ化する[m
     [setupHsqldb]*.group = "setup-init-data"[m
 }[m
[36m@@ -182,6 +443,27 @@[m [mext.conf = conf[m
 // SQLを発行するメソッド（ディレクトリ指定）[m
 def execSqlDir(dir, url, user, password, driverClass) {[m
     new File(dir).listFiles().sort{a, b -> a.name <=> b.name}.each{ File f ->[m
[32m+[m[32m        println "Executing SQL file: ${f.name}"[m
[32m+[m[32m        def sqlContent = f.getText("UTF-8")[m
[32m+[m[41m        [m
[32m+[m[32m        // コメントを除去（--で始まる行）[m
[32m+[m[32m        def cleanedSql = sqlContent.split('\n')[m
[32m+[m[32m            .collect { line ->[m
[32m+[m[32m                // 行末コメント（--以降）を除去[m
[32m+[m[32m                def commentIndex = line.indexOf('--')[m
[32m+[m[32m                if (commentIndex >= 0) {[m
[32m+[m[32m                    return line.substring(0, commentIndex)[m
[32m+[m[32m                }[m
[32m+[m[32m                return line[m
[32m+[m[32m            }[m
[32m+[m[32m            .findAll { it.trim() } // 空行を除去[m
[32m+[m[32m            .join('\n')[m
[32m+[m[41m        [m
[32m+[m[32m        // 一時ファイルに書き出し[m
[32m+[m[32m        def tempFile = File.createTempFile("sql_", ".sql", new File(System.getProperty("java.io.tmpdir")))[m
[32m+[m[32m        tempFile.deleteOnExit()[m
[32m+[m[32m        tempFile.write(cleanedSql, "UTF-8")[m
[32m+[m[41m        [m
         ant.sql(url: url,[m
             userid: user,[m
             password: password,[m
[36m@@ -189,13 +471,34 @@[m [mdef execSqlDir(dir, url, user, password, driverClass) {[m
             classpath: buildscript.configurations.classpath.asPath,[m
             encoding: "UTF-8",[m
             onerror: "continue") {[m
[31m-                fileset(file: f)[m
[32m+[m[32m                fileset(file: tempFile)[m
             }[m
     }[m
 }[m
 [m
 // SQLを発行するメソッド（ファイル指定）[m
 def execSql(file, url, user, password, driverClass) {[m
[32m+[m[32m    println "Executing SQL file: ${new File(file).name}"[m
[32m+[m[32m    def sqlContent = new File(file).getText("UTF-8")[m
[32m+[m[41m    [m
[32m+[m[32m    // コメントを除去（--で始まる行）[m
[32m+[m[32m    def cleanedSql = sqlContent.split('\n')[m
[32m+[m[32m        .collect { line ->[m
[32m+[m[32m            // 行末コメント（--以降）を除去[m
[32m+[m[32m            def commentIndex = line.indexOf('--')[m
[32m+[m[32m            if (commentIndex >= 0) {[m
[32m+[m[32m                return line.substring(0, commentIndex)[m
[32m+[m[32m            }[m
[32m+[m[32m            return line[m
[32m+[m[32m        }[m
[32m+[m[32m        .findAll { it.trim() } // 空行を除去[m
[32m+[m[32m        .join('\n')[m
[32m+[m[41m    [m
[32m+[m[32m    // 一時ファイルに書き出し[m
[32m+[m[32m    def tempFile = File.createTempFile("sql_", ".sql", new File(System.getProperty("java.io.tmpdir")))[m
[32m+[m[32m    tempFile.deleteOnExit()[m
[32m+[m[32m    tempFile.write(cleanedSql, "UTF-8")[m
[32m+[m[41m    [m
     ant.sql([m
         driver: driverClass,[m
         url: url,[m
[36m@@ -204,7 +507,7 @@[m [mdef execSql(file, url, user, password, driverClass) {[m
         classpath: buildscript.configurations.classpath.asPath,[m
         encoding: "UTF-8",[m
         onerror: "continue") {[m
[31m-            fileset(file: file)[m
[32m+[m[32m            fileset(file: tempFile)[m
         }[m
 }[m
 [m
[36m@@ -511,8 +814,8 @@[m [mtask pingConnectionPool doLast {[m
 // データソースをセットアップする（統合タスク）[m
 task setupDataSource {[m
     group = "payara"[m
[31m-    description = "Setup HSQLDB datasource on Payara Server (driver + pool + resource)"[m
[31m-    dependsOn installHsqldbDriver, createConnectionPool, createDataSource[m
[32m+[m[32m    description = "Setup HSQLDB datasource on Payara Server (pool + resource)"[m
[32m+[m[32m    dependsOn createConnectionPool, createDataSource[m
     [m
     doLast {[m
         println ""[m
[36m@@ -646,8 +949,49 @@[m [mcleanupAll.doLast {[m
     println ""[m
 }[m
 [m
[32m+[m[32m// クリーンなdomain.xmlをテンプレートから初期化する[m
[32m+[m[32mtask initPayaraDomainConfig doLast {[m
[32m+[m[32m    def templateFile = file("${conf.payaraServer.home}/glassfish/domains/${conf.payaraServer.domain}/config/domain.xml.template")[m
[32m+[m[32m    def targetFile = file("${conf.payaraServer.home}/glassfish/domains/${conf.payaraServer.domain}/config/domain.xml")[m
[32m+[m[41m    [m
[32m+[m[32m    if (!templateFile.exists()) {[m
[32m+[m[32m        throw new GradleException("Template file not found: ${templateFile}")[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    println "Initializing Payara domain configuration..."[m
[32m+[m[32m    println "  Template: ${templateFile.absolutePath}"[m
[32m+[m[32m    println "  Target:   ${targetFile.absolutePath}"[m
[32m+[m[41m    [m
[32m+[m[32m    // バックアップを作成（既存ファイルが存在する場合）[m
[32m+[m[32m    if (targetFile.exists()) {[m
[32m+[m[32m        def timestamp = new java.text.SimpleDateFormat("yyyyMMdd_HHmmss").format(new Date())[m
[32m+[m[32m        def backupFile = new File(targetFile.parent, "domain.xml.backup_${timestamp}")[m
[32m+[m[32m        java.nio.file.Files.copy([m
[32m+[m[32m            targetFile.toPath(),[m
[32m+[m[32m            backupFile.toPath(),[m
[32m+[m[32m            java.nio.file.StandardCopyOption.REPLACE_EXISTING[m
[32m+[m[32m        )[m
[32m+[m[32m        println "  Backup:   ${backupFile.absolutePath}"[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    // テンプレートをコピー[m
[32m+[m[32m    java.nio.file.Files.copy([m
[32m+[m[32m        templateFile.toPath(),[m
[32m+[m[32m        targetFile.toPath(),[m
[32m+[m[32m        java.nio.file.StandardCopyOption.REPLACE_EXISTING[m
[32m+[m[32m    )[m
[32m+[m[41m    [m
[32m+[m[32m    println ""[m
[32m+[m[32m    println "===================================="[m
[32m+[m[32m    println "Domain configuration initialized!"[m
[32m+[m[32m    println "===================================="[m
[32m+[m[32m    println ""[m
[32m+[m[32m    println "次のステップ:"[m
[32m+[m[32m    println "  1. データソースを設定: gradle setupDataSource"[m
[32m+[m[32m    println "  2. アプリケーションをデプロイ: gradle :projects:java:berry-books:deploy"[m
[32m+[m[32m}[m
[32m+[m
 // タスクをグループ化する[m
[31m-[installHsqldbDriver, createConnectionPool, createDataSource, [m
[32m+[m[32m[installHsqldbDriver, initPayaraDomainConfig, createConnectionPool, createDataSource,[m[41m [m
  pingConnectionPool, setupDataSource, deleteDataSource, deleteConnectionPool,[m
  undeployAllApps, cleanupAll]*.group = "payara"[m
[31m-[m
[1mdiff --git a/env-conf.gradle b/env-conf.gradle[m
[1mindex ab7382b..6daaf2d 100644[m
[1m--- a/env-conf.gradle[m
[1m+++ b/env-conf.gradle[m
[36m@@ -21,6 +21,36 @@[m [mpayaraServer {[m
     adminPassword = ""  // デフォルトは空パスワード[m
 }[m
 [m
[32m+[m[32m// TomEE 8設定[m
[32m+[m[32mtomee8 {[m
[32m+[m[32m    // TomEE 8ホームディレクトリ[m
[32m+[m[32m    home = "tomee8"[m
[32m+[m[41m    [m
[32m+[m[32m    // catalinaスクリプトのパス[m
[32m+[m[32m    catalinaCmd = System.properties['os.name'].toLowerCase().contains('windows')[m
[32m+[m[32m                  ? "tomee8/bin/catalina.bat"[m
[32m+[m[32m                  : "tomee8/bin/catalina.sh"[m
[32m+[m[41m    [m
[32m+[m[32m    // startupスクリプトのパス[m
[32m+[m[32m    startupCmd = System.properties['os.name'].toLowerCase().contains('windows')[m
[32m+[m[32m                 ? "tomee8/bin/startup.bat"[m
[32m+[m[32m                 : "tomee8/bin/startup.sh"[m
[32m+[m[41m    [m
[32m+[m[32m    // shutdownスクリプトのパス[m
[32m+[m[32m    shutdownCmd = System.properties['os.name'].toLowerCase().contains('windows')[m
[32m+[m[32m                  ? "tomee8/bin/shutdown.bat"[m
[32m+[m[32m                  : "tomee8/bin/shutdown.sh"[m
[32m+[m[41m    [m
[32m+[m[32m    // ポート設定[m
[32m+[m[32m    httpPort = 8088[m
[32m+[m[32m    httpsPort = 8443[m
[32m+[m[32m    ajpPort = 8009[m
[32m+[m[32m    shutdownPort = 8005[m
[32m+[m[41m    [m
[32m+[m[32m    // webappsディレクトリ[m
[32m+[m[32m    webappsDir = "tomee8/webapps"[m
[32m+[m[32m}[m
[32m+[m
 // HSQLDB Database設定[m
 hsqldb {[m
     driverClass = "org.hsqldb.jdbc.JDBCDriver"[m
[1mdiff --git a/gradle/wrapper/gradle-wrapper.jar b/gradle/wrapper/gradle-wrapper.jar[m
[1mindex e708b1c..a4b76b9 100644[m
Binary files a/gradle/wrapper/gradle-wrapper.jar and b/gradle/wrapper/gradle-wrapper.jar differ
[1mdiff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties[m
[1mindex a595206..df97d72 100644[m
[1m--- a/gradle/wrapper/gradle-wrapper.properties[m
[1m+++ b/gradle/wrapper/gradle-wrapper.properties[m
[36m@@ -1,5 +1,7 @@[m
 distributionBase=GRADLE_USER_HOME[m
 distributionPath=wrapper/dists[m
[31m-distributionUrl=https\://services.gradle.org/distributions/gradle-8.5-bin.zip[m
[32m+[m[32mdistributionUrl=https\://services.gradle.org/distributions/gradle-8.10.2-bin.zip[m
[32m+[m[32mnetworkTimeout=10000[m
[32m+[m[32mvalidateDistributionUrl=true[m
 zipStoreBase=GRADLE_USER_HOME[m
 zipStorePath=wrapper/dists[m
[1mdiff --git a/hsqldb/build/.gradle/6.7.1/fileChanges/last-build.bin b/hsqldb/build/.gradle/6.7.1/fileChanges/last-build.bin[m
[1mdeleted file mode 100644[m
[1mindex f76dd23..0000000[m
Binary files a/hsqldb/build/.gradle/6.7.1/fileChanges/last-build.bin and /dev/null differ
[1mdiff --git a/hsqldb/build/.gradle/6.7.1/fileHashes/fileHashes.lock b/hsqldb/build/.gradle/6.7.1/fileHashes/fileHashes.lock[m
[1mdeleted file mode 100644[m
[1mindex 3730e28..0000000[m
Binary files a/hsqldb/build/.gradle/6.7.1/fileHashes/fileHashes.lock and /dev/null differ
[1mdiff --git a/hsqldb/build/.gradle/6.7.1/gc.properties b/hsqldb/build/.gradle/6.7.1/gc.properties[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/hsqldb/build/.gradle/checksums/checksums.lock b/hsqldb/build/.gradle/checksums/checksums.lock[m
[1mdeleted file mode 100644[m
[1mindex f14191d..0000000[m
Binary files a/hsqldb/build/.gradle/checksums/checksums.lock and /dev/null differ
[1mdiff --git a/hsqldb/build/.gradle/configuration-cache/gc.properties b/hsqldb/build/.gradle/configuration-cache/gc.properties[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/hsqldb/build/.gradle/vcs-1/gc.properties b/hsqldb/build/.gradle/vcs-1/gc.properties[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/hsqldb/build/DocBookUtil.groovy b/hsqldb/build/DocBookUtil.groovy[m
[1mdeleted file mode 100644[m
[1mindex d3578b1..0000000[m
[1m--- a/hsqldb/build/DocBookUtil.groovy[m
[1m+++ /dev/null[m
[36m@@ -1,95 +0,0 @@[m
[31m-#!/local/groovy/bin/groovy[m
[31m-[m
[31m-/**[m
[31m- * The methods in this file may be executed directly from a native Groovy[m
[31m- * file.  Here is a sample invocations that work from another Groovy file:[m
[31m- * <PRE><CODE>[m
[31m- *   println DocBookUtil.installStyleSheets(new File('/tmp/drivertst'), false)[m
[31m- * </CODE></PRE>[m
[31m- * Just change 'false' to 'true' to install the entire stylesheet collection.[m
[31m- * Don't forget to set Java system property 'grape.config' if you want to[m
[31m- * override Grape's default one.[m
[31m- */[m
[31m-[m
[31m-@Grab(group='org.ccil.cowan.tagsoup', module='tagsoup', version='1.2.1')[m
[31m-import groovy.util.slurpersupport.GPathResult[m
[31m-import org.ccil.cowan.tagsoup.Parser[m
[31m-[m
[31m-/**[m
[31m- * Unfortunately, Grape only supports Java system properties as properties[m
[31m- * with the antsettings.xml file.[m
[31m- * Therefore, if your antsettings.xml file has any ${references} which are[m
[31m- * not system propertyes, you must add the properties to[m
[31m- * System.getProperties() before calling this method.[m
[31m- *[m
[31m- * @return newly created directory name, relative to pDir.[m
[31m- */[m
[31m-public static String installStyleSheets(File pDir, boolean allSheets) {[m
[31m-    /* Shortcutting all of this to get latest version.[m
[31m-     * They have stopped updating these.  Just get version [m
[31m-    String siteUrlString = 'https://sourceforge.net'[m
[31m-    String indexPathString = '/projects/docbook/files/docbook-xsl-ns/'[m
[31m-    String latestVersionPath = null[m
[31m-[m
[31m-    (siteUrlString + indexPathString).toURL().withReader('UTF-8') {[m
[31m-        GPathResult html = (new XmlSlurper(new Parser()).parse(it))[m
[31m-        GPathResult gPathR = html.'**'.find {[m
[31m-            it.name() == 'table' && it.@id == 'files_list'[m
[31m-        }[m
[31m-        GPathResult anchorGPathR = gPathR.tbody.tr[0].th.a[m
[31m-        latestVersionPath = anchorGPathR.@href.text()[m
[31m-    }[m
[31m-[m
[31m-    //println "($latestVersionPath)"[m
[31m-    java.util.regex.Matcher m = latestVersionPath =~  /.*\/([-\w.]+)\//[m
[31m-    assert m.matches() :[m
[31m-        "Failed to parse a version from path:  $latestVersionPath"[m
[31m-[m
[31m-    String latestVer = m.group(1)[m
[31m-    //println "($latestVer)"[m
[31m-[m
[31m-    String zipFileName = 'docbook-xsl-ns-' + latestVer + '.zip'[m
[31m-    //println "($zipFileName)"[m
[31m-    String zipUrl = "http://sourceforge.net/projects/docbook/files/docbook-xsl-ns/$latestVer/$zipFileName/download"[m
[31m-    //println "($zipUrl)"[m
[31m-    */[m
[31m-    String requiredVer = '1.78.1'[m
[31m-    String zipFileName = 'docbook-xsl-ns-' + requiredVer + '.zip'[m
[31m-    //println "($zipFileName)"[m
[31m-    // TODO:  Get URL.witInputStream usage to follow HTTP references so can[m
[31m-    // pull from sourceforge and not have dependency on this one mirror.[m
[31m-    // This is just one mirror.[m
[31m-    String zipUrl = "https://pilotfiber.dl.sourceforge.net/project/docbook/docbook-xsl-ns/$requiredVer/$zipFileName"[m
[31m-    //println "($zipUrl)"[m
[31m-[m
[31m-    File localZip = new File(System.properties['java.io.tmpdir'], zipFileName)[m
[31m-    BufferedOutputStream bos =[m
[31m-            new BufferedOutputStream(new FileOutputStream(localZip))[m
[31m-    localZip.deleteOnExit()[m
[31m-    zipUrl.toURL().withInputStream() { bos << it }[m
[31m-    bos.close()[m
[31m-    AntBuilder ant = new AntBuilder()[m
[31m-[m
[31m-    if (allSheets) {[m
[31m-        File newDir = new File(pDir, "docbook-xsl-ns-$requiredVer")[m
[31m-        assert !newDir.exists() :[m
[31m-            "New target directory already exists: $newDir.absolutePath"[m
[31m-        ant.unzip(src:localZip.absolutePath,[m
[31m-                dest:pDir.absolutePath, overwrite:'false')[m
[31m-        if (!new File(newDir, 'images').isDirectory())[m
[31m-            throw new IOException([m
[31m-                    "Extraction into '$newDir.absolutePath' failed")[m
[31m-        return "docbook-xsl-ns-$requiredVer"[m
[31m-    }[m
[31m-    File destDir = new File(pDir, "xsl-ns-images-$requiredVer")[m
[31m-    assert !destDir.exists() :[m
[31m-        "New target directory already exists: $destDir.absolutePath"[m
[31m-    ant.unzip(src:localZip.absolutePath,[m
[31m-            dest:destDir.absolutePath, overwrite:'false') {[m
[31m-        patternset { include(name: "docbook-xsl-ns-$requiredVer/images/**") }[m
[31m-        regexpmapper(from:'^[^/]+/images/(.+)$', to:/\1/)[m
[31m-    }[m
[31m-    if (!destDir.isDirectory())[m
[31m-        throw new IOException("Extraction to '$destDir' failed")[m
[31m-    return "xsl-ns-images-$requiredVer"[m
[31m-}[m
[1mdiff --git a/hsqldb/build/antivy-setup.xml b/hsqldb/build/antivy-setup.xml[m
[1mdeleted file mode 100644[m
[1mindex a6aad9e..0000000[m
[1m--- a/hsqldb/build/antivy-setup.xml[m
[1m+++ /dev/null[m
[36m@@ -1,15 +0,0 @@[m
[31m-<?xml version="1.0"?>[m
[31m-<!--[m
[31m-  Copyright (c) 2010, The HSQL Development Group. All rights reserved.[m
[31m-  Released under the HSQL license, available at http://hsqldb.org[m
[31m--->[m
[31m-<project name="hsqldb-antivy-setup">[m
[31m-  <target name="ivy-setup" depends="-ivy-setup"/>[m
[31m-[m
[31m-  <target name="-ivy-setup" unless="-ivy.is.setup">[m
[31m-    <fail>An Ant target that you have invoked, directly or indirectly, has been changed[m
[31m-to reply upon Gradle.[m
[31m-Please rerun your Ant command as a Gradle command, using 'gradlew' in place of[m
[31m-'ant'.</fail>[m
[31m-  </target>[m
[31m-</project>[m
[1mdiff --git a/hsqldb/build/build-dist.gradle b/hsqldb/build/build-dist.gradle[m
[1mdeleted file mode 100644[m
[1mindex c919a40..0000000[m
[1m--- a/hsqldb/build/build-dist.gradle[m
[1m+++ /dev/null[m
[36m@@ -1,104 +0,0 @@[m
[31m-/**[m
[31m- * $Id: build-dist.gradle 6768 2024-05-31 02:24:23Z unsaved $[m
[31m- *[m
[31m- * Invoke this build file with Gradle's -b switch for zip and jar[m
[31m- * distribution building.[m
[31m- *[m
[31m- * Unfortunately, it is impractical to encpasulate all of the needed processing[m
[31m- * here, so there is some tight coupling between this file and "build.gradle".[m
[31m- * (This file loads/applies "build.gradle").[m
[31m- *[m
[31m- *   "build-dist.gradle" and "build-dist.xml" are separate from the main[m
[31m- *   "build.*" files specifically because they are not intended for normal[m
[31m- *   end-user or developer usage.[m
[31m- *   They are only for generating full distributable packages of the app.[m
[31m- *   This build file is NOT necessary to build a distributable jar file:[m
[31m- *   that is the purpose of several tasks/targets in the main build files.[m
[31m- *[m
[31m- *   PREP:  Before building a public distribution, you must:[m
[31m- *      1: Run task/targets 'javadoc' watching for JavaDoc[m
[31m- *         authoring mistakes, and fix them.[m
[31m- *      2: Run "svn log ^/base/trunk/src/org/hsqldb/cmdline/SqlTool.java | head" and[m
[31m- *         "svn log ^/base/trunk/src/org/hsqldb/cmdline/SqlFile.java | head" to[m
[31m- *         determine the "Last Changed Rev"s of SqlTool.java and SqlFile.java.[m
[31m- *         Update the revision values in file[m
[31m- *         "../doc-src/util-guide/entities/versions.ent" accordingly.[m
[31m- *         Except check for real code changes between the *.ent revisions and[m
[31m- *         the HEAD revisions.  If only comment changes then leave *.ent as-is.[m
[31m- *      3: Update THIS_VERSION, THIS_FULL_VERSION, MAJOR, MINOR, REVISION in[m
[31m- *         "../src/org/hsqldb/persist/HsqlDatabaseProperties.java"; and[m
[31m- *         DBMS VERSION in "../src/org/hsqldb/resources/information-schema.sql".[m
[31m- *      4: Update property 'hsqldb.version' in file 'build.xml'.[m
[31m- *         For now it is conditional upon the build JDK.[m
[31m- *      5: (obsolete step) Execute task/target 'refresh-verbatim' to update code in our docs.[m
[31m- *      6: Execute task/target 'update-readme' to substitute updated variables[m
[31m- *         into some doc file(s).[m
[31m- *      7: Double-check file "../readme.txt".[m
[31m- *         May or may not need to be updated manually.[m
[31m- *      8: Commit all of the work above.[m
[31m- *      9: add or update build.properties with the publication date e.g. "doc.pubtime=2021-03-21".[m
[31m- *     10: Verify that docs build successfully.  E.g. "gradlew -i regen-docs"[m
[31m- *     11: Make a release tag.[m
[31m- *[m
[31m- *   USAGE:[m
[31m- *       1: Do a Subversion export with the release tag to a NEW directory[m
[31m- *       2: If you don't have a .properties file set up for this purpose[m
[31m- *          already, then make one outside of this work area with a distinctive[m
[31m- *          name (for auditing and so you can archive it and/or re-use it for[m
[31m- *          future distribution builds), then copy it to "build.properties"[m
[31m- *          in this directory.  (If on a good operating system, just sym-link).[m
[31m- *          This file must set Ant properties "build.label",[m
[31m- *          "dbimage.path".  (See following section about optional properties).[m
[31m- *          Set property "doc.pubtime" to the current date/time in[m
[31m- *          format like 2019-01-27 18:55:44.[m
[31m- *       3: Set up your desired build environment (JAVA_HOME of JDK11, etc.).[m
[31m- *       4: For additional Java 8 jars, use regular late-model java (prev. step)[m
[31m- *          and cross-compile by setting build properties ant.build.javac and[m
[31m- *          javac.bootcp.override.  Make sure that build.debug=false.[m
[31m- *              gradlew hsqldb sqltool[m
[31m- *          from the build directory.[m
[31m- *          After the jars are built, COMMENT OUT the cross-compile properties.[m
[31m- *       5: Run[m
[31m- *              gradlew -i -b build-dist.gradle[m
[31m- *          from the build directory..[m
[31m- *          After the distribution zip is built, it resides in /dist/ and will[m
[31m- *          be retained there if you proceed with the mvn-pub procedure.[m
[31m- *       6: If you used a properties file shared with other environments,[m
[31m- *          then comment out distribution-specific build properties, including[m
[31m- *          "doc.pubtime" (otherwise future document builds will label[m
[31m- *          incorrectly).[m
[31m- *[m
[31m- *   OPTIONAL ANT PROPERTIES[m
[31m- *       I suggest setting properties nsstylebase.url, dbxirng.url,[m
[31m- *         dbcentx.url in file "local-docbook.properties" or[m
[31m- *         "build.properties" in the external (or shared) build properties[m
[31m-           explained above), according to the[m
[31m- *         reasons documented at the top of "build-docbook.xml", and according[m
[31m- *         to the instructions there (except use the specified properties file).[m
[31m- *       Add settings for build.debug and build.optimize to change the default[m
[31m- *         compilation settings.[m
[31m- *[m
[31m- *   You may add or edit some files without them being added to the[m
[31m- *   distribution that you build:  build/build.properties,[m
[31m- *   build/local*.properties, tmp/*, classes/*, dist/*.[m
[31m- *   If you don't know if something will have an effect on the distribution[m
[31m- *   you are building, then *don't do it*.[m
[31m- *   If you were to add a "todo.txt" file to the main or build directory;[m
[31m- *   or run "gradle hsqldbtest", for example, artifacts would be added to[m
[31m- *   the distro.[m
[31m- *[m
[31m- * @author Blaine Simpson  (blaine dot simpson at admc dot com)[m
[31m- */[m
[31m-[m
[31m-project.ext.addlAntBuildFiles = [file('build-dist.xml')][m
[31m-[m
[31m-project.ext.addlAntBuildClosures = [{[m
[31m-        it.import.find{it.@file = 'build-gradled.xml'}[m
[31m-        it.@name = it.@name.text() + '_gradled'[m
[31m-        it.attributes().remove('basedir')[m
[31m-    }[m
[31m-][m
[31m-[m
[31m-apply from: 'build.gradle'[m
[31m-[m
[31m-defaultTasks 'dist'[m
[1mdiff --git a/hsqldb/build/build-dist.xml b/hsqldb/build/build-dist.xml[m
[1mdeleted file mode 100644[m
[1mindex b233b27..0000000[m
[1m--- a/hsqldb/build/build-dist.xml[m
[1m+++ /dev/null[m
[36m@@ -1,161 +0,0 @@[m
[31m-<?xml version="1.0"?>[m
[31m-<!--[m
[31m-$Id: build-dist.xml 6764 2024-05-26 15:05:10Z fredt $[m
[31m--->[m
[31m-[m
[31m-<!-- N.b. the clean targets, even 'clean-all', do not clean the "dist"[m
[31m-     subdirectory.[m
[31m-[m
[31m-     IMPORTANT!  This build file may not be invoked directly with Ant any more.[m
[31m-     Instead, use the file "build-dist.gradle" with Gradle, and that will pull[m
[31m-     in this file.  Like this:[m
[31m-     [m
[31m-         gradlew -b build-dist.gradle...[m
[31m--->[m
[31m-<project name="hsqldb-dist" default="dist" basedir="..">[m
[31m-<!--  See file "build-dist.gradle" for distribution-building instructions.  -->[m
[31m-[m
[31m-  <import file="build.xml"/>[m
[31m-[m
[31m-  <target name="state-check"[m
[31m-          description="Verifies that the current directory + Ant build env. are acceptable for building a distribution">[m
[31m-    <available property="_svn.exists" file=".svn"/>[m
[31m-    <fail if="_svn.exists"[m
[31m-          message="You need to 'export' the project to build distro"/>[m
[31m-[m
[31m-    <condition property="_label.ok">[m
[31m-      <equals arg1="${hsqldb.version}" arg2="${build.label}"/>[m
[31m-    </condition>[m
[31m-    <fail unless="_label.ok">Ant properties 'build.label' and 'hsqldb.version' must be equal.[m
[31m-(${build.label}) vs. (${hsqldb.version})[m
[31m-I suggest setting the value(s) in a "build.properties" file.</fail>[m
[31m-[m
[31m-    <copy file="doc-src/readme-template.txt" tofile="tmp/readme-generated.txt"[m
[31m-          overwrite="true">[m
[31m-      <filterchain>[m
[31m-        <expandproperties/>[m
[31m-        <tokenfilter>[m
[31m-          <!-- Intention is to strip out timestamps, since their values[m
[31m-               would cause false positives for our file comparison below.  -->[m
[31m-          <replaceregex pattern="\b20\d\d\S+\d" flags="g"/>[m
[31m-        </tokenfilter>[m
[31m-      </filterchain>[m
[31m-    </copy>[m
[31m-    <copy file="readme.txt" tofile="tmp/readme-svn.txt" overwrite="true">[m
[31m-      <filterchain>[m
[31m-        <tokenfilter>[m
[31m-          <!-- Intention is to strip out timeestamps, since their values[m
[31m-               would cause false positives for our file comparison below.  -->[m
[31m-          <replaceregex pattern="\b20\d\d\S+\d" flags="g"/>[m
[31m-        </tokenfilter>[m
[31m-      </filterchain>[m
[31m-    </copy>[m
[31m-    <condition property="_readme.ok">[m
[31m-      <filesmatch textfile="true"[m
[31m-                  file1="tmp/readme-svn.txt" file2="tmp/readme-generated.txt"/>[m
[31m-    </condition>[m
[31m-    <fail unless="_readme.ok">The 'readme.txt' file in your Subversion export contains the wrong product[m
[31m-version.  You should verify this.  If the version is indeed wrong, you should[m
[31m-abort this export, commit an updated 'readme.txt' from a work area, then retag[m
[31m-and re-export.</fail>[m
[31m-  </target>[m
[31m-[m
[31m-  <target name="dist"[m
[31m-          depends="state-check, clean-all, gen-docs"[m
[31m-          description="Build joint binary + source distribution zip package">[m
[31m-    <antcall target="javadoc" inheritrefs="true"/>[m
[31m-    <antcall target="osgi" inheritrefs="true"/>[m
[31m-    <antcall target="javadocsqltool" inheritrefs="true"/>[m
[31m-    <antcall target="sqltool" inheritrefs="true"/>[m
[31m-    <mkdir dir="dist"/>[m
[31m-    <property name="app.basedir" value="hsqldb-${hsqldb.version}"/>[m
[31m-[m
[31m-    <!-- Enforce platform-independent EOL policies on items that will be[m
[31m-         packed.  Generated docs and everything under classes/ already[m
[31m-         have EOLs enforced.[m
[31m-         To make maintenance easier, please order by srcdir, and put that[m
[31m-         attribute first.  Much easier to find what you are interested this[m
[31m-         way.[m
[31m-    -->[m
[31m-    <fixcrlf srcdir="."[m
[31m-             preservelastmodified='true' eol="crlf" includes="*.txt"/>[m
[31m-    <fixcrlf srcdir="." preservelastmodified='true' eol="lf" includes="*.html"/>[m
[31m-    <fixcrlf srcdir="bin" preservelastmodified='true' eol="crlf"[m
[31m-             includes="**/*.txt, **/*.bat, **/*.cmd"/>[m
[31m-    <fixcrlf srcdir="bin" preservelastmodified='true' eol="lf"[m
[31m-             encoding="UTF-8" includes="**/*.sh, **/*.bash, **/*.html"/>[m
[31m-    <fixcrlf srcdir="build" preservelastmodified='true' eol="crlf"[m
[31m-             includes="**/*.txt, **/*.bat, **/*.cmd"/>[m
[31m-    <fixcrlf srcdir="build" preservelastmodified='true' eol="lf"[m
[31m-             encoding="ISO-8859-1" includes="**/*.properties"/>[m
[31m-    <fixcrlf srcdir="build" preservelastmodified='true' eol="lf"[m
[31m-             encoding="UTF-8"[m
[31m-             includes="**/*.xml, **/*.list, **/*.gradle, **/*.groovy"/>[m
[31m-    <!-- Docbook or XSLT adds &#13;s on Windows.  Remove them. -->[m
[31m-    <replace dir="doc" includes="*/*.html" token="&amp;#13;"/>[m
[31m-    <fixcrlf srcdir="sample" preservelastmodified='true' eol="lf"[m
[31m-             encoding="UTF-8" excludes="**/*.txt, **/*.properties"/>[m
[31m-    <fixcrlf srcdir="sample" preservelastmodified='true' eol="crlf"[m
[31m-             includes="**/*.txt"/>[m
[31m-    <fixcrlf srcdir="sample" preservelastmodified='true' eol="lf"[m
[31m-             encoding="ISO-8859-1" includes="**/*.properties"/>[m
[31m-    <fixcrlf srcdir="src"[m
[31m-             preservelastmodified='true' eol="lf" encoding="ISO-8859-1"[m
[31m-             includes="**/*.properties, **/*.text"/>[m
[31m-    <fixcrlf srcdir="src" preservelastmodified='true' eol="lf" encoding="UTF-8"[m
[31m-             includes="**/*.flex, **/*.html, **/*.java"/>[m
[31m-    <fixcrlf srcdir="stylesheets" preservelastmodified='true' eol="lf"[m
[31m-             encoding="UTF-8"/>[m
[31m-    <!-- Exclusing test-src from distros, for now[m
[31m-    <fixcrlf srcdir="test-src"[m
[31m-             preservelastmodified='true' eol="lf" encoding="ISO-8859-1"[m
[31m-             includes="**/*.properties"/>[m
[31m-    <fixcrlf srcdir="test-src" preservelastmodified='true' eol="lf"[m
[31m-             encoding="UTF-8"[m
[31m-             includes="**/*.java, **/*.dtd, **/*.ent, **/*.exp, **/*.inc,[m
[31m-                       **/*.sql, **/*.src, **/*.xml"/>[m
[31m-    -->[m
[31m-[m
[31m-    <fixcrlf srcdir="testrun" preservelastmodified='true' eol="crlf"[m
[31m-             includes="**/*.txt"/>[m
[31m-    <!-- NOTE:  The file testrun/hsqldb/TestSelf.txt has something in it that[m
[31m-         causes any Ant filter (on UNIX) to corrupt an umlauted character.[m
[31m-         The problem is not with the umlauted character, but is the side-effect[m
[31m-         of something else in the file.  I can pull the umlauted "Zürich"[m
[31m-         string out of that file and put it into its own UTF-8 file, and Ant[m
[31m-         can filter that just fine. -->[m
[31m-    <fixcrlf srcdir="testrun"[m
[31m-             preservelastmodified='true' eol="lf" encoding="UTF-8"[m
[31m-             includes="**/*.sql, **/*.dsv, **/*.isql, **/*.nsql, **/*.inter,[m
[31m-                       **/*.bash, **/*.gradle, **/*.groovy"[m
[31m-             />[m
[31m-[m
[31m-    <move file="lib/hsqldb-osgi.jar" tofile="lib/hsqldb.jar"/>[m
[31m-[m
[31m-    <mkdir dir="data"/>[m
[31m-    <zip destfile="dist/${app.basedir}.zip">[m
[31m-      <zipfileset prefix="${app.basedir}/hsqldb" dir="."[m
[31m-                  includes="**/*.cmd, **/*.bat, **/*.bash, **/*.sh, **/*.pl,[m
[31m-                            **/*.php, **/*.init, **/*.py, build/gradlew,[m
[31m-                            build/gradle-gui, **/*.groovy"[m
[31m-                  filemode="0755"[m
[31m-                  excludes="**/.*/**, build/local**, test-src/**, doc-src/**,[m
[31m-                            *gradled*, build/gradle-app.setting,[m
[31m-                            classes/**, dist/**, local*/**, tmp/**"/>[m
[31m-      <zipfileset prefix="${app.basedir}/hsqldb" dir="."[m
[31m-                  excludes="**/.*/**, **/*.cmd, **/*.bat, **/*.bash, **/*.sh,[m
[31m-                  test-src/**, **/*.pl, **/*.php, **/*.init, **/*.py, lib/**[m
[31m-                  build/build.properties, build/local**, build/ivysettings.xml,[m
[31m-                  classes/**, dist/**, local*/**, tmp/**, doc-src/**,[m
[31m-                  build/ivysettings.xml, stylesheets/rng-catalog.xml,[m
[31m-                  build/gradle-gui, **/*.groovy,[m
[31m-                  build/gradlew, *gradled*, build/gradle-app.setting"/>[m
[31m-      <zipfileset prefix="${app.basedir}/hsqldb/doc-src" dir="doc-src"[m
[31m-                  includes="changelist_2_0.txt,hsqldb_lic.txt,hypersonic_lic.txt"/>[m
[31m-      <zipfileset prefix="${app.basedir}/hsqldb/lib" dir="lib"[m
[31m-                  includes="sqltool*.jar, javax.servlet-api*.jar"/>[m
[31m-      <zipfileset prefix="${app.basedir}/hsqldb/lib" dir="lib"[m
[31m-                  includes="hsqldb*.jar"/>[m
[31m-    </zip>[m
[31m-  </target>[m
[31m-</project>[m
[1mdiff --git a/hsqldb/build/build-docbook.xml b/hsqldb/build/build-docbook.xml[m
[1mdeleted file mode 100644[m
[1mindex bf37107..0000000[m
[1m--- a/hsqldb/build/build-docbook.xml[m
[1m+++ /dev/null[m
[36m@@ -1,516 +0,0 @@[m
[31m-<?xml version="1.0"?>[m
[31m-<!--[m
[31m-  Copyright (c) 2010, The HSQL Development Group. All rights reserved.[m
[31m-  Released under the HSQL license, available at http://hsqldb.org[m
[31m--->[m
[31m-[m
[31m-<project name="hsqldb-ant-docbook" default="gen-docs" basedir="..">[m
[31m-  <!--[m
[31m-    End-user properties of interest:[m
[31m-        validation.skip:  Set to 'true' to skip XML validation[m
[31m-        html.skip:  Set to 'true' to skip generation of DocBook whole-HTML docs[m
[31m-        chunk.skip:  Set to 'true' to skip gen. of DocBook index.html, etc.[m
[31m-        fo.skip:  Set to 'true' to skip generation of DocBook intermediate[m
[31m-                  .fo files (which are a necessary step to generate PDF).[m
[31m-        pdf.skip:  Set to 'true' to skip generation of DocBook PDF docs.[m
[31m-        doc.name:  A few targets 'require' a doc name to be specified.[m
[31m-                   If you run a target and it complains that 'doc.name' needs[m
[31m-                   to be set, then set to 'guide' or 'util-guide'.[m
[31m-        doc.target:  Targets which operate on all docs by default (regen-docs,[m
[31m-                   gen-docs, and validate-docs) may be narrowed by[m
[31m-                   setting this to 'guide' or 'util-guide' (or future docs).[m
[31m-[m
[31m-    USAGE[m
[31m-    Purpose of this build file is to generate Whole HTML, Chunked HTML,[m
[31m-    and PDF DocBook output documents from DocBook source located under a[m
[31m-    doc-src subdirectory.[m
[31m-[m
[31m-    Must have Ivy v. 2.0 or later in Ant invocation CLASSPATH.[m
[31m-    We suggest that you change-control a copy if the Ivy jar file in[m
[31m-    the bootstrap-libs subdirectory, so things will work according to the[m
[31m-    displayed message below (search below for "bootstrap-libs").[m
[31m-[m
[31m-    Normally you will "import" this file into your main Ant build file like[m
[31m-        <import file="build-docbook.xml"/>[m
[31m-    or, you can invoke targets in this file directly like[m
[31m-        ant -f build-docbook.xml...[m
[31m-[m
[31m-    OVERRIDING Ant properties used in this file:[m
[31m-    See inline instructions below for properties that you want to effect[m
[31m-    only this build file.[m
[31m-    For more general changes (say you want "javac.debug" to effect your own[m
[31m-    build file as well as this one), set them however you want in your[m
[31m-    parent Ant build file (perhaps by loading a "build.properties" or[m
[31m-    "local-docbook.properties" file).[m
[31m-[m
[31m-    To eliminate the requirement for an Internet connection, download and[m
[31m-    install the resources below and set properties 'nsstylebase.url',[m
[31m-    'dbxirng.url', and dbcentx.url' in your .properties file.  (You could also[m
[31m-    use the same method to use them from a server on your internal network).[m
[31m-    Sources:[m
[31m-        nsstylebase stylesheets:   Get the required version from[m
[31m-                http://sourceforge.net/projects/docbook/files/docbook-xsl-ns/[m
[31m-        dbxirng schema:  https://docbook.org/xml/5.0/rng/docbookxi.rng[m
[31m-          (Just the single file)[m
[31m-        dbcentx entities:  http://www.docbook.org/xml/4.5/docbook-xml-4.5.zip[m
[31m-          (Beware the zip doesn't bundle into a top-level directory, so you[m
[31m-          need to extract it into a new, appropriately named subdirectory like[m
[31m-          "docbook-xml-entities-4.5".)[m
[31m-          IMPORTANT!  Though you must install the entire contents of the zip,[m
[31m-          you set the 'dbcentx.url' value to the URL of the 'dbcentx.mod' file[m
[31m-          within it.[m
[31m-  -->[m
[31m-  <import file="antivy-setup.xml"/>[m
[31m-[m
[31m-  <!-- Since the main HSQLDB build file imports this one, relative property[m
[31m-       file specifications must be relative to the project root, not build/ -->[m
[31m-[m
[31m-  <!-- Put local env property changes in this NON-CHANGE-CONTROLLED file: -->[m
[31m-  <property file="build/local-docbook.properties"/>[m
[31m-  <!-- For change-controlled (by your project) ant-docbook-specific props: -->[m
[31m-  <property file="build/docbook.properties"/>[m
[31m-[m
[31m-  <property name="oasis.stylesheet.url"[m
[31m-            value="http://docbook.sourceforge.net/release/xsl-ns/1.78.1"/>[m
[31m-  <!-- IMPORTANT:  DO NOT CHANGE![m
[31m-                   This value must exactly match the network href values in[m
[31m-                   our *.xsl files! -->[m
[31m-[m
[31m-  <!-- See[m
[31m-       http://xml.apache.org/commons/components/resolver/resolver-article.html#ctrlresolver[m
[31m-       about these xml.catalog.* settings for the Xml Commons resolver.[m
[31m-       The docs say to use values yes/no for booleans, instead of true/false.[m
[31m-  -->[m
[31m-  <property name="xml.catalog.verbosity" value="0"/>[m
[31m-      <!-- BEWARE:  The verbosity setting seems to not work for some combination[m
[31m-      of settings.  Haven't figured out what combo, but setting it to 10 has no[m
[31m-      effect for our particular setup. -->[m
[31m-  <property name="xml.catalog.files"[m
[31m-            value="${basedir}/stylesheets/rng-catalog.xml"/>[m
[31m-  <property name="xml.catalog.prefer" value="public"/>[m
[31m-  <property name="xml.catalog.allowPI" value="yes"/>[m
[31m-  <property name="xml.catalog.staticCatalog" value="yes"/>[m
[31m-  <property name="ivy.dep.file" value="build/ivy.xml"/>[m
[31m-  <property name="ivy.settings.file" value="build/ivysettings.xml"/>[m
[31m-  <property name="distro.baseurl" value="http://hsqldb.org/doc/2.0"/>[m
[31m-[m
[31m-  <property name="docoutput.path" value="doc"/>[m
[31m-  <property name="javac.debug" value="true"/>[m
[31m-  <property name="xmlvalidation.threadstacksize" value="1M"/>[m
[31m-  <property name="dbxirng.url"[m
[31m-            value="https://docbook.org/xml/5.0/rng/docbookxi.rng"/>[m
[31m-      <!-- The "xi" variant supports Xinclude -->[m
[31m-  <property name="html.path" value="stylesheets/html.xsl"/>[m
[31m-  <property name="chunk.path" value="stylesheets/chunk.xsl"/>[m
[31m-  <property name="fo.path" value="stylesheets/fo.xsl"/>[m
[31m-  <!-- As noted at the top of this file, there are benefits to installing the[m
[31m-       sheets locally. -->[m
[31m-  <property name="nsstylebase.url" value="UNSET_STYLEBASE"/>[m
[31m-  <!--[m
[31m-  <property name="nsstylebase.url" value="${oasis.stylesheet.url}"/>[m
[31m-  -->[m
[31m-  <!-- Without setting a default value, some error messages could contain the[m
[31m-       misleading string "${nsstylebase.url}" in cases where user does not set a[m
[31m-       value and resolution fails (not that there will be a resolution failure,[m
[31m-       since this setting is optional).[m
[31m-       UPDATE:  I don't know why, but PDF generation does depend on this[m
[31m-       being usable.  Shouldn't since the other output formats don't.[m
[31m-  -->[m
[31m-  <!-- Why did I not just give a useful default value instead, to prevent[m
[31m-       builds from accessing Internet??[m
[31m-       <property name="dbcentx.url" value="UNSET_DBCHARENTS"/> -->[m
[31m-  <property name="dbcentx.url" value="https://docbook.org/xml/4.5/dbcentx.mod"/>[m
[31m-  <!-- ditto about the default value -->[m
[31m-[m
[31m-  <target name="regen-docs"[m
[31m-          description="Clean and regen project DocBook docs.  N.b this wipes javadocs too!"[m
[31m-          depends="clean-docs, gen-docs"/>[m
[31m-[m
[31m-  <property name="_for.automation.blurb"[m
[31m-    value="If you want to automate the antcalls and you don't mind using[m
[31m-Ant-contrib or Antelope, you can use one of their 'for' tasks with a DirSet."/>[m
[31m-[m
[31m-  <target name="gen-docs">[m
[31m-    <fail>You must implement your own "gen-docs" target by editing[m
[31m-"build-docbook.xml" or overriding it in your own build file which imports[m
[31m-"build-docbook.xml".[m
[31m-Your "gen-docs" target must depend on -gen-docs-setup, do an "antcall" of[m
[31m-"docbook-transform" for each doc.name, then call -gen-docs-complete.[m
[31m-[m
[31m-${_for.automation.blurb}</fail>[m
[31m-  </target>[m
[31m-[m
[31m-  <target name="validate-docs">[m
[31m-    <fail>You must implement your own "validate-docs" target[m
[31m-by editing "build-docbook.xml" or overriding it in your own build file which[m
[31m-imports "build-docbook.xml".[m
[31m-Your "validate-docs" target must do an "antcall" of "validate-doc" for each[m
[31m-doc.name.[m
[31m-[m
[31m-${_for.automation.blurb}</fail>[m
[31m-  </target>[m
[31m-[m
[31m-  <target name="-gen-docs-setup" depends="refresh-verbatim"/>[m
[31m-[m
[31m-  <target name="-gen-docs-complete">[m
[31m-    <!-- This is the highest-maintenance target of this build file.[m
[31m-         Must update the copy and fixcrlf filesets to copy exactly what[m
[31m-         needs to go to doc output branch, and enforce EOLs in all text files.[m
[31m-         The dependsets elsewhere in this file use targetfilesets, not[m
[31m-         targetfilelists, so shouldn't need maintenance there.[m
[31m-[m
[31m-         IMPORTANT:  FOR ALL copys and fixcrlfs, DO NOT USE[m
[31m-         preservelastmodified, as that will defeat our dependsets.[m
[31m-[m
[31m-         Don't do anything with apidocs, since those are handled by[m
[31m-         javadoc-specific tasks.[m
[31m-    -->[m
[31m-[m
[31m-    <!-- First, just binaries.  We enforce EOLs for all others -->[m
[31m-    <copy todir="${docoutput.path}">[m
[31m-      <!-- Fileset pretty simple, since the binaries always need to be[m
[31m-           served to end users. -->[m
[31m-      <fileset dir="doc-src"[m
[31m-               excludes="**/.*/**, **/*.txt, **/entities/**, apidocs/**,[m
[31m-                         **/*.xml, **/*.java, **/*.sql, **/*.cfg, **/*.css,[m
[31m-                         **/*.ent, **/*.rc, **/*.html, **/*.properties"/>[m
[31m-    </copy>[m
[31m-[m
[31m-    <!-- *.txt and *.xml because *.txt are speficially not copied from document[m
[31m-         base dirs and *.xml not from root or document base dirs,[m
[31m-         because these files are used for document authorship and management.-->[m
[31m-    <fixcrlf destdir="${docoutput.path}" eol="crlf"[m
[31m-             encoding="UTF-8" srcdir="doc-src"[m
[31m-             includes="verbatim/**/*.txt, images/**/*.txt"[m
[31m-             excludes="**/.*/**"/>[m
[31m-    <fixcrlf destdir="${docoutput.path}" eol="crlf"[m
[31m-             encoding="UTF-8" srcdir="doc-src"[m
[31m-             excludes="**/.*/**, verbatim/**, images/**, **/entities/**,[m
[31m-                       */*.txt, apidocs/**, readme-template.txt"[m
[31m-             includes="**/*.txt"/>[m
[31m-    <fixcrlf destdir="${docoutput.path}" eol="lf"[m
[31m-             encoding="UTF-8" srcdir="doc-src"[m
[31m-             includes="verbatim/**/*.xml, images/**/*.xml"[m
[31m-             excludes="**/.*/**"/>[m
[31m-    <fixcrlf destdir="${docoutput.path}" eol="lf"[m
[31m-             encoding="UTF-8" srcdir="doc-src"[m
[31m-             excludes="**/.*/**, verbatim/**, images/**, **/entities/**,[m
[31m-                       *.xml, */*.xml"[m
[31m-             includes="**/*.xml"/>[m
[31m-[m
[31m-    <!-- All remaining text files -->[m
[31m-    <fixcrlf destdir="${docoutput.path}" eol="lf"[m
[31m-             encoding="UTF-8" srcdir="doc-src"[m
[31m-             excludes="**/.*/**, **/entities/**, apidocs/**"[m
[31m-             includes="**/*.java, **/*.sql, **/*.cfg, **/*.css,[m
[31m-                       **/*.rc, **/*.properties"/>[m
[31m-    <!-- To allow substitution of ant-variables like ${x} in any of the text[m
[31m-         files above, just move that file type from the fixcrlf above to the[m
[31m-         copy below. -->[m
[31m-    <copy todir="${docoutput.path}">[m
[31m-      <fileset dir="doc-src" excludes="**/.*/**, **/entities/**, apidocs/**"[m
[31m-               includes="**/*.html"/>[m
[31m-      <filterchain>[m
[31m-        <expandproperties/>[m
[31m-        <fixcrlf eol="lf" encoding="UTF-8"/>[m
[31m-      </filterchain>[m
[31m-    </copy>[m
[31m-  </target>[m
[31m-[m
[31m-  <target name="docbook-transform" depends="-fop-setup"[m
[31m-          unless="-dbtransform-skip"[m
[31m-          description="Generate DocBook output for specified source doc">[m
[31m-    <fail unless="doc.name"[m
[31m-  message="Ant property 'doc.name' is required by target 'docbook-transform'."/>[m
[31m-    <available property="_htmlstyle.present" type="file" file="${html.path}"/>[m
[31m-    <available property="_chunkstyle.present" type="file" file="${chunk.path}"/>[m
[31m-    <available property="_fostyle.present" type="file" file="${fo.path}"/>[m
[31m-    <fail unless="_htmlstyle.present"[m
[31m-          message="DocBook 5 HTML style sheet missing: ${html.path}"/>[m
[31m-    <fail unless="_chunkstyle.present"[m
[31m-          message="DocBook 5 Chunk HTML style sheet missing: ${chunk.path}"/>[m
[31m-    <fail unless="_fostyle.present"[m
[31m-          message="DocBook 5 FO style sheet missing: ${fo.path}"/>[m
[31m-[m
[31m-    <dependset>[m
[31m-      <srcfileset dir="doc-src"[m
[31m-                  excludes="**/.*/**, *_lic.txt, readme*, index.html"[m
[31m-                  includes="*.*, entities/**, images/**, verbatim/**"/>[m
[31m-          <!-- Remove *_lic.txt from excludes above and below if we add any[m
[31m-               reference to license files from any of our DocBook documents.[m
[31m-          -->[m
[31m-      <targetfileset dir="tmp/doc-work"/>[m
[31m-      <targetfileset dir="${docoutput.path}"[m
[31m-             excludes="apidocs/**, readme*, index.html, *_lic.txt"/>[m
[31m-    </dependset>[m
[31m-    <dependset>[m
[31m-      <srcfileset dir="doc-src/${doc.name}" excludes="**/.*/**"/>[m
[31m-      <targetfileset dir="${docoutput.path}/${doc.name}"/>[m
[31m-      <targetfilelist dir="tmp/doc-work/${doc.name}" files="${doc.name}.fo"/>[m
[31m-    </dependset>[m
[31m-    <dependset>[m
[31m-      <srcfilelist dir="tmp/doc-work/${doc.name}" files="${doc.name}.fo"/>[m
[31m-      <targetfilelist dir="${docoutput.path}/${doc.name}"[m
[31m-                      files="${doc.name}.pdf"/>[m
[31m-    </dependset>[m
[31m-    <condition property="_htmlgen.skip" value="transform.skip">[m
[31m-      <istrue value="${html.skip}"/>[m
[31m-    </condition>[m
[31m-    <condition property="_chunkgen.skip" value="transform.skip">[m
[31m-      <istrue value="${chunk.skip}"/>[m
[31m-    </condition>[m
[31m-    <condition property="_fogen.skip" value="transform.skip">[m
[31m-      <istrue value="${fo.skip}"/>[m
[31m-    </condition>[m
[31m-    <condition property="_pdfgen.skip" value="pdfgen.skip">[m
[31m-      <istrue value="${pdf.skip}"/>[m
[31m-    </condition>[m
[31m-    <available property="_htmlgen.skip" type="file" value="transform.skip"[m
[31m-               file="${docoutput.path}/${doc.name}/${doc.name}.html"/>[m
[31m-    <available property="_chunkgen.skip" type="file" value="transform.skip"[m
[31m-               file="${docoutput.path}/${doc.name}/index.html"/>[m
[31m-    <available property="_fogen.skip" type="file" value="transform.skip"[m
[31m-               file="${docoutput.path}/${doc.name}/${doc.name}.fo"/>[m
[31m-    <available property="_pdfgen.skip" type="file" value="pdfgen.skip"[m
[31m-               file="${docoutput.path}/${doc.name}/${doc.name}.pdf"/>[m
[31m-    <property name="_htmlgen.skip" value="dummy"/>[m
[31m-    <property name="_chunkgen.skip" value="dummy"/>[m
[31m-    <property name="_fogen.skip" value="dummy"/>[m
[31m-    <property name="_pdfgen.skip" value="dummy"/>[m
[31m-[m
[31m-    <antcall target="-transform" inheritrefs="true">[m
[31m-      <param name="style.path" value="${html.path}"/>[m
[31m-      <param name="output.base"[m
[31m-             value="${docoutput.path}/${doc.name}/${doc.name}.html"/>[m
[31m-      <param name="html.format" value="true"/>[m
[31m-      <param name="${_htmlgen.skip}" value="true"/>[m
[31m-    </antcall>[m
[31m-    <antcall target="-transform" inheritrefs="true">[m
[31m-      <param name="style.path" value="${chunk.path}"/>[m
[31m-      <param name="output.base"[m
[31m-             value="${docoutput.path}/${doc.name}/dummy.html"/>[m
[31m-      <param name="html.format" value="true"/>[m
[31m-      <param name="${_chunkgen.skip}" value="true"/>[m
[31m-    </antcall>[m
[31m-    <!-- Funny place to put post-html and post-chunk processing, but Ant has[m
[31m-         no post-depends attribute: -->[m
[31m-    <mkdir dir="doc/${doc.name}"/>[m
[31m-    <fixcrlf eol="lf" encoding="UTF-8" srcdir="doc/${doc.name}"[m
[31m-             includes="*.html"/>  <!-- Make output platform-independent -->[m
[31m-    <antcall target="-transform" inheritrefs="true">[m
[31m-      <param name="style.path" value="${fo.path}"/>[m
[31m-      <param name="output.base" value="tmp/doc-work/${doc.name}/${doc.name}.fo"/>[m
[31m-      <param name="fop.format" value="true"/>[m
[31m-      <param name="${_fogen.skip}" value="true"/>[m
[31m-    </antcall>[m
[31m-    <antcall target="-fop" inheritrefs="true">[m
[31m-      <param name="${_pdfgen.skip}" value="true"/>[m
[31m-    </antcall>[m
[31m-  </target>[m
[31m-[m
[31m-  <target name="-fop" unless="pdfgen.skip">[m
[31m-    <fop format="application/pdf" basedir="doc-src/${doc.name}"[m
[31m-         fofile="tmp/doc-work/${doc.name}/${doc.name}.fo"[m
[31m-         outfile="${docoutput.path}/${doc.name}/${doc.name}.pdf"/>[m
[31m-       <!-- basedir tells base location of image files -->[m
[31m-       <!-- The fop tasks goes out to http://docbook.sourceforge.net to[m
[31m-            fetch stuff -->[m
[31m-  </target>[m
[31m-[m
[31m-  <target name="-transform" depends="-ivy-setup" unless="transform.skip">[m
[31m-    <fail unless="distro.baseurl"[m
[31m-   message="Ant property 'distro.baseurl' is required by target '-transform'."/>[m
[31m-    <fail unless="doc.name"[m
[31m-       message="Ant property 'doc.name' is required by target '-transform'."/>[m
[31m-    <available file="${style.path}" type="file" property="_sheet.present"/>[m
[31m-    <fail unless="_sheet.present"[m
[31m-          message="Missing style sheet '${style.path}'"/>[m
[31m-    <available file="doc-src/${doc.name}/${doc.name}.xml" type="file"[m
[31m-               property="_srcxml.present"/>[m
[31m-    <fail unless="_srcxml.present"[m
[31m-      message="Missing DocBook source document 'doc-src/${doc.name}/${doc.name}.xml'"/>[m
[31m-[m
[31m-    <mkdir dir="tmp/doc-work/${doc.name}"/>[m
[31m-    <tstamp>[m
[31m-      <format property="_timestamp" pattern="yyyy-MM-dd' 'HH:mm:ssZ"/>[m
[31m-    </tstamp>[m
[31m-    <condition property="_buildstamp"[m
[31m-               value="${doc.pubtime}" else="Private build @ ${_timestamp}">[m
[31m-      <isset property="doc.pubtime"/>[m
[31m-    </condition>[m
[31m-    <echo file="tmp/doc-work/${doc.name}/dynamic.ent">&lt;!--Dynamically generated Entity Values loaded by a catalog for document[m
[31m-'${doc.name}' at ${_timestamp} --&gt;[m
[31m-[m
[31m-&lt;!ENTITY doc_basename "${doc.name}"&gt;[m
[31m-&lt;!ENTITY distro_baseurl "${distro.baseurl}"&gt;[m
[31m-&lt;!ENTITY timestamp "${_buildstamp}"&gt;[m
[31m-</echo>[m
[31m-[m
[31m-    <xslt style="${style.path}" basedir="doc-src/${doc.name}"[m
[31m-          in="doc-src/${doc.name}/${doc.name}.xml"[m
[31m-          out="${output.base}" classpathref="xalan.cpref">[m
[31m-      <xmlcatalog classpathref="xalan.cpref" id="cat.ref">[m
[31m-        <!-- WOULD MUCH PREFER TO DEFINE CATALOG EXTERNALLY.[m
[31m-        Unfortunately, Ant's xmlcatalog is not seeing Apache's XML resolver.[m
[31m-          -->[m
[31m-[m
[31m-        <!-- IMPORTANT! ***************************************[m
[31m-             You must define Catalog mappings/replacements used in all of[m
[31m-             your DocBook source right here, plus those needed in the validation[m
[31m-             step need a duplicate entry in stylesheets/rng-catalog.xml.[m
[31m-             We use an Ant copy with filter to update rng-catalog.xml (in[m
[31m-             "build.xml") accordingly, but if you add Catalog[m
[31m-             mappings/replacements, you must update that system too.[m
[31m-             Ant's xmlcatalog task is pretty limiting.  No support for prefixes,[m
[31m-             and external XML Commons Resolver and external catalog files[m
[31m-             support are broken.[m
[31m-             IMPORTANT! *************************************** -->[m
[31m-        <dtd publicId="-//OASIS/ENTITIES DocBook Character Entities V4.5//EN"[m
[31m-             location="${dbcentx.url}"/>[m
[31m-        <entity location="${nsstylebase.url}/html/docbook.xsl"[m
[31m-                publicId="${oasis.stylesheet.url}/html/docbook.xsl"/>[m
[31m-        <entity location="${nsstylebase.url}/html/chunk.xsl"[m
[31m-                publicId="${oasis.stylesheet.url}/html/chunk.xsl"/>[m
[31m-        <entity location="${nsstylebase.url}/fo/docbook.xsl"[m
[31m-                publicId="${oasis.stylesheet.url}/fo/docbook.xsl"/>[m
[31m-        <entity location="tmp/doc-work/${doc.name}/dynamic.ent"[m
[31m-                publicId="-//HSQLDB/ENTITIES/DocSpecificDynamicEntities"/>[m
[31m-      </xmlcatalog>[m
[31m-      <!-- There is probably no reason to use if/unless to exclude[m
[31m-           format-specific or feature-specific settings, since settings[m
[31m-           that don't apply to a specific stylesheet will just be ignored. -->[m
[31m-[m
[31m-      <!-- N.b.:  "use.extensions" turns on all other *.extension properties.[m
[31m-                  (The boolean *.extension ones, not *.*.extensions).[m
[31m-                  If you want any off with "use.extensions" on, you must[m
[31m-                  turn them off individually.[m
[31m-                  "fop1.extensions" an exception?  See table at[m
[31m-    http://www.sagehill.net/docbookxsl/InstallingAProcessor.html#SaxonExtensions[m
[31m-      -->[m
[31m-      <param name="use.extensions" expression="1"/>[m
[31m-[m
[31m-      <param name="admon.graphics" expression="1"/>[m
[31m-      <param name="admon.graphics.path" expression="../images/db/"/>[m
[31m-      <param name="admon.graphics.extension" expression=".png"/>[m
[31m-      <param name="css.decoration" expression="1"/>[m
[31m-      <param name="annotation.support" expression="1"/>[m
[31m-      <param name="navig.graphics" expression="1"/>[m
[31m-      <param name="navig.graphics.path" expression="../images/db/"/>[m
[31m-      <param name="table.borders.with.css" expression="1"/>[m
[31m-      <param name="callouts.gaphics" expression="1"/>[m
[31m-      <param name="callouts.gaphics.path" expression="../images/db/callouts/"/>[m
[31m-      <param name="graphic.default.extension" expression=".png"/>[m
[31m-      <param name="callouts.gaphics.extension" expression=".png"/>[m
[31m-      <param name="html.stylesheet" expression="../docbook.css"[m
[31m-             if="html.format"/>[m
[31m-      <param name="shade.verbatim" expression="1" unless="html.format"/>[m
[31m-      <param name="textdata.default.encoding" expression="ISO-8859-1"/>[m
[31m-      <param name="use.id.as.filename" expression="1"/>[m
[31m-      <param name="variablelist.as.table" expression="1"/>[m
[31m-      <param name="index.on.type" expression="1"/>[m
[31m-      <param name="body.start.indent" expression="0" if="fop.format"/>[m
[31m-      <param name="table.cell.border.thickness" expression="1pt"[m
[31m-             if="fop.format"/>[m
[31m-      <param name="html.cellspacing" expression="0" if="html.format"/>[m
[31m-[m
[31m-      <!-- With this on, formatting is terrible unless column content[m
[31m-           lengths are symmetical -->[m
[31m-      <param name="tablecolumns.extension" expression="0"/>[m
[31m-[m
[31m-      <!-- Docbook-supplied png nav icons suck -->[m
[31m-      <param name="navig.graphics.extension" expression=".png"/>[m
[31m-[m
[31m-      <!-- "fop.extensions" for old FOP versions -->[m
[31m-      <param name="fop1.extensions" expression="1" if="fop.format"/>[m
[31m-[m
[31m-      <!-- This tells sections shown in single HTML pages, not levels shown in[m
[31m-           the TOC, which is governed by "toc.section.depth" -->[m
[31m-      <param name="chunk.section.depth" expression="0"/>[m
[31m-      <!-- Defaults to 1 -->[m
[31m-[m
[31m-      <!--  This has no effect, because the Docbook .xsl files specify the[m
[31m-            output encoding literally.[m
[31m-      <param name="chunker.output.encoding" expression="UTF-8"/>[m
[31m-      -->[m
[31m-[m
[31m-      <outputproperty name="encoding" value="UTF-8"/>[m
[31m-      <outputproperty name="indent" value="yes"/>[m
[31m-    </xslt>[m
[31m-  </target>[m
[31m-[m
[31m-  <target name="clean-docs" description="Remove all derived doc artifacts">[m
[31m-    <delete dir="tmp/doc-work"/>[m
[31m-    <delete dir="${docoutput.path}"/>[m
[31m-  </target>[m
[31m-[m
[31m-  <target name="-fop-setup" depends="-ivy-setup">[m
[31m-    <taskdef name="fop" classname="org.apache.fop.tools.anttasks.Fop"[m
[31m-             classpathref="fop.cpref"/>[m
[31m-  </target>[m
[31m-[m
[31m-  <target name="-ensure-ivysettings" unless="_ivysettings.present">[m
[31m-    <copy file="build/ivysettings-sample.xml" tofile="build/ivysettings.xml"/>[m
[31m-    <echo>Just created a local 'ivysettings.xml' file for you.[m
[31m-Customize this as you wish and/or set Ivy properties (or any other[m
[31m-docbook-specific local build properties) in a 'local-docbook.properties'[m
[31m-file.</echo>[m
[31m-  </target>[m
[31m-[m
[31m-  <target name="validate-doc" unless="validation.skip"[m
[31m-          depends="-validation-setup, -ivy-setup"[m
[31m-          description="Validate specified DocBook source document">[m
[31m-    <fail unless="doc.name"[m
[31m-          message="Ant property 'doc.name' is required by target 'validate'."/>[m
[31m-    <pathconvert property="msvjar.file" refid="xcsde-rngval-jar.cpref"/>[m
[31m-    <java fork="true" dir="doc-src/${doc.name}"[m
[31m-          outputproperty="out" errorproperty="err" resultproperty="exec.val"[m
[31m-          classpath="${msvjar.file}" classpathref="xcsde-rngval-deps.cpref"[m
[31m-          classname="com.admc.xml.ResolvingSchematronDriver">[m
[31m-      <sysproperty key="xml.catalog.verbosity"[m
[31m-                   value="${xml.catalog.verbosity}"/>[m
[31m-      <sysproperty key="xml.catalog.files" value="${xml.catalog.files}"/>[m
[31m-      <sysproperty key="xml.catalog.prefer" value="${xml.catalog.prefer}"/>[m
[31m-      <sysproperty key="xml.catalog.allowPI" value="${xml.catalog.allowPI}"/>[m
[31m-      <sysproperty key="xml.catalog.staticCatalog"[m
[31m-                   value="${xml.catalog.staticCatalog}"/>[m
[31m-      <jvmarg value="-Xss${xmlvalidation.threadstacksize}"/>[m
[31m-      <!-- Have tried setting -Xmx* and -XX:MaxPermSize here.[m
[31m-           No effect on speed. -->[m
[31m-      <arg value="-v"/>[m
[31m-      <arg value="${dbxirng.url}"/>[m
[31m-      <arg value="${doc.name}.xml"/>[m
[31m-    </java>[m
[31m-    <condition property="_do-abort" value="DUMMY">[m
[31m-      <not> <equals arg1="0" arg2="${exec.val}"/> </not>[m
[31m-    </condition>[m
[31m-    <fail if="_do-abort">Exiting due to Schematron JVM exit value ${exec.val}.[m
[31m-JVM stdout: ---------------------------------------------------[m
[31m-${out}[m
[31m-JVM stderr: ---------------------------------------------------[m
[31m-${err}</fail>[m
[31m-  </target>[m
[31m-[m
[31m-  <target name="refresh-verbatim"[m
[31m-          description="Update files under doc-src/verbatim">[m
[31m-    <!-- It's good to apply preservelastmodified to stuff under doc-src/,[m
[31m-         but be very careful if applying it to doc/..., since that could[m
[31m-         break our dependsets. -->[m
[31m-    <copy todir="doc-src/verbatim" preservelastmodified="true">[m
[31m-      <fileset dir=".">[m
[31m-        <present targetdir="doc-src/verbatim"/>[m
[31m-      </fileset>[m
[31m-    </copy>[m
[31m-  </target>[m
[31m-[m
[31m-  <target name="-validation-setup">[m
[31m-    <fail message="Something is wrong.  '-validation-setup' is abstract"/>[m
[31m-  </target>[m
[31m-[m
[31m-  <target name="dumplibs" description="Dump FO and PDF libs"[m
[31m-          depends="-gen-docs-setup, -fop-setup">[m
[31m-      <pathconvert property="cp2" refid="fop.cpref"/>[m
[31m-      <echo>FOP classpath (${cp2})</echo>[m
[31m-      <pathconvert property="cp1" refid="xalan.cpref"/>[m
[31m-      <echo>Xalan classpath (${cp1})</echo>[m
[31m-  </target>[m
[31m-</project>[m
[1mdiff --git a/hsqldb/build/build.gradle b/hsqldb/build/build.gradle[m
[1mdeleted file mode 100644[m
[1mindex c89abe8..0000000[m
[1m--- a/hsqldb/build/build.gradle[m
[1m+++ /dev/null[m
[36m@@ -1,647 +0,0 @@[m
[31m-defaultTasks 'hsqlhelp'[m
[31m-[m
[31m-/**[m
[31m- * The only end-user Gradle build properties used at this time are:[m
[31m- *     ivyDepFile  Path to ivy dependencies file.  Defaults to 'ivy.xml'.[m
[31m- *                 (This corresponds to Ivy's property 'ivy.dep.file').[m
[31m- *     gradled.retain  Set to 'true' to retain the temporary files[m
[31m- *                     "build-gradled.xml", "build-docbook-gradled.xml"[m
[31m- *                     in the parent (real project root) directory.[m
[31m- *                     IMPORTANT: If you get non-trivial Ant build errors,[m
[31m- *                     definitely run gradle with '-i' switch and with[m
[31m- *                     ratain.gradles true.[m
[31m- *     allTasks   Used only by the 'tasks' task.  Setting this to 'true' is[m
[31m- *                equivalent to the task-specific switch '--all' for the[m
[31m- *                out-of-the-box 'tasks' task.  I.e., our[m
[31m- *                'gradlew -PallTasks=true tasks'[m
[31m- *                emulates out-of-the-box 'gradlew tasks --all'.[m
[31m- *     newVersion  Used only by the 'updateWrapper' task, which is only for[m
[31m- *                 baseline maintainers.[m
[31m- * There are probably a few other task-specific properties, but these tasks[m
[31m- * are written to abort cleanly and tell you if they need a property set.[m
[31m- * Other build properties are loaded indirectly by Ant, so you must use[m
[31m- * Gradle's -D switch to set those Ant properties as Java system properties.[m
[31m- *[m
[31m- * @author Blaine Simpson  (blaine dot simpson at admc dot com)[m
[31m- */[m
[31m-[m
[31m-import java.util.regex.Pattern[m
[31m-import java.util.regex.Matcher[m
[31m-private Properties loadAndExpand(final File pFile) {[m
[31m-    final Pattern EXPAND_PROP = Pattern.compile '[$][{]([^}]+)[}]'[m
[31m-    final Properties rawProps = new Properties()[m
[31m-    pFile.withInputStream { rawProps.load it }[m
[31m-    List<String> urlProps = [][m
[31m-    final Properties newProps = rawProps.collectEntries { k,v ->[m
[31m-        if (!k.endsWith('(URL)')) {[m
[31m-            if (k.endsWith(')'))[m
[31m-                throw new Exception([m
[31m-                  "We only support property file type extension (URL) now: $k")[m
[31m-            return [(k):v];[m
[31m-        }[m
[31m-        final int sLen = k.length()[m
[31m-        final String newName = k.substring(0, sLen - '(URL)'.length())[m
[31m-        urlProps << newName[m
[31m-        return [(newName), v][m
[31m-    }[m
[31m-    boolean anyChange = true;[m
[31m-    while (anyChange) {[m
[31m-        anyChange = false[m
[31m-        newProps.keySet().each { k ->[m
[31m-            final Matcher expm = EXPAND_PROP.matcher newProps[k][m
[31m-            while (expm.find()) {[m
[31m-                if (expm.group(1) in System.properties) {[m
[31m-                    newProps[k] = newProps[k].replace([m
[31m-                      ('${' + expm.group(1) + '}'), System.properties[expm.group(1)])[m
[31m-                    anyChange = true[m
[31m-                } else if (expm.group(1) in newProps) {[m
[31m-                    newProps[k] = newProps[k].replace([m
[31m-                      ('${' + expm.group(1) + '}'), newProps[expm.group(1)])[m
[31m-                    anyChange = true[m
[31m-                }[m
[31m-            }[m
[31m-        }[m
[31m-    }[m
[31m-    urlProps.each { newProps[it] = new URL(newProps[it]) }[m
[31m-    return newProps[m
[31m-}[m
[31m-private void initProps(final Properties p) { p.each{ k, v-> ext[k] = v } }[m
[31m-[m
[31m-def buildPropertiesFile = file('build.properties')[m
[31m-def localBookPropertiesFile = file('local-docbook.properties')[m
[31m-if (buildPropertiesFile.isFile()) initProps(loadAndExpand(buildPropertiesFile))[m
[31m-if (localBookPropertiesFile.isFile())[m
[31m-    initProps(loadAndExpand(localBookPropertiesFile))[m
[31m-[m
[31m-repositories { mavenCentral() }[m
[31m-[m
[31m-if (!project.hasProperty('mvnBuild')) project.ext.mvnBuild = false[m
[31m-task checkIt { doLast {[m
[31m-    logger.quiet "mvnBuild is " + project.mvnBuild[m
[31m-} }[m
[31m-[m
[31m-if (!project.hasProperty('retainGradled'))[m
[31m-    ext.retainGradled = (project.hasProperty('gradled.retain')[m
[31m-        && Boolean.parseBoolean(project.property('gradled.retain')))[m
[31m-apply from: 'dependencies.gradle'[m
[31m-[m
[31m-task noop  // Quiet task for testing root-level Groovy/Gradle development[m
[31m-noop.description = 'Noop for testing Gradle'[m
[31m-[m
[31m-// This task only for SCM administrator.  Execute this task with the new 'gradle' executable.[m
[31m-task updateWrapper(type: Wrapper) { doFirst {[m
[31m-    assert project.hasProperty('newVersion') :[m
[31m-        '''Property 'newVersion' is required for task 'updateWrapper'.'''[m
[31m-    assert project.newVersion == gradle.gradleVersion :[m
[31m-        "You invoke Gradle system with version $gradle.gradleVersion instead of desired version $project.newVersion"[m
[31m-} }[m
[31m-updateWrapper { doLast {[m
[31m-    gradleVersion = project['newVersion'][m
[31m-    logger.warn 'WARNING:  Merge our customizations into the newly-generated wrapper scripts'[m
[31m-} }[m
[31m-updateWrapper.description = 'Update Gradle version.  For HSQLDB Administrators.'[m
[31m-[m
[31m-void resolveCheck(configName) {[m
[31m-    int artCount = configurations[configName].files.size()[m
[31m-    // Following test works only if deps' transitive is false.[m
[31m-    if (configurations[configName].allDependencies.size() != artCount) {[m
[31m-        logger.error([m
[31m-                "Didn't resolve all dependencies for config '$configName'.  "[m
[31m-                + configurations[configName].allDependencies.size()[m
[31m-                + ' dependencies:\n    ' + configurations[configName][m
[31m-                .allDependencies .collect({it.name}).join('\n    ')[m
[31m-                + '\nbut ' + artCount[m
[31m-                + ' resolved artifacts:\n    '[m
[31m-                + configurations[configName].files.collect({it}).join('\n    ')[m
[31m-                + '\n'[m
[31m-        )[m
[31m-        assert false : '''Didn't resolve all dependencies.'''[m
[31m-    }[m
[31m-    //configurations[configName].files.each { logger.info '+' + it }[m
[31m-    //throw new GradleException('''Quittin' early''')[m
[31m-    logger.info "$artCount  artifacts resolved"[m
[31m-}[m
[31m-[m
[31m-/*  This task will become useful for native Gradle compilations[m
[31m-compileJava.dependsOn { doLast {[m
[31m-    if (!project.hasProperty('resolveCheck.skip')[m
[31m-            || !Boolean.parseBoolean(project.property('resolveCheck.skip')))[m
[31m-        resolveCheck('compile')[m
[31m-} }[m
[31m-*/[m
[31m-[m
[31m-task checkTabs { doLast {[m
[31m-    FileTree tree = fileTree(dir: '..')[m
[31m-    tree.exclude '**/javadoc.css'[m
[31m-    tree.exclude '**/*.jar'[m
[31m-    tree.exclude '**/*.png'[m
[31m-    tree.exclude '**/*.class'[m
[31m-    tree.exclude '**/*.zip'[m
[31m-    tree.exclude '**/*.gif'[m
[31m-    tree.exclude '**/*.data'[m
[31m-    tree.exclude '**/.*/**'[m
[31m-    tree.exclude '**/images/**'[m
[31m-    tree.exclude 'sample/sample'[m
[31m-    tree.include  '*.text'[m
[31m-    tree.include  'build/*'[m
[31m-    tree.include  'src/**'[m
[31m-    tree.include  'test-src/**'[m
[31m-    tree.include  'sample/**'[m
[31m-    tree.include  'integration/**'[m
[31m-    tree.include  'bin'[m
[31m-    tree.include  'stylesheets/**'[m
[31m-    tree.include  'doc-src/**'[m
[31m-    def tabFiles = [][m
[31m-    tree.each { if (it.text.indexOf('\t') > -1) tabFiles << relativePath(it) }[m
[31m-    if (tabFiles.size() > 0) logger.quiet '  ' + tabFiles.join('\n  ')[m
[31m-} }[m
[31m-checkTabs.description = 'Reports on any text files containing tab characters'[m
[31m-[m
[31m-import groovy.xml.XmlUtil[m
[31m-import groovy.xml.StreamingMarkupBuilder[m
[31m-[m
[31m-private void recursivePush(newName, dli, msl, ips) {[m
[31m-    assert !msl.contains(newName) :[m
[31m-            "Recursion duplication for target '$newName'"[m
[31m-    if (ips.contains(newName))[m
[31m-        throw new GradleException("Recursion cycle for target '$newName'")[m
[31m-    ips.add(0, newName)[m
[31m-    dli.each { superEl ->[m
[31m-        if (superEl.contains(newName)) for (subEl in superEl) {[m
[31m-            if (subEl == newName) break[m
[31m-            if (ips.contains(subEl))[m
[31m-                throw new GradleException([m
[31m-                        "Dependency cycle exists for target '$subEl'")[m
[31m-            if (!msl.contains(subEl)) // Recurse[m
[31m-                recursivePush(subEl, dli, msl, ips)[m
[31m-        }[m
[31m-    }[m
[31m-    msl.add(newName)[m
[31m-    assert ips.remove(0) == newName : 'Internal IPS stack problem'[m
[31m-}[m
[31m-[m
[31m-import groovy.util.slurpersupport.GPathResult[m
[31m-[m
[31m-/**[m
[31m- * @param fileNameInsertion.[m
[31m- *        For translating input filenames to new output files.[m
[31m- * @closures Will call these with param of the corresponding Slurped XML[m
[31m- *           (same number of elements as number of input files).[m
[31m- *           Null to not do anything with it.[m
[31m- */[m
[31m-File[] resequenceAntDependencies(String fileNameInsertion,[m
[31m-        closures, prohibitedTasks, inFiles) {[m
[31m-    def projectGpathRs = [][m
[31m-    inFiles.each { f ->[m
[31m-        GPathResult gPathR = new XmlSlurper().parseText(f.getText('UTF-8'))[m
[31m-        assert gPathR.name() == 'project' :[m
[31m-                ("Root element in file '$f.absolutePath' not 'project': "[m
[31m-                + gPathR.name())[m
[31m-        projectGpathRs << gPathR[m
[31m-    }[m
[31m-[m
[31m-    project.ext.prohibitionMap = [:][m
[31m-    [m
[31m-    if (prohibitedTasks != null) projectGpathRs.each { pGpathR ->[m
[31m-        pGpathR.'**'.findAll {[m
[31m-            it.@target.list().size() > 0[m
[31m-        }.each { targ ->[m
[31m-            if (prohibitedTasks.contains(targ.@target.text())) {[m
[31m-                String n = targ.@target.text()[m
[31m-                if (!prohibitionMap.containsKey(n))[m
[31m-                    prohibitionMap[n] = 'ant' + n.capitalize()[m
[31m-                targ.@target = prohibitionMap[n][m
[31m-            }[m
[31m-        }[m
[31m-        prohibitedTasks.each { k ->[m
[31m-            pGpathR.target.each {[m
[31m-                if (it.@name.text() == k) {[m
[31m-                    if (!prohibitionMap.containsKey(k))[m
[31m-                        prohibitionMap[k] = 'ant' + k.capitalize()[m
[31m-                    it.@name = prohibitionMap[k][m
[31m-                }[m
[31m-                def de = it.@depends[m
[31m-                if (de.list().size() < 1) return[m
[31m-                List depEls = de.text().split(/[\s,]+/)[m
[31m-                int i = depEls.indexOf(k)[m
[31m-                if (i < 0) return[m
[31m-                if (!prohibitionMap.containsKey(k))[m
[31m-                    prohibitionMap[k] = 'ant' + k.capitalize()[m
[31m-                depEls.remove(i)[m
[31m-                depEls.add(i, prohibitionMap[k])[m
[31m-                it.@depends = depEls.join(', ')[m
[31m-            }[m
[31m-        }[m
[31m-    }[m
[31m-[m
[31m-    // 3.5: Conditionally execute user-specified closures[m
[31m-    if (closures != null) {[m
[31m-        assert closures.size() == projectGpathRs.size() :[m
[31m-               ('Size of given projectGpathRs != size of closures: '[m
[31m-               + projectGpathRs.size() + ' vs. ' + closures.size())[m
[31m-        closures.eachWithIndex { closure, i ->[m
[31m-            if (closures != null) closure(projectGpathRs[i])[m
[31m-        }[m
[31m-    }[m
[31m-[m
[31m-    // 4: Write modified Ant build file[m
[31m-    List<File> outFiles = [][m
[31m-    File outFile[m
[31m-    Pattern dotPattern = Pattern.compile('\\.')[m
[31m-    inFiles.eachWithIndex { inFile, i ->[m
[31m-        if (inFile.name.indexOf('.') < 0)[m
[31m-            throw new GradleException([m
[31m-                    'Input file name has no extension:  ' + inFile.name)[m
[31m-        outFile = new File([m
[31m-                ((project.hasProperty('resequence.destDir'))[m
[31m-                        ? project['resequence.destDir'][m
[31m-                        : inFile.getParentFile()),[m
[31m-                dotPattern.matcher(inFile.getName()).replaceFirst([m
[31m-                fileNameInsertion + '.'))[m
[31m-        outFiles << outFile[m
[31m-        logger.info "Writing '$outFile.absolutePath'"[m
[31m-        outFile.write(XmlUtil.serialize(new StreamingMarkupBuilder().bind {[m
[31m-                mkp.yield projectGpathRs[i][m
[31m-        }), 'UTF-8')[m
[31m-    }[m
[31m-    return outFiles[m
[31m-}[m
[31m-[m
[31m-// RESEQUENCE[m
[31m-project.ext.set('resequence.destDir', file('..'))[m
[31m-// The top-level entry Build file must be first!!![m
[31m-project.ext.set('sourceAntBuildFiles',[m
[31m-  [file('build.xml'), file('build-docbook.xml')])[m
[31m-if (project.hasProperty('addlAntBuildFiles'))[m
[31m-    sourceAntBuildFiles = addlAntBuildFiles + sourceAntBuildFiles[m
[31m-//throw new GradleException(sourceAntBuildFiles.join(','))[m
[31m-[m
[31m-project.ext.set('antBuildClosures', [{[m
[31m-        it.import.@file = 'build-docbook-gradled.xml'[m
[31m-        it.@name = it.@name.text() + '_gradled'[m
[31m-        it.attributes().remove('basedir')[m
[31m-        // Following two purposefully remove Ant target 'help' which is the[m
[31m-        // default target in build.xml.[m
[31m-        it.attributes().remove('default')[m
[31m-        it.target.find{ targ -> targ.@name.text() == "help" }.replaceNode {}[m
[31m-    }, {[m
[31m-        it.@name = it.@name.text() + '_gradled'[m
[31m-        it.import.replaceNode {}[m
[31m-        // Global var because needed for our replacement task definition below[m
[31m-        project.ext.set('ivySetupTaskName', '-ivy-setup')[m
[31m-        it.appendNode { target(name: ivySetupTaskName) }[m
[31m-    }[m
[31m-])[m
[31m-if (project.hasProperty('addlAntBuildClosures'))[m
[31m-    antBuildClosures = addlAntBuildClosures + antBuildClosures[m
[31m-[m
[31m-File[] outFs = resequenceAntDependencies('-gradled', antBuildClosures,[m
[31m-   // Remove mapping for 'help' since purposefully excluding Ant 'help' target[m
[31m-  tasks.findResults { it.name == 'help' ? null : it.name }.sort(), sourceAntBuildFiles)[m
[31m-[m
[31m-ant.importBuild(outFs[0].absolutePath)[m
[31m-if (!ext.retainGradled) outFs.each { it.deleteOnExit() }[m
[31m-version = ant.properties['hsqldb.version']  // Inherit version from "build.xml"[m
[31m-[m
[31m-// This removes descriptions from sub-project tasks[m
[31m-getTasks().each { t ->[m
[31m-    if (t.description != null && t.name.indexOf('.') > 0) t.description = null[m
[31m-}[m
[31m-[m
[31m-task serialver(dependsOn: ['classes16', 'util']) { doLast {[m
[31m-    assert project.hasProperty('className'):[m
[31m-            '''Property 'className' is required for task 'serialver'.'''[m
[31m-    String fileSep = System.properties['file.separator'][m
[31m-    // Could alternatively use Gradle's ExecSpec via exec(...)[m
[31m-    String javaHome = System.properties['java.home'][m
[31m-    String javacHome = (javaHome.endsWith("jre")[m
[31m-            ? javaHome.substring(0, javaHome.length() - "/jre".length())[m
[31m-            : javaHome)[m
[31m-    Process process = new ProcessBuilder([[m
[31m-        javacHome + fileSep + 'bin' + fileSep + 'serialver',[m
[31m-        '-classpath',[m
[31m-        '../classes',[m
[31m-        project.property('className')[m
[31m-    ]).redirectErrorStream(true).start()[m
[31m-    // Must read input before waitFor-ing[m
[31m-    File outFile = new File(System.properties['java.io.tmpdir'],[m
[31m-                'serialVer-' + System.properties['user.name'] + '.txt')[m
[31m-    process.inputStream.eachLine { logger.quiet it; outFile.write(it + '\n') }[m
[31m-    assert process.waitFor() == 0:  '''Execution of 'serialver' failed'''[m
[31m-    logger.warn """Also written to file '$outFile.absolutePath'[m
[31m-so you can read it into your editor."""[m
[31m-} }[m
[31m-serialver.description = "Generates Java serialversion for specified 'classname'"[m
[31m-[m
[31m-import org.apache.tools.ant.types.Path[m
[31m-tasks.getByName(ivySetupTaskName) { doLast {[m
[31m-    ant.references['xcsde-rngval-jar.cpref'] =[m
[31m-            new Path(ant.project, configurations['xcsdeRngvalJar'].asPath)[m
[31m-    ant.references['xcsde-rngval-deps.cpref'] =[m
[31m-            new Path(ant.project, configurations['xcsdeRngvalDeps'].asPath)[m
[31m-    ant.references['fop.cpref'] =[m
[31m-            new Path(ant.project, configurations['fop'].asPath)[m
[31m-    ant.references['xalan.cpref'] =[m
[31m-            new Path(ant.project, configurations['xalan'].asPath)[m
[31m-    ant.references['jflex-jar.cpref'] =[m
[31m-            new Path(ant.project, configurations['jflexJar'].asPath)[m
[31m-    ant.references['bnd-jar.cpref'] =[m
[31m-            new Path(ant.project, configurations['bndJar'].asPath)[m
[31m-} }[m
[31m-[m
[31m-private def recursiveAggregator(additions, inMap, assemblage) {[m
[31m-    additions.each { addition ->[m
[31m-        if (!assemblage.contains(addition)) {[m
[31m-            recursiveAggregator(inMap[addition], inMap, assemblage)[m
[31m-            assemblage << addition[m
[31m-        }[m
[31m-    }[m
[31m-    return assemblage[m
[31m-}[m
[31m-[m
[31m-def hsqldbTask = tasks['hsqldb'][m
[31m-hsqldbTask.outputs.file file('../lib/hsqldb.jar')[m
[31m-//hsqldbTask.inputs.source fileTree ([m
[31m-hsqldbTask.inputs.files fileTree ([m
[31m-    dir:'..',[m
[31m-    excludes: ['classes/org/hsqldb/jmx/**', 'classes/org/hsqldb/cmdline/**'],[m
[31m-    includes: ['doc/*_lic.txt', 'classes/**'][m
[31m-)[m
[31m-[m
[31m-def sqltoolTask = tasks['sqltool'][m
[31m-sqltoolTask.outputs.file file('../lib/sqltool.jar')[m
[31m-sqltoolTask.inputs.files fileTree ([m
[31m-    dir:'..',[m
[31m-    includes: ['doc/*_lic.txt', 'classes/org/hsqldb/cmdline/**',[m
[31m-            'classes/org/hsqldb/lib/**', 'classes/org/hsqldb/resources/jdklog*'][m
[31m-)[m
[31m-[m
[31m-def osgiTask = tasks['osgi'][m
[31m-osgiTask.outputs.file file('../lib/hsqldb-osgi.jar')[m
[31m-osgiTask.inputs.files files(file('../lib/hsqldb.jar'), file('hsqldb.bnd'))[m
[31m-[m
[31m-task standaloneValidation { doLast {[m
[31m-    if (!project.hasProperty('install.parent.dir')) {[m
[31m-        // Load some properties from Ant build file, for use in our message.[m
[31m-        String threadStackSize = ant.properties['xmlvalidation.threadstacksize'][m
[31m-        String xmlCatalogFiles = ant.properties['xml.catalog.files'][m
[31m-        String dbxirngUrl = ant.properties['dbxirng.url'][m
[31m-        logger.warn """If you have set build property 'install.parent.dir', then task 'standalone'[m
[31m-will install the standalone XML validator that you can use to validate HyperSQL[m
[31m-DocBook document source files.[m
[31m-If you have not set build property 'install.parent.dir', you will see these[m
[31m-instructions.[m
[31m-[m
[31m-Validating our DocBook source files requires a powerful XML validator that[m
[31m-supports Xincludes, XML catalogs, DTD entities, and other advanced XML features.[m
[31m-You can use the task 'validate-docs' or 'validate-doc' using Gradle (or Ant),[m
[31m-but if you want to run a standalone validator, we will install one for you...[m
[31m-read on.[m
[31m-[m
[31m-To use the standalone validator, xcsde-rngval, you need to know the full path[m
[31m-to the file 'xcsde-rngval-*.jar' which will reside wherever you install the[m
[31m-validator to.  You then cd to the directory containing your XML source files[m
[31m-and run a command like this:[m
[31m-[m
[31m-  java -Xss$threadStackSize -Dxml.catalog.files=$xmlCatalogFiles -jar .../xcsde-rngval-*.jar -v $dbxirngUrl file.xml...[m
[31m-[m
[31m-See the XML Commons docs about the Java System Properties to use for XML[m
[31m-catalog resolution:[m
[31m-[m
[31m-  http://xml.apache.org/commons/components/resolver/resolver-article.html#ctrlresolver[m
[31m-[m
[31m-To install the validator, just set build property 'install.parent.dir' to the[m
[31m-directory under which you want the validator installed (a new subdirectory will[m
[31m-be created) and re-run this 'standaloneValidation' task.[m
[31m-You can set the property by adding a switch to your gradlew invocation, like[m
[31m-    gradlew -P install.parent.dir=c:/Users/cindy[m
[31m-or by editing file '${projectDir.absolutePath}/build.properties' (creating it[m
[31m-if it doesn't already exist) and adding a line like[m
[31m-    install.parent.dir=c:/Users/cindy[m
[31m-Afterwards, if you want to see these instructions again, you can re-run this[m
[31m-same task, 'standaloneValidation', as many times as you want to, without the[m
[31m-property (remove the line from the properties file or omit the command-line[m
[31m-switch)."""[m
[31m-        return[m
[31m-    }[m
[31m-    String zipFileName = 'xcsde-rngval-LATEST.zip'[m
[31m-    String zipUrlString =[m
[31m-            'http://cloud.github.com/downloads/unsaved/xcsde-rngval/' +[m
[31m-            zipFileName[m
[31m-[m
[31m-    File localZip = new File(System.properties['java.io.tmpdir'], zipFileName)[m
[31m-    BufferedOutputStream bos =[m
[31m-            new BufferedOutputStream(new FileOutputStream(localZip))[m
[31m-    localZip.deleteOnExit()[m
[31m-    logger.debug localZip.absolutePath[m
[31m-    zipUrlString.toURL().withInputStream() { bos << it }[m
[31m-    bos.close()[m
[31m-[m
[31m-    File pDir = new File(project.property('install.parent.dir'))[m
[31m-    assert pDir.canWrite() : "Can't write to '$installParentDir'"[m
[31m-    // Unfortunately, the following writes temp files under build/build/tmp.[m
[31m-    // Too complicated to clean it up safely, so we'll leave it there for now.[m
[31m-    File newDir =[m
[31m-            new File(pDir, zipTree(localZip).iterator().next().parentFile.name)[m
[31m-    assert !newDir.exists() :[m
[31m-            "New target directory already exists: $newDir.absolutePath"[m
[31m-    ant.unzip(src:localZip.absolutePath,[m
[31m-            dest:pDir.absolutePath, overwrite:'false')[m
[31m-    if (!newDir.isDirectory())[m
[31m-        throw new IOException("Extraction into '$newDir.absolutePath' failed")[m
[31m-    logger.warn """Installed xcsde-rng validator to new directory: $newDir.absolutePath[m
[31m-For usage instructions, re-run this target, 'standaloneValidation' without the[m
[31m-'install.parent.dir' build property."""[m
[31m-} }[m
[31m-standaloneValidation.description =[m
[31m-        'Install standalone XML validator, and instructions for same'[m
[31m-[m
[31m-/**[m
[31m- *[m
[31m- * Override both the Gradle out-of-the-box 'help' task, as well as our HSQLDB[m
[31m- * Ant 'help' target, because the latter is very Ant-specific.[m
[31m- * To get the both of both worlds, we combine the output of Gradle's OOTB[m
[31m- * 'help' with Gradle-translated output of our Ant 'help' target.[m
[31m- */[m
[31m-task hsqlhelp { doLast {[m
[31m-    String antVer = ant.properties['ant.version'][m
[31m-            .replaceFirst('^[^\\d]*(\\d\\S+).*$', '$1')[m
[31m-    print """[m
[31m-Welcome to Gradle $gradle.gradleVersion.  (Wrapping Ant $antVer).[m
[31m-[m
[31m-To run a build, run 'gradlew <task> ...'[m
[31m-[m
[31m-To see a list of available tasks, run 'gradlew tasks'.[m
[31m-Add switch -q to make Gradle run quieter, or -i -s to run louder[m
[31m-(or -d -S for very loud).[m
[31m-[m
[31m-[m
[31m-Usage:[m
[31m-   gradlew --help           Display 'gradlew' command syntax[m
[31m-   gradlew tasks            Display main tasks.  Add swith '--all' to see all.[m
[31m-   gradlew explainjars      List all targets which build jar files[m
[31m-   gradlew explainprops     Explain how to change build properties[m
[31m-   gradlew ANYTHING ELSE    'gradlew --help' and 'gradlew tasks' for details[m
[31m-[m
[31m-examples:[m
[31m-   gradlew hsqldb[m
[31m-   gradlew clean[m
[31m-"""[m
[31m-} }[m
[31m-hsqlhelp.description = 'Displays a HyperSQL-specific help message'[m
[31m-[m
[31m-task explainprops { doLast {[m
[31m-    println '''[m
[31m-There are two types of build properties that you can change.[m
[31m-See comments at top of "build-*.xml" files for available Ant build properties.[m
[31m-See comments at top of "build-*.gradle" files for available Gradle build[m
[31m-properties.[m
[31m-[m
[31m-For property settings that you want to apply to most builds, use a Java[m
[31m-properties file named "build.properties".  For example, to usually build[m
[31m-non-debug/speed-and-size optimized Java classes, set[m
[31m-   build.debug=true[m
[31m-Whether or not you set properties in this way, you can override with[m
[31m-invocation-specific properties as follow.[m
[31m-[m
[31m-For invocation-specific Ant property settings, use -D switches.  For example[m
[31m-    gradlew -Dbuild.debug=false hsqldb[m
[31m-[m
[31m-For invocation-specific Gradle property settings, use -P switches like this:[m
[31m-    gradlew -Pgradled.retain=true hsqldb[m
[31m-'''[m
[31m-} }[m
[31m-explainprops.description = 'Explain how to change default build properties'[m
[31m-[m
[31m-task installDbImages { doLast {[m
[31m-    assert !project.hasProperty('dbimage.path') :[m
[31m-            '''Property 'dbimage.path' may not be set when running target 'installDbImages'.\n''' +[m
[31m-    'If you have it set in a properties file, please remove it and try again.'[m
[31m-    if (project.hasProperty('nsstylebase.url')) {[m
[31m-        File dbimageDir = null[m
[31m-        String nsStyleBaseUrlString = project.property('nsstylebase.url')[m
[31m-        if (nsStyleBaseUrlString.startsWith('file:')) {[m
[31m-            Matcher nsm = nsStyleBaseUrlString =~ 'file:(.+)'[m
[31m-            if (nsm.matches()) {[m
[31m-                String nsStyleBasePath = nsm.group(1)[m
[31m-                // First try relative to the Ant basedir[m
[31m-                File nsStyleBaseDir =[m
[31m-                       new File(project.projectDir.parentFile, nsStyleBasePath)[m
[31m-                if (!nsStyleBaseDir.isDirectory()) nsStyleBaseDir = null[m
[31m-                if (nsStyleBaseDir == null) {[m
[31m-                    nsStyleBaseDir = new File(nsStyleBasePath)[m
[31m-                    if (!nsStyleBaseDir.isDirectory())[m
[31m-                        nsStyleBaseDir = null[m
[31m-                }[m
[31m-                if (nsStyleBaseDir != null) {[m
[31m-                    dbimageDir = new File(nsStyleBaseDir, 'images')[m
[31m-                    if (!dbimageDir.isDirectory())[m
[31m-                        dbimageDir = null[m
[31m-                }[m
[31m-            }[m
[31m-        }[m
[31m-        if (dbimageDir != null) {[m
[31m-            file('local-docbook.properties').append([m
[31m-                    "dbimage.path=$dbimageDir".replace('\\', '\\\\') + '\n',[m
[31m-                    'ISO-8859-1')[m
[31m-            logger.warn '''File 'local-docbook.properties' updated with dbimage.path of'''[m
[31m-            logger.warn "'$dbimageDir'."[m
[31m-            logger.warn '''We used your existing 'nsstylebase.url' installation.'''[m
[31m-            return[m
[31m-        }[m
[31m-    }[m
[31m-    if (!project.hasProperty('install.parent.dir')) {[m
[31m-        logger.warn """Task 'installDbImages will install either the entire DocBook v.5 NS Style[m
[31m-Sheet distribution, or just the images resources from it.[m
[31m-Only the image resources are required, but having all of the style sheets on[m
[31m-your local file system would decrease future DocBook build times and reduce[m
[31m-dependency on network and Internet connection.[m
[31m-[m
[31m-So, now you must select an existing local directory into which the[m
[31m-'installDbImages' task will create a new directory to install the new resources[m
[31m-underneath.[m
[31m-[m
[31m-You must set Gradle property 'install.parent.dir' to the directory that you[m
[31m-have chosen.  If you want to install the entire style sheet distribution, you[m
[31m-should also set property 'install.dbstyles.entire' to true.[m
[31m-If running Gradle on the command line, rerun the 'installDbImages' task with[m
[31m--P switches like:[m
[31m-[m
[31m-    gradlew -Pinstall.parent.dir=c:\\data -Pinstall.dbstyles.entire=true installDbImages[m
[31m-[m
[31m-(Skip the second -P if you want to install only the required images).[m
[31m-If running graphically, add settings like the following to file[m
[31m-$project.projectDir.absolutePath/build.properties:[m
[31m-[m
[31m-    install.parent.dir=c:\\data[m
[31m-    install.dbstyles.entire=true[m
[31m-[m
[31m-(Skip the second setting if you want to install only the required images).[m
[31m-And then rerun the 'installDbImages' task.[m
[31m-You can remove these install.* settings when you are finished running[m
[31m-'installDbImages'.[m
[31m-"""[m
[31m-        return[m
[31m-    }[m
[31m-    boolean installAll = (project.hasProperty('install.dbstyles.entire')[m
[31m-        && Boolean.parseBoolean(project.property('install.dbstyles.entire')))[m
[31m-    File installParentDir = new File(project.property('install.parent.dir'))[m
[31m-    assert installParentDir.canWrite() : "Can't write to '$installParentDir'"[m
[31m-    GroovyScriptEngine gse = new GroovyScriptEngine([m
[31m-            [ projectDir.absolutePath ] as String[])[m
[31m-    Binding binding = new Binding()[m
[31m-    binding.setVariable('params', [installParentDir, installAll])[m
[31m-    gse.run('dbuInstallSheetsWrapper.groovy', binding)[m
[31m-    String newRootName = binding.getVariable('retVal')[m
[31m-    File newRootDir = new File(installParentDir, newRootName)[m
[31m-    File dbimageDir = null[m
[31m-    if (installAll) {[m
[31m-        dbimageDir = new File(newRootDir, 'images')[m
[31m-        file('local-docbook.properties').append([m
[31m-                "nsstylebase.url=file:$newRootDir".replace('\\', '\\\\') + '\n',[m
[31m-                'ISO-8859-1')[m
[31m-        logger.warn '''File 'local-docbook.properties' updated with nsstylebase.url of '''[m
[31m-        logger.warn "'$newRootDir'."[m
[31m-    } else {[m
[31m-        dbimageDir = newRootDir[m
[31m-    }[m
[31m-    file('local-docbook.properties')[m
[31m-            .append("dbimage.path=$dbimageDir".replace('\\', '\\\\') + '\n',[m
[31m-            'ISO-8859-1')[m
[31m-    logger.warn '''File 'local-docbook.properties' updated with dbimage.path of '''[m
[31m-    logger.warn """'$dbimageDir'.[m
[31m-[m
[31m-You will have the fastest doc builds and minimal network/Internet [m
[31m-dependencies if you use stylesheets (via 'nsstylebase.url'), schema file, and[m
[31m-entities locally, as described in comments at top of file "build-docbook.xml".[m
[31m-"""[m
[31m-} }[m
[31m-installDbImages.description = 'Install DocBook resources (minimal by default)'[m
[31m-[m
[31m-/**[m
[31m- * These task.group settings are so that 'gradle tasks' or 'gradle -t' will[m
[31m- * list and describe tasks as we want them.[m
[31m- */[m
[31m-['explainjars' , 'explainprops', 'hsqlhelp'].each {[m
[31m-    tasks[it].group = 'Help'[m
[31m-}[m
[31m-['hsqldb', 'hsqldbmin', 'hsqldbmain', 'hsqldbsources',[m
[31m- 'hsqldbutil', 'osgi', 'preprocessor', 'sqltool', 'sqltoolsources',[m
[31m- 'dbmanswing'].each {[m
[31m-    tasks[it].group = 'HyperSQL Jar Generation'[m
[31m-}[m
[31m-['checkTabs', 'serialver', 'standaloneValidation'].each {[m
[31m-    tasks[it].group = 'Utilities'[m
[31m-}[m
[31m-['gen-docs', 'regen-docs', 'installDbImages', 'javadoc', 'javadocsqltool', 'javadocdev',[m
[31m- 'validate-doc', 'validate-docs', 'javadochsqldbjar', 'javadocsqltooljar'].each {[m
[31m-    tasks[it].group = 'Documentation System'[m
[31m-}[m
[31m-['classes', 'clean', 'clean-all', 'clean-docs'].each {[m
[31m-    tasks[it].group = 'Lifecycle'[m
[31m-}[m
[31m-[m
[31m-if (prohibitionMap.size() > 0)[m
[31m-    logger.warn('''\nWARNING:  The following tasks have been renamed to avoid conflict with[m
[31m-Gradle plugin task names:[m
[31m-    ''' + prohibitionMap)[m
[1mdiff --git a/hsqldb/build/build.hsqldb.cmd b/hsqldb/build/build.hsqldb.cmd[m
[1mdeleted file mode 100644[m
[1mindex 51798b3..0000000[m
[1m--- a/hsqldb/build/build.hsqldb.cmd[m
[1m+++ /dev/null[m
[36m@@ -1,2 +0,0 @@[m
[31m-call setenv.cmd[m
[31m-call ant clean hsqldb[m
[1mdiff --git a/hsqldb/build/build.hsqldbtest.cmd b/hsqldb/build/build.hsqldbtest.cmd[m
[1mdeleted file mode 100644[m
[1mindex a340bb8..0000000[m
[1m--- a/hsqldb/build/build.hsqldbtest.cmd[m
[1m+++ /dev/null[m
[36m@@ -1,5 +0,0 @@[m
[31m-call setenv.cmd[m
[31m-call ant clean hsqldb[m
[31m-echo hsqldb jar built[m
[31m-echo the hsqldbtest target is no longer available[m
[31m-echo build.test.suite.cmd now handles the requirements directly[m
[1mdiff --git a/hsqldb/build/build.javadoc.cmd b/hsqldb/build/build.javadoc.cmd[m
[1mdeleted file mode 100644[m
[1mindex 2070b31..0000000[m
[1m--- a/hsqldb/build/build.javadoc.cmd[m
[1m+++ /dev/null[m
[36m@@ -1,4 +0,0 @@[m
[31m-call setenv.cmd[m
[31m-call ant clean javadoc[m
[31m-[m
[31m-pause[m
[1mdiff --git a/hsqldb/build/build.sqltool.cmd b/hsqldb/build/build.sqltool.cmd[m
[1mdeleted file mode 100644[m
[1mindex d0c8dc1..0000000[m
[1m--- a/hsqldb/build/build.sqltool.cmd[m
[1m+++ /dev/null[m
[36m@@ -1,2 +0,0 @@[m
[31m-call setenv.cmd[m
[31m-call ant clean sqltool[m
[1mdiff --git a/hsqldb/build/build.test.suite.cmd b/hsqldb/build/build.test.suite.cmd[m
[1mdeleted file mode 100644[m
[1mindex 9ff6b06..0000000[m
[1m--- a/hsqldb/build/build.test.suite.cmd[m
[1m+++ /dev/null[m
[36m@@ -1,3 +0,0 @@[m
[31m-call setenv.cmd[m
[31m-call ant clean hsqldb preprocessor sqltool[m
[31m-call ant -f test.xml clean.test.suite make.test.suite[m
[1mdiff --git a/hsqldb/build/build.xml b/hsqldb/build/build.xml[m
[1mdeleted file mode 100644[m
[1mindex 7ca18b2..0000000[m
[1m--- a/hsqldb/build/build.xml[m
[1m+++ /dev/null[m
[36m@@ -1,1170 +0,0 @@[m
[31m-<?xml version="1.0"?>[m
[31m-<!-- $Id: build.xml 6787 2024-09-04 09:34:08Z fredt $ -->[m
[31m-<!-- author fredt@users.sourceforge.net 2001-2022 -->[m
[31m-<!-- additional targets 2004-2022: blaine (dot) simpson (at) admc (dot) com -->[m
[31m-<project name="hsqldb" default="help" basedir="../">[m
[31m-  <!--  To see what build properties you can change, see the property elements[m
[31m-        below.[m
[31m-[m
[31m-        This loads properties in the same exact way as if you ran[m
[31m-        "ant -Dprop1name=val1 -Dprop2name=val2...", etc.  To use all[m
[31m-        defaults, you should have no 'build.properties' file.[m
[31m-        If you don't understand this or want to know about precedence or[m
[31m-        how to use an Ant properties file, look up an Ant manual or an[m
[31m-        Ant expert.[m
[31m-        If you want to know, "Can I set property 'x' in 'build.properties'",[m
[31m-        rephrase the question to yourself as "Can I run 'ant -Dx=...?"[m
[31m-        Do not address questions about property file(s) to the[m
[31m-        hsqldb community.[m
[31m-[m
[31m-    Example cross-compile settings for targeting Java 8.[m
[31m-    This is syntax for inclusion in a build.properties file.[m
[31m-    Can also set them in the build command with Ant or Gradle -D switches;[m
[31m-    or an IDE's Ant or Gradle build settings.[m
[31m-[m
[31m-ant.build.javac.target=8[m
[31m-javac.bootcp.override=/usr/lib/jvm/java-8-openjdk/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk/jre/lib/jce.jar[m
[31m-        -->[m
[31m-[m
[31m-    <property file='build/build.properties'/>[m
[31m-[m
[31m-    <property name="hsqldb.version" value="2.7.4"/>[m
[31m-[m
[31m-    <tstamp>[m
[31m-      <format property="timestamp" pattern="yyyy/MM/dd-HH:mm:ss" locale="en"/>[m
[31m-    </tstamp>[m
[31m-[m
[31m-    <property name="build.label" value="private-${timestamp}"/>[m
[31m-    <property name="hsqldb.title" value="HSQLDB"/>[m
[31m-    <property name="hsqldb.vendor" value="The HSQL Development Group"/>[m
[31m-    <property name="description"[m
[31m-              value="HyperSQL Lightweight 100% Java SQL Database Engine"/>[m
[31m-    <property name="build.sysclasspath" value="ignore"/>[m
[31m-    <property name="javac.encoding" value="ISO-8859-1"/>[m
[31m-[m
[31m-    <!-- "switch.inplace" can be set in build.properties for in-place switching of source files-->[m
[31m-    <property name="tmpsrc" value="${basedir}/tmp/switchedsrc/"/>[m
[31m-    <property name="modinfosrc" value="${basedir}/modinfo-src/"/>[m
[31m-    <property name="swsrc" value="${tmpsrc}/org.hsqldb/src/main/java/"/>[m
[31m-    <property name="swsrcmin" value="${tmpsrc}/org.hsqldb.min/src/main/java/"/>[m
[31m-    <property name="swsrctool" value="${tmpsrc}/org.hsqldb.sqltool/src/main/java/"/>[m
[31m-    <property name="libclonesrc" value="${swsrctool}org/hsqldb/cmdline/libclone"/>[m
[31m-    <property name="utilclonesrc" value="${swsrctool}org/hsqldb/cmdline/utilclone"/>[m
[31m-[m
[31m-    <!-- Hosting Junit 3.8.2 JavaDocs at hsqldb.org since it's not available[m
[31m-         expanded anywhere on Internet that I can find. -->[m
[31m-    <property name="junit.doc.link"[m
[31m-              value="http://www.hsqldb.org/doc/junit-3.8.2-javadoc/"/>[m
[31m-[m
[31m-    <!-- It is safe to override these with settings in your own[m
[31m-         build.properties file. -->[m
[31m-    <property name="build.debug" value="false"/>[m
[31m-[m
[31m-    <property name="servletapi.lib" value="lib/javax.servlet-api-3.1.0.jar"/>[m
[31m-    <property name="junit38.lib" value="lib/junit.jar"/>[m
[31m-    <property name='jflex.lib' value='lib/JFlex.jar'/>[m
[31m-[m
[31m-    <target name='explainjars'[m
[31m-            description="List description of jars that you can build">[m
[31m-      <echo>Ant version: ${ant.version} </echo>[m
[31m-      <echo>Java version: ${java.version} </echo>[m
[31m-      <echo>HSQLDB version: ${hsqldb.version} </echo>[m
[31m-      <echo>Sources directory: ${swsrc} </echo>[m
[31m-      <echo>[m
[31m-jar filename    build command   explanation[m
[31m---------------  -------------   -----------------------------------[m
[31m-hsqldb.jar      ant hsqldb      Default distribution jar[m
[31m-                                with GUI client, server and[m
[31m-                                databse engine functionality.[m
[31m-hsqldbmain.jar  ant hsqldbmain  No GUI client programs.[m
[31m-hsqldbmin.jar   ant hsqldbmin   No GUI client or server.[m
[31m-                                Supports in-process database,[m
[31m-                                can connect to HyperSQL Servers[m
[31m-hsqldbswing.jar ant dbmanswing  DatabaseManagerSwing GUI client[m
[31m-hsqldbutil.jar  ant hsqldbutil  DatabaseManagers and TransferTool[m
[31m-hsqldbtest.jar  ant hsqldbtest  All, including test classes[m
[31m-sqltool.jar     ant sqltool     SqlTool app (no JDBC driver)</echo>[m
[31m-    </target>[m
[31m-[m
[31m-    <target name="help" description="Top-level help message">[m
[31m-      <echo>Ant version: ${ant.version} </echo>[m
[31m-      <echo>usage:[m
[31m-   ant -help            Display ant help screen[m
[31m-   ant -projecthelp     Display all invocable targets[m
[31m-   ant explainjars      List all targets which build jar files[m
[31m-   ant ANYTHING ELSE    Run 'ant -projecthelp' for details[m
[31m-[m
[31m-examples:[m
[31m-   ant hsqldb[m
[31m-   ant clean</echo>[m
[31m-    </target>[m
[31m-[m
[31m-    <target name="-javajsse">[m
[31m-      <available classname="javax.net.ssl.SSLSession" property="ant.java.hasjsse"/>[m
[31m-      <echo message="ant.java.hasjsse=${ant.java.hasjsse}" />[m
[31m-    </target>[m
[31m-[m
[31m-    <!-- set up java compatibility level or fail -->[m
[31m-    <target name="-set-jvmvars">[m
[31m-    <!-- Besides this one target taking the place of 4 targets (-javaversionX),[m
[31m-         this target eliminates the redundancy in those methods by making a[m
[31m-         single class-existence-test definitively responsible for determining if[m
[31m-         JVM X is supported.[m
[31m-         It is sufficient for this purpose if the test classes used are[m
[31m-         verified to be present in version X and in all newer versions (> X)[m
[31m-         (i.e. that the class is not removed from some higher JVM). -->[m
[31m-      <condition property="_crosswithoutbcp"> <and>[m
[31m-        <isset property="ant.build.javac.target"/>[m
[31m-        <not> <isset property="javac.bootcp.override"/> </not>[m
[31m-      </and> </condition>[m
[31m-      <fail if="_crosswithoutbcp">[m
[31m-        If cross-compiling, you  must set property 'javac.bootcp.override'[m
[31m-      </fail>[m
[31m-      <echo>src originally {${ant.build.javac.source}}</echo>[m
[31m-      <condition property="ant.build.javac.source"[m
[31m-                 value="${ant.build.javac.target}">[m
[31m-        <isset property="ant.build.javac.target"/>[m
[31m-      </condition>[m
[31m-      <condition property="ant.java.iscjava08"><and>[m
[31m-        <available classname="java.sql.JDBCType" property="ant.java.iscjava08"/>[m
[31m-        <!-- only need to check for EARLIER javac.target values, not later -->[m
[31m-        <not><matches string="${ant.build.javac.target}"[m
[31m-                      pattern="^(?:1[.])?(1|2|3|4|5|6|7)$"/></not>[m
[31m-      </and></condition>[m
[31m-      <condition property="ant.java.iscjava11"><and>[m
[31m-        <available classname="java.sql.ShardingKey" property="ant.java.iscjava11"/>[m
[31m-        <!-- only need to check for EARLIER javac.target values, not later -->[m
[31m-        <not><matches string="${ant.build.javac.target}"[m
[31m-                      pattern="^(?:1[.])?(1|2|3|4|5|6|7|8)$"/></not>[m
[31m-      </and></condition>[m
[31m-      <fail if="debug.targetjvm">[m
[31m-        specified compile target: ${ant.build.javac.target}[m
[31m-        derived version:  8?${ant.java.iscjava08}  11?${ant.java.iscjava11}[m
[31m-        src (${ant.build.javac.source})[m
[31m-        targ (${ant.build.javac.target})[m
[31m-        bcp (${javac.bootcp.override})[m
[31m-      </fail>[m
[31m-    </target>[m
[31m-[m
[31m-    <target name="-prepare" depends="-set-jvmvars">[m
[31m-      <mkdir dir="classes" />[m
[31m-      <mkdir dir="${swsrc}" />[m
[31m-      <mkdir dir="${swsrcmin}" />[m
[31m-      <mkdir dir="${swsrctool}" />[m
[31m-[m
[31m-      <condition property='jdk8string' value='' else='-jdk8'>[m
[31m-        <isset property='ant.java.iscjava11'/>[m
[31m-      </condition>[m
[31m-[m
[31m-    </target>[m
[31m-[m
[31m-    <target name="-prepare-javadoc" depends="sw-hsqldb">[m
[31m-      <delete dir="doc/apidocs"/>[m
[31m-      <!-- Must be vigilant about cleaning up from previous runs, since this[m
[31m-           same directory is used for both public API spec, and the full[m
[31m-           code-base API spec.[m
[31m-           There is no performance penalty, since the javadoc task regenerates[m
[31m-           everything each run.[m
[31m-       -->[m
[31m-      <copy todir="doc/apidocs">[m
[31m-        <!-- IMPORTANT:[m
[31m-             Add a fixcrlf if we add non-binary files to doc-src/apidocs. -->[m
[31m-        <fileset dir="doc-src/apidocs"/>[m
[31m-      </copy>[m
[31m-    </target>[m
[31m-[m
[31m-    <target name="-prepare-javadoc-sqltool" depends="sw-sqltool">[m
[31m-        <delete dir="doc/apidocssqltool"/>[m
[31m-        <!-- Must be vigilant about cleaning up from previous runs, since this[m
[31m-             same directory is used for both public API spec, and the full[m
[31m-             code-base API spec.[m
[31m-             There is no performance penalty, since the javadoc task regenerates[m
[31m-             everything each run.[m
[31m-         -->[m
[31m-        <copy todir="doc/apidocssqltool">[m
[31m-            <!-- IMPORTANT:[m
[31m-                 Add a fixcrlf if we add non-binary files to doc-src/apidocs. -->[m
[31m-            <fileset dir="doc-src/apidocs"/>[m
[31m-        </copy>[m
[31m-    </target>[m
[31m-[m
[31m-    <target name="clean" depends="-clean, -clean-switch-branch"[m
[31m-            description="Delete the /classes and work directories created by ant tasks">[m
[31m-      <echo message="Use the 'clean-all' target to also purge generated doc and .jar files"/>[m
[31m-    </target>[m
[31m-[m
[31m-    <target name="cleanclasses" depends="-clean"[m
[31m-            description="Delete the /classes directory">[m
[31m-    </target>[m
[31m-[m
[31m-    <target name="-clean">[m
[31m-      <delete dir="classes"/>[m
[31m-    </target>[m
[31m-[m
[31m-    <target name="clean-all" depends="-clean, -clean-switch-branch, clean-docs"[m
[31m-            description="Same as clean but delete the jar and doc files as well">[m
[31m-      <delete>[m
[31m-        <fileset dir="lib" includes="sqltool.jar, hsqldb.jar, hsqldb-osgi.jar"/>[m
[31m-      </delete>[m
[31m-    </target>[m
[31m-[m
[31m-    <target name="sw-sqltool" depends="-prepare">[m
[31m-        <delete file="classes/module-info.class"/>[m
[31m-        <delete file="${swsrctool}/module-info.java"/>[m
[31m-        <mkdir dir='${swsrctool}/org/hsqldb/cmdline'/>[m
[31m-        <copy todir='${swsrctool}/org/hsqldb/cmdline' preservelastmodified='true'>[m
[31m-            <fileset dir='src/org/hsqldb/cmdline' includes='**/*'/>[m
[31m-        </copy>[m
[31m-        <antcall target="-clone-shared-sources" inheritrefs="true"/>[m
[31m-[m
[31m-        <antcall target="-copy-mdescriptor" inheritrefs="true">[m
[31m-            <param name="module.name" value="org.hsqldb.sqltool"/>[m
[31m-        </antcall>[m
[31m-    </target>[m
[31m-[m
[31m-    <target name="sw-hsqldb-exclude" if="ant.java.iscjava11">[m
[31m-        <delete file="${swsrc}/org/hsqldb/server/Servlet.java"/>[m
[31m-    </target>[m
[31m-[m
[31m-[m
[31m-    <target name="sw-hsqldb" depends="-prepare">[m
[31m-        <delete file="classes/module-info.class"/>[m
[31m-        <delete file="${swsrc}/module-info.java"/>[m
[31m-        <copy todir='${swsrc}' preservelastmodified='true'>[m
[31m-            <fileset dir='src' includes='**/*'[m
[31m-                     excludes="org/hsqldb/cmdline org/hsqldb/sample/**/*[m
[31m-                     org/hsqldb/test/**/*"[m
[31m-            />[m
[31m-        </copy>[m
[31m-[m
[31m-        <antcall target="sw-hsqldb-exclude" inheritrefs="true"/>[m
[31m-[m
[31m-        <antcall target="-copy-mdescriptor" inheritrefs="true">[m
[31m-            <param name="module.name" value="org.hsqldb"/>[m
[31m-        </antcall>[m
[31m-    </target>[m
[31m-[m
[31m-    <!-- an optional target that uses the same src dir as sw-hsqldb -->[m
[31m-    <target name="sw-hsqldbmin" depends="-prepare">[m
[31m-        <delete file="${swsrcmin}/module-info.java"/>[m
[31m-[m
[31m-        <antcall target="-copy-mdescriptor" inheritrefs="true">[m
[31m-            <param name="module.name" value="org.hsqldb.min"/>[m
[31m-        </antcall>[m
[31m-    </target>[m
[31m-[m
[31m-    <target name="mdesc-hsqldbmin" depends="sw-hsqldbmin" if="ant.java.iscjava11" >[m
[31m-        <javac srcdir="${swsrcmin}"[m
[31m-               bootclasspath="${javac.bootcp.override}"[m
[31m-               sourcepath=""[m
[31m-               includeantruntime="false"[m
[31m-               encoding="${javac.encoding}"[m
[31m-               destdir="classes"[m
[31m-               debug="${build.debug}"[m
[31m-               classpath="${servletapi.lib}">[m
[31m-            <include name="module-info.java"/>[m
[31m-        </javac>[m
[31m-[m
[31m-    </target>[m
[31m-[m
[31m-    <target name="classes-servlet" description="compiles Servlet class" unless="ant.java.iscjava11">[m
[31m-      <!-- 'unless' above should be removed once learn how to include in named module-->[m
[31m-      <available property='_servlet_available' classpath='${servletapi.lib}'[m
[31m-                 classname='javax.servlet.ServletException'/>[m
[31m-      <fail unless='_servlet_available'[m
[31m-            message="Place Jar file for Servlet API at '${servletapi.lib}', or set property 'servletapi.lib'"/>[m
[31m-      <javac srcdir="${swsrc}"[m
[31m-             bootclasspath="${javac.bootcp.override}"[m
[31m-             sourcepath=""[m
[31m-             includeantruntime="false"[m
[31m-             encoding="${javac.encoding}"[m
[31m-             destdir="classes"[m
[31m-             debug="${build.debug}"[m
[31m-             classpath="${servletapi.lib}">[m
[31m-        <include name="org/hsqldb/server/Servlet.java"/>[m
[31m-      </javac>[m
[31m-    </target>[m
[31m-[m
[31m-    <target name="classes" depends="sw-hsqldb,-javajsse"[m
[31m-    description="compiles JVM-independent non-lib/util/cmdline/servlet classes">[m
[31m-      <javac srcdir="${swsrc}"[m
[31m-             bootclasspath="${javac.bootcp.override}"[m
[31m-             includeantruntime="false"[m
[31m-             encoding="${javac.encoding}"[m
[31m-             destdir="classes"[m
[31m-             debug="${build.debug}"[m
[31m-      >[m
[31m-        <include name="org/hsqldb/*.java"/>[m
[31m-        <include name="org/hsqldb/auth/*.java"/>[m
[31m-        <include name="org/hsqldb/dbinfo/*.java"/>[m
[31m-        <include name="org/hsqldb/error/*.java"/>[m
[31m-        <include name="org/hsqldb/index/*.java"/>[m
[31m-        <include name="org/hsqldb/jdbc/**"/>[m
[31m-        <include name="org/hsqldb/lib/**"/>[m
[31m-        <include name="org/hsqldb/map/*.java"/>[m
[31m-        <include name="org/hsqldb/navigator/*.java"/>[m
[31m-        <include name="org/hsqldb/persist/*.java"/>[m
[31m-        <include name="org/hsqldb/resources/*"/>[m
[31m-        <include name="org/hsqldb/result/*.java"/>[m
[31m-        <include name="org/hsqldb/rights/*.java"/>[m
[31m-        <include name="org/hsqldb/rowio/*.java"/>[m
[31m-        <include name="org/hsqldb/scriptio/*.java"/>[m
[31m-        <include name="org/hsqldb/server/*.java"/>[m
[31m-        <include name="org/hsqldb/trigger/*.java"/>[m
[31m-        <include name="org/hsqldb/types/*.java"/>[m
[31m-        <exclude name="org/hsqldb/server/Servlet.java"/>[m
[31m-      </javac>[m
[31m-      <fixcrlf destdir="classes" preservelastmodified='true' eol="lf"[m
[31m-               encoding="ISO-8859-1" srcdir="src"[m
[31m-               excludes="org/hsqldb/cmdline/**"[m
[31m-               includes="**/*.properties, **/*.text, **/*.sql, **/*.html"/>[m
[31m-    </target>[m
[31m-[m
[31m-   <!-- Don't both use name beginning with - AND supply a 'description'.[m
[31m-        If this should be externally callable, then remove the leading -[m
[31m-        and change the following description to a description attribute:[m
[31m-                                               - blaine[m
[31m-[m
[31m-   -->[m
[31m-    <target name="-util" depends="-prepare, sw-hsqldb"[m
[31m-            description="compiles the util folder">[m
[31m-      <javac srcdir="${swsrc}"[m
[31m-             bootclasspath="${javac.bootcp.override}"[m
[31m-             includeantruntime="false"[m
[31m-             encoding="${javac.encoding}"[m
[31m-             destdir="classes"[m
[31m-             debug="${build.debug}"[m
[31m-      >[m
[31m-        <include name="org/hsqldb/util/**"/>[m
[31m-        <exclude name="org/hsqldb/util/preprocessor/**"/>[m
[31m-      </javac>[m
[31m-      <copy todir="classes/org/hsqldb/util" preservelastmodified='true'>[m
[31m-          <fileset dir="src/org/hsqldb/util" includes='*.gif, *.png'/>[m
[31m-      </copy>[m
[31m-    </target>[m
[31m-[m
[31m-    <target name="-preprocessor">[m
[31m-      <!-- This javac is no longer dependent upon default attr. includeAntRuntime=true -->[m
[31m-      <!-- Ant resolver and preprocessor moved to trunk/integration/ant/prepocessor/src -->[m
[31m-      <javac srcdir="src"[m
[31m-             bootclasspath="${javac.bootcp.override}"[m
[31m-             encoding="${javac.encoding}"[m
[31m-             destdir="classes"[m
[31m-             debug="${build.debug}"[m
[31m-      >[m
[31m-        <include name="org/hsqldb/util/preprocessor/**"/>[m
[31m-      </javac>[m
[31m-    </target>[m
[31m-[m
[31m-    <!-- compiles the cmdline classes -->[m
[31m-    <target name="-cmdline"[m
[31m-            depends="-prepare, sw-sqltool,[m
[31m-                     -conditionalize-sqlfile-scanner, -sqlfile-scanner">[m
[31m-[m
[31m-      <javac srcdir="${swsrctool}"[m
[31m-             bootclasspath="${javac.bootcp.override}"[m
[31m-             includeantruntime="false"[m
[31m-             encoding="${javac.encoding}"[m
[31m-             destdir="classes"[m
[31m-             debug="${build.debug}"[m
[31m-      >[m
[31m-        <include name="**/*"/>[m
[31m-      </javac>[m
[31m-      <fixcrlf destdir="classes" preservelastmodified='true' eol="lf"[m
[31m-               encoding="ISO-8859-1" srcdir="src"[m
[31m-               includes="org/hsqldb/cmdline/**/*.properties,[m
[31m-                         org/hsqldb/cmdline/**/*.text,[m
[31m-                         org/hsqldb/cmdline/**/*.sql,[m
[31m-                         org/hsqldb/cmdline/**/*.html"/>[m
[31m-      <fixcrlf destdir="classes/org/hsqldb/cmdline"[m
[31m-               preservelastmodified='true' eol="lf"[m
[31m-               encoding="ISO-8859-1"[m
[31m-               file="src/org/hsqldb/resources/jdklogging-default.properties"/>[m
[31m-      <replace token="org.hsqldb.lib"[m
[31m-               file="classes/org/hsqldb/cmdline/jdklogging-default.properties"[m
[31m-               value="org.hsqldb.cmdline.libclone"/>[m
[31m-    </target>[m
[31m-[m
[31m-    <target name="-swing" depends="sw-hsqldb"[m
[31m-            description="compiles the swing based classes in the util folder">[m
[31m-      <javac srcdir="${swsrc}"[m
[31m-             bootclasspath="${javac.bootcp.override}"[m
[31m-             includeantruntime="false"[m
[31m-             encoding="${javac.encoding}"[m
[31m-             destdir="classes"[m
[31m-             debug="${build.debug}"[m
[31m-      >[m
[31m-        <include name="org/hsqldb/util/*Swing.java"/>[m
[31m-        <include name="org/hsqldb/util/TableSorter.java"/>[m
[31m-        <include name="org/hsqldb/util/DatabaseManagerCommon.java"/>[m
[31m-        <include name="org/hsqldb/util/ConnectionSetting.java"/>[m
[31m-        <include name="org/hsqldb/util/CSVWriter.java"/>[m
[31m-        <include name="org/hsqldb/util/RCData.java"/>[m
[31m-      </javac>[m
[31m-    </target>[m
[31m-[m
[31m-    <target name='-requireJunit'>[m
[31m-      <available property='_junit_available' classpath='${junit38.lib}'[m
[31m-                 classname='junit.swingui.TestRunner'/>[m
[31m-      <fail unless='_junit_available'[m
[31m-            message="Place Jar file for v. 3.8.x of Junit at '${junit38.lib}', or set property 'junit38.lib'"/>[m
[31m-    </target>[m
[31m-[m
[31m-    <target name="scanner-driver" depends="-cmdline"[m
[31m-            description="Build Scanner Driver.  For SqlTool scanner developers.">[m
[31m-      <javac srcdir="${swsrc}"[m
[31m-             bootclasspath="${javac.bootcp.override}"[m
[31m-             includeantruntime="false"[m
[31m-             encoding="${javac.encoding}"[m
[31m-             includes="org/hsqldb/test/SqlFileScannerDriver.java"[m
[31m-             destdir="classes"[m
[31m-             debug="${build.debug}"[m
[31m-             />[m
[31m-    </target>[m
[31m-[m
[31m-    <!--jar with sources for hsqldb.jar, useful for reading/debugging the code from other projects, can be specified via maven too-->[m
[31m-    <target name="hsqldbsources" description="builds jar file containing source code"[m
[31m-            depends="sw-hsqldb">[m
[31m-        <jar jarfile="lib/hsqldb-sources.jar" basedir="${swsrc}">[m
[31m-        </jar>[m
[31m-    </target>[m
[31m-[m
[31m-    <!--jar with sources for sqltool.jar, useful for reading/debugging the code from other projects, can be specified via maven too-->[m
[31m-    <target name="sqltoolsources" description="builds jar file containing SqlTool source code"[m
[31m-            depends="sw-sqltool">[m
[31m-        <jar jarfile="lib/sqltool-sources.jar" basedir="${swsrctool}">[m
[31m-        </jar>[m
[31m-    </target>[m
[31m-[m
[31m-    <fileset id='empty.fileset' dir='z:y:w:/nosuch' erroronmissingdir="false"/>[m
[31m-[m
[31m-    <fileset id='modinfoclass' dir='classes'[m
[31m-        includes='module-info.class'[m
[31m-    />[m
[31m-[m
[31m-    <fileset id='minclasses' dir='classes'[m
[31m-        includes='[m
[31m-            org/hsqldb/*.class[m
[31m-            org/hsqldb/auth/**[m
[31m-            org/hsqldb/dbinfo/**[m
[31m-            org/hsqldb/error/**[m
[31m-            org/hsqldb/index/**[m
[31m-            org/hsqldb/jdbc/**[m
[31m-            org/hsqldb/jdbc/pool/**[m
[31m-            org/hsqldb/lib/**[m
[31m-            org/hsqldb/lib/java/**[m
[31m-            org/hsqldb/lib/tar/**[m
[31m-            org/hsqldb/map/**[m
[31m-            org/hsqldb/navigator/**[m
[31m-            org/hsqldb/persist/**[m
[31m-            org/hsqldb/resources/**[m
[31m-            org/hsqldb/result/**[m
[31m-            org/hsqldb/rights/**[m
[31m-            org/hsqldb/rowio/**[m
[31m-            org/hsqldb/server/HsqlSocketFactory*[m
[31m-            org/hsqldb/server/ServerConstants*[m
[31m-            org/hsqldb/scriptio/**[m
[31m-            org/hsqldb/trigger/**[m
[31m-            org/hsqldb/types/**[m
[31m-            '[m
[31m-        excludes='org/hsqldb/Server.class'[m
[31m-    />[m
[31m-[m
[31m-    <fileset id='mainaddedclasses' dir='classes'[m
[31m-        includes='[m
[31m-            org/hsqldb/Server.class[m
[31m-            org/hsqldb/server/**[m
[31m-            org/hsqldb/util/MainInvoker.class[m
[31m-            '[m
[31m-    />[m
[31m-[m
[31m-    <fileset id='dbmanagerswingclasses' dir='classes'[m
[31m-        includes='[m
[31m-            org/hsqldb/util/*Swing*.class[m
[31m-            org/hsqldb/util/ConnectionDialogCommon.class[m
[31m-            org/hsqldb/util/ConnectionSetting*[m
[31m-            org/hsqldb/util/TableSorter*[m
[31m-            org/hsqldb/util/DatabaseManagerCommon*[m
[31m-            org/hsqldb/util/CSVWriter*[m
[31m-            org/hsqldb/util/RCData*[m
[31m-            org/hsqldb/util/*.png[m
[31m-            org/hsqldb/util/*.gif[m
[31m-            '[m
[31m-    />[m
[31m-[m
[31m-    <fileset id='dbmanagerawtaddedclasses' dir='classes'[m
[31m-        includes='[m
[31m-            org/hsqldb/util/DatabaseManager.class[m
[31m-            org/hsqldb/util/ConnectionDialog*[m
[31m-            org/hsqldb/util/Grid.class[m
[31m-            org/hsqldb/util/Tree.class[m
[31m-            '[m
[31m-        excludes='[m
[31m-            org/hsqldb/util/ConnectionDialogCommon.class[m
[31m-            org/hsqldb/util/ConnectionDialogSwing.class[m
[31m-            '[m
[31m-    />[m
[31m-[m
[31m-    <fileset id='utilclasses' dir='classes' includes='[m
[31m-            org/hsqldb/util/**[m
[31m-            '/>[m
[31m-[m
[31m-    <fileset id='sqltoolclasses' dir='classes'[m
[31m-        includes='org/hsqldb/cmdline/**/*.class'/>[m
[31m-[m
[31m-    <fileset id='sqltoolres' dir='classes'[m
[31m-        includes='[m
[31m-            org/hsqldb/cmdline/**/*.text[m
[31m-            org/hsqldb/cmdline/**/*.properties[m
[31m-            org/hsqldb/cmdline/sqltool/**/*.html[m
[31m-            '[m
[31m-    />[m
[31m-[m
[31m-    <target name="hsqldbmin" depends="classes, mdesc-hsqldbmin, -prep-license-files"[m
[31m-            description="Build the hsqldbmin.jar (no servers)">[m
[31m-      <jar jarfile="lib/hsqldbmin${jdk8string}.jar" duplicate='preserve'>[m
[31m-        <metainf dir="doc" includes="*_lic.txt"/>[m
[31m-        <service type="java.sql.Driver" provider="org.hsqldb.jdbc.JDBCDriver"/>[m
[31m-        <manifest>[m
[31m-          <attribute name='Specification-Title' value='${hsqldb.title}'/>[m
[31m-          <attribute name='Specification-Version' value='${hsqldb.version}'/>[m
[31m-          <attribute name='Specification-Vendor' value='${hsqldb.vendor}'/>[m
[31m-          <attribute name='Implementation-Title'[m
[31m-                     value='Runtime without utilities and servers'/>[m
[31m-          <attribute name='Implementation-Version' value='${build.label}'/>[m
[31m-          <attribute name='Sealed' value='true'/>[m
[31m-        </manifest>[m
[31m-        <fileset refid='minclasses' />[m
[31m-        <fileset refid='modinfoclass'/>[m
[31m-      </jar>[m
[31m-    </target>[m
[31m-[m
[31m-    <target name="hsqldbmain" depends="classes, -prep-license-files"[m
[31m-            description="Build the hsqldbmain.jar (no utilities)">[m
[31m-      <jar jarfile="lib/hsqldbmain${jdk8string}.jar" duplicate='preserve'>[m
[31m-        <metainf dir="doc" includes="*_lic.txt"/>[m
[31m-        <service type="java.sql.Driver" provider="org.hsqldb.jdbc.JDBCDriver"/>[m
[31m-        <manifest>[m
[31m-          <attribute name='Specification-Title' value='${hsqldb.title}'/>[m
[31m-          <attribute name='Specification-Version' value='${hsqldb.version}'/>[m
[31m-          <attribute name='Specification-Vendor' value='${hsqldb.vendor}'/>[m
[31m-          <attribute name='Implementation-Title'[m
[31m-                     value='Runtime without utilities'/>[m
[31m-          <attribute name='Implementation-Version' value='${build.label}'/>[m
[31m-          <attribute name='Sealed' value='true'/>[m
[31m-        </manifest>[m
[31m-        <fileset refid='minclasses' />[m
[31m-        <fileset refid='mainaddedclasses' />[m
[31m-      </jar>[m
[31m-    </target>[m
[31m-[m
[31m-    <target name="hsqldb"[m
[31m-            depends="classes, -util, -prep-license-files, classes-servlet, -set-jar.exec.path"[m
[31m-            description="Build the default hsqldb.jar">[m
[31m-      <condition property="filesetawt.ref" value="empty.fileset">[m
[31m-        <isset property="ant.java.iscjava11"/>[m
[31m-      </condition>[m
[31m-      <property name="filesetawt.ref" value="dbmanagerawtaddedclasses"/>[m
[31m-[m
[31m-      <jar jarfile="lib/hsqldb${jdk8string}.jar" duplicate='preserve'>[m
[31m-        <metainf dir="doc" includes="*_lic.txt"/>[m
[31m-        <service type="java.sql.Driver" provider="org.hsqldb.jdbc.JDBCDriver"/>[m
[31m-        <manifest>[m
[31m-          <attribute name='Specification-Title' value='${hsqldb.title}'/>[m
[31m-          <attribute name='Specification-Version' value='${hsqldb.version}'/>[m
[31m-          <attribute name='Specification-Vendor' value='${hsqldb.vendor}'/>[m
[31m-          <attribute name='Implementation-Title'[m
[31m-                     value='Standard runtime'/>[m
[31m-          <attribute name='Implementation-Version' value='${build.label}'/>[m
[31m-          <attribute name='Sealed' value='true'/>[m
[31m-        </manifest>[m
[31m-        <fileset refid='minclasses' />[m
[31m-        <fileset refid='mainaddedclasses' />[m
[31m-        <fileset refid='dbmanagerswingclasses' />[m
[31m-[m
[31m-        <fileset refid='${filesetawt.ref}' />[m
[31m-        <fileset refid='modinfoclass'/>[m
[31m-      </jar>[m
[31m-[m
[31m-      <!-- Ant jar task doesn't support -e / -Main-Class switch! -->[m
[31m-      <exec executable="${jar.exec.path}" dir="lib"[m
[31m-            outputproperty="out.1" errorproperty="err.1"[m
[31m-            resultproperty="exec.val.1">[m
[31m-        <arg value="-ufe"/>[m
[31m-        <arg value="hsqldb${jdk8string}.jar"/>[m
[31m-        <arg value="org.hsqldb.util.DatabaseManagerSwing"/>[m
[31m-      </exec>[m
[31m-      <condition property="_do-abort" value="DUMMY">[m
[31m-        <not> <equals arg1="0" arg2="${exec.val.1}"/> </not>[m
[31m-      </condition>[m
[31m-      <fail if="_do-abort">Exiting due to 'jar' exit value ${exec.val.1}.[m
[31m-JVM stdout: ---------------------------------------------------[m
[31m-${out.1}[m
[31m-JVM stderr: ---------------------------------------------------[m
[31m-${err.1}</fail>[m
[31m-    </target>[m
[31m-[m
[31m-    <target name="dbmanswing" depends="-swing, -prep-license-files"[m
[31m-            description="Build the dbmanagerswing.jar">[m
[31m-      <jar jarfile="lib/dbmanagerswing${jdk8string}.jar" duplicate='preserve' filesonly="true">[m
[31m-        <metainf dir="doc" includes="*_lic.txt"/>[m
[31m-        <manifest>[m
[31m-          <attribute name='Specification-Title' value='${hsqldb.title}'/>[m
[31m-          <attribute name='Specification-Version' value='${hsqldb.version}'/>[m
[31m-          <attribute name='Specification-Vendor' value='${hsqldb.vendor}'/>[m
[31m-          <attribute name='Implementation-Title'[m
[31m-          value='DatabaseManagerSwing only'/>[m
[31m-          <attribute name='Implementation-Version' value='${build.label}'/>[m
[31m-          <attribute name='Main-Class' value='org.hsqldb.util.DatabaseManagerSwing'/>[m
[31m-          <attribute name='Class-Path'[m
[31m-                     value='hsqldb-${hsqldb.version}.jar hsqldb.jar hsqldbmin.jar hsqldbmain.jar'/>[m
[31m-          <attribute name='Sealed' value='true'/>[m
[31m-        </manifest>[m
[31m-        <fileset refid='dbmanagerswingclasses'/>[m
[31m-      </jar>[m
[31m-    </target>[m
[31m-[m
[31m-    <target name="-copy-mdescriptor" if="ant.java.iscjava11">[m
[31m-        <fail unless='module.name'[m
[31m-              message="Target '-copy-mdescriptor' called when prop 'module.name'not set"/>[m
[31m-        <!-- Ant apparently has a low resolution for distinguishing time[m
[31m-             differences: -->[m
[31m-        <sleep seconds="1"/>[m
[31m-        <copy todir="${tmpsrc}/${module.name}/src/main/java/" overwrite="true"[m
[31m-              file="${modinfosrc}${module.name}/module-info.java"/>[m
[31m-    </target>[m
[31m-[m
[31m-    <target name="-set-jar.exec.path">[m
[31m-      <available property="jar.exec.path" file="${java.home}/bin/jar"[m
[31m-                 type="file" value="${java.home}/bin/jar" />[m
[31m-      <available property="jar.exec.path" file="${java.home}/../bin/jar"[m
[31m-                 type="file" value="${java.home}/../bin/jar" />[m
[31m-      <available property="jar.exec.path" file="${java.home}/bin/jar.exe"[m
[31m-                 type="file" value="${java.home}/bin/jar.exe" />[m
[31m-      <available property="jar.exec.path" file="${java.home}/../bin/jar.exe"[m
[31m-                 type="file" value="${java.home}/../bin/jar.exe" />[m
[31m-      <fail unless="jar.exec.path">Failed to find jar by searching around ${java.home}</fail>[m
[31m-    </target>[m
[31m-[m
[31m-    <target name="sqltool"[m
[31m-            depends="-cmdline, -prep-license-files, -set-jar.exec.path"[m
[31m-            description="Build 'sqltool.jar' file">[m
[31m-      <jar jarfile="lib/sqltool${jdk8string}.jar" duplicate='preserve' filesonly="true">[m
[31m-        <metainf dir="doc" includes="*hsqldb_lic.txt"/>[m
[31m-        <manifest>[m
[31m-          <attribute name='Specification-Title' value='${hsqldb.title}'/>[m
[31m-          <attribute name='Specification-Version' value='${hsqldb.version}'/>[m
[31m-          <attribute name='Specification-Vendor' value='${hsqldb.vendor}'/>[m
[31m-          <attribute name='Implementation-Title' value='SqlTool Client'/>[m
[31m-          <attribute name='Implementation-Version' value='${build.label}'/>[m
[31m-          <attribute name='Class-Path'[m
[31m-              value='hsqldb-${hsqldb.version}.jar hsqldb.jar hsqldbmin.jar hsqldbmain.jar'/>[m
[31m-          <attribute name='Sealed' value='true'/>[m
[31m-        </manifest>[m
[31m-        <fileset refid='sqltoolclasses'/>[m
[31m-        <fileset refid='sqltoolres'/>[m
[31m-        <fileset refid='modinfoclass'/>[m
[31m-      </jar>[m
[31m-[m
[31m-      <!-- Ant jar task doesn't support -e switch! -->[m
[31m-      <exec executable="${jar.exec.path}" dir="lib"[m
[31m-            outputproperty="out.2" errorproperty="err.2"[m
[31m-            resultproperty="exec.val.2">[m
[31m-        <arg value="-ufe"/>[m
[31m-        <arg value="sqltool${jdk8string}.jar"/>[m
[31m-        <arg value="org.hsqldb.cmdline.SqlTool"/>[m
[31m-      </exec>[m
[31m-      <condition property="_do-abort" value="DUMMY">[m
[31m-        <not> <equals arg1="0" arg2="${exec.val.2}"/> </not>[m
[31m-      </condition>[m
[31m-      <fail if="_do-abort">Exiting due to 'jar' exit value ${exec.val.2}.[m
[31m-JVM stdout: ---------------------------------------------------[m
[31m-${out.2}[m
[31m-JVM stderr: ---------------------------------------------------[m
[31m-${err.2}</fail>[m
[31m-    </target>[m
[31m-[m
[31m-    <target name="-clone-shared-sources">[m
[31m-      <mkdir dir='${libclonesrc}'/>[m
[31m-      <mkdir dir='${utilclonesrc}'/>[m
[31m-      <copy todir='${libclonesrc}' preservelastmodified='true'>[m
[31m-        <fileset dir='src/org/hsqldb/lib'[m
[31m-          includes='[m
[31m-              AppendableException*[m
[31m-              BasicTextJdkLogFormatter*[m
[31m-              FrameworkLogger*[m
[31m-              RefCapablePropertyResourceBundle*[m
[31m-              RefCapableRBInterface*[m
[31m-              ValidatingResourceBundle*[m
[31m-              '/>[m
[31m-      </copy>[m
[31m-      <copy todir='${utilclonesrc}' preservelastmodified='true'>[m
[31m-        <fileset dir='src/org/hsqldb/util' includes='RCData*'/>[m
[31m-      </copy>[m
[31m-      <replace dir="${libclonesrc}" token="org.hsqldb.lib"[m
[31m-               value="org.hsqldb.cmdline.libclone"/>[m
[31m-      <replace dir="${libclonesrc}" token="/org/hsqldb/resources/"[m
[31m-               value="/org/hsqldb/cmdline/"/>[m
[31m-      <replace dir="${utilclonesrc}" token="org.hsqldb.util"[m
[31m-               value="org.hsqldb.cmdline.utilclone"/>[m
[31m-    </target>[m
[31m-[m
[31m-    <fileset id='preprocessorclasses' dir='classes' includes='org/hsqldb/util/preprocessor/*.class'/>[m
[31m-[m
[31m-    <target name="preprocessor" depends="-prepare,-prep-license-files,-preprocessor"[m
[31m-            description="Build 'preprocessor.jar' file">[m
[31m-      <jar jarfile="lib/preprocessor.jar" compress="true" filesonly="true">[m
[31m-        <metainf dir="doc" includes="*_lic.txt"/>[m
[31m-        <manifest>[m
[31m-          <attribute name='Specification-Title' value='${hsqldb.title}'/>[m
[31m-          <attribute name='Specification-Version' value='${hsqldb.version}'/>[m
[31m-          <attribute name='Specification-Vendor' value='${hsqldb.vendor}'/>[m
[31m-          <attribute name='Implementation-Title' value='HSQLDB Java Source Preprocessor Library'/>[m
[31m-          <attribute name='Implementation-Version' value='${build.label}'/>[m
[31m-          <attribute name='Sealed' value='true'/>[m
[31m-        </manifest>[m
[31m-        <fileset refid='preprocessorclasses' />[m
[31m-      </jar>[m
[31m-    </target>[m
[31m-[m
[31m-    <target name="hsqldbutil" depends="-util, -prep-license-files"[m
[31m-            description="Build the Database Managers jar">[m
[31m-      <jar jarfile="lib/hsqldbutil${jdk8string}.jar" compress="true">[m
[31m-        <metainf dir="doc" includes="*_lic.txt"/>[m
[31m-        <manifest>[m
[31m-          <attribute name='Specification-Title' value='${hsqldb.title}'/>[m
[31m-          <attribute name='Specification-Version' value='${hsqldb.version}'/>[m
[31m-          <attribute name='Specification-Vendor' value='${hsqldb.vendor}'/>[m
[31m-          <attribute name='Implementation-Title'[m
[31m-          value='Utilities runtime, without JDBC driver'/>[m
[31m-          <attribute name='Implementation-Version' value='${build.label}'/>[m
[31m-          <attribute name='Main-Class' value='org.hsqldb.util.DatabaseManagerSwing'/>[m
[31m-          <attribute name='Class-Path'[m
[31m-          value='hsqldb-${hsqldb.version}.jar hsqldb.jar hsqldbmin.jar hsqldbmain.jar'/>[m
[31m-          <attribute name='Sealed' value='true'/>[m
[31m-        </manifest>[m
[31m-        <fileset refid='utilclasses'/>[m
[31m-      </jar>[m
[31m-    </target>[m
[31m-[m
[31m-    <!-- We use this target to create hsqldb-jdk8.jar and sqltool-jdk8.jar for the zip distro -->[m
[31m-    <target name="jdk8jars" depends="osgi, sqltool"[m
[31m-            description="Build hsqldb-osgi.jar and sqltool.jar for jdk 8 targets and rename"[m
[31m-            if="ant.java.iscjava08" unless="ant.java.iscjava11">[m
[31m-        <move file="lib/hsqldb-osgi-jdk8.jar" tofile="lib/hsqldb-jdk8.jar"/>[m
[31m-    </target>[m
[31m-[m
[31m-    <!--jar with javadoc-->[m
[31m-    <target name="javadochsqldbjar" description="builds jar file containing javadoc">[m
[31m-        <jar jarfile="lib/hsqldb-javadoc.jar" basedir="${basedir}/doc/apidocs/">[m
[31m-        </jar>[m
[31m-    </target>[m
[31m-[m
[31m-    <!--jar with javadoc for sqltool-->[m
[31m-    <target name="javadocsqltooljar" description="builds jar file containing SqlTool javadoc">[m
[31m-        <jar jarfile="lib/sqltool-javadoc.jar" basedir="${basedir}/doc/apidocssqltool/">[m
[31m-        </jar>[m
[31m-    </target>[m
[31m-[m
[31m-[m
[31m-    <target name="javadoc" depends="-prepare-javadoc, -set-jvmvars"[m
[31m-            description="Create javadoc for the org.hsqldb module">[m
[31m-      <delete file="${swsrc}org/hsqldb/server/Servlet.java"/>[m
[31m-      <javadoc[m
[31m-           destdir="doc/apidocs"[m
[31m-           stylesheetfile="doc-src/apidocs/javadoc.css"[m
[31m-           docencoding="UTF-8"[m
[31m-           charset="UTF-8"[m
[31m-           author="true"[m
[31m-           version="false"[m
[31m-           use="true"[m
[31m-           public="true"[m
[31m-           failonerror="false"[m
[31m-           verbose="false"[m
[31m-           windowtitle="${hsqldb.title} ${hsqldb.version} API"[m
[31m-           doctitle="${hsqldb.title} ${hsqldb.version}"[m
[31m-           bottom="&lt;i&gt;Copyright &#169; 2001 - 2024 HSQL Development Group.&lt;/i&gt;">[m
[31m-           <packageset dir="${swsrc}">[m
[31m-              <include name='org/hsqldb/auth'/>[m
[31m-              <include name='org/hsqldb/jdbc'/>[m
[31m-              <include name='org/hsqldb/jdbc/pool'/>[m
[31m-              <include name='org/hsqldb/lib'/>[m
[31m-              <include name='org/hsqldb/lib/tar'/>[m
[31m-              <include name='org/hsqldb/server'/>[m
[31m-              <include name='org/hsqldb/trigger'/>[m
[31m-              <include name='org/hsqldb/util'/>[m
[31m-           </packageset>[m
[31m-           <tag name="todo" enabled="false"/>[m
[31m-           <tag name="revised" enabled="false"/>[m
[31m-           <tag name="jboss.xmbean" enabled="false"/>[m
[31m-           <tag name="jmx.mbean" enabled="false"/>[m
[31m-           <tag name="jmx.managed-attribute" enabled="false"/>[m
[31m-           <tag name="jmx.managed-operation" enabled="false"/>[m
[31m-           <tag name="jmx.managed-operation-parameter" enabled="false"/>[m
[31m-      </javadoc>[m
[31m-      <fixcrlf preservelastmodified='true' eol="lf" encoding="UTF-8"[m
[31m-         srcdir="doc/apidocs" includes="**/*.css, **/*.html, **/package-list"/>[m
[31m-    </target>[m
[31m-[m
[31m-    <target name="javadocsqltool" depends="-prepare-javadoc-sqltool, -set-jvmvars"[m
[31m-            description="Create javadoc for the org.hsqldb.sqltool module">[m
[31m-        <javadoc[m
[31m-                destdir="doc/apidocssqltool"[m
[31m-                stylesheetfile="doc-src/apidocs/javadoc.css"[m
[31m-                docencoding="UTF-8"[m
[31m-                charset="UTF-8"[m
[31m-                author="true"[m
[31m-                version="false"[m
[31m-                use="true"[m
[31m-                public="true"[m
[31m-                failonerror="false"[m
[31m-                verbose="false"[m
[31m-                windowtitle="${hsqldb.title} ${hsqldb.version} API"[m
[31m-                doctitle="${hsqldb.title} ${hsqldb.version}"[m
[31m-                bottom="&lt;i&gt;Copyright &#169; 2001 - 2024 HSQL Development Group.&lt;/i&gt;">[m
[31m-            <packageset dir="${swsrctool}">[m
[31m-                <include name='org/hsqldb/cmdline'/>[m
[31m-                <include name='org/hsqldb/libclone'/>[m
[31m-                <include name='org/hsqldb/utilclone'/>[m
[31m-            </packageset>[m
[31m-            <tag name="todo" enabled="false"/>[m
[31m-            <tag name="revised" enabled="false"/>[m
[31m-            <tag name="jboss.xmbean" enabled="false"/>[m
[31m-            <tag name="jmx.mbean" enabled="false"/>[m
[31m-            <tag name="jmx.managed-attribute" enabled="false"/>[m
[31m-            <tag name="jmx.managed-operation" enabled="false"/>[m
[31m-            <tag name="jmx.managed-operation-parameter" enabled="false"/>[m
[31m-        </javadoc>[m
[31m-        <fixcrlf preservelastmodified='true' eol="lf" encoding="UTF-8"[m
[31m-                 srcdir="doc/apidocssqltool" includes="**/*.css, **/*.html, **/package-list"/>[m
[31m-    </target>[m
[31m-[m
[31m-    <target name="javadocdev"[m
[31m-            depends="-prepare-javadoc,-set-jvmvars"[m
[31m-            description="Create javadoc for all HSQLDB code-base classes">[m
[31m-      <!-- Since our preprocessor package compilatoin depends on the[m
[31m-           env-specific ant runtime lib via includeAntRuntime=true, Javadoc[m
[31m-           will fail to resolve Ant classes and produce error messages[m
[31m-           accordingly. -->[m
[31m-      <javadoc[m
[31m-           destdir="doc/apidocsdev"[m
[31m-           docencoding="UTF-8"[m
[31m-           stylesheetfile="doc-src/apidocs/javadoc.css"[m
[31m-           charset="UTF-8"[m
[31m-           linksource="true"[m
[31m-           author="true"[m
[31m-           version="true"[m
[31m-           use="true"[m
[31m-           package="true"[m
[31m-           failonerror="true"[m
[31m-           windowtitle="${hsqldb.title} ${hsqldb.version} Product Dev. API"[m
[31m-           doctitle="${hsqldb.title} ${hsqldb.version} Product"[m
[31m-           bottom="&lt;i&gt;Copyright &#169; 2001 - 2024 HSQL Development Group.&lt;/i&gt;">[m
[31m-           <fileset dir="src" includes="org/**/*.java" excludes="org/hsqldb/test/**[m
[31m-                org/hsqldb/sample/** org/hsqldb/cmdline/**"/>[m
[31m-           <!-- Fileset is really good for maintenance and control purposes,[m
[31m-                but it makes the generator produce an incredible amount of[m
[31m-                output when there are no errors.  The verbose attribute[m
[31m-                doesn't help at all. -->[m
[31m-           <classpath>[m
[31m-             <pathelement path="${java.class.path}"/>[m
[31m-             <pathelement location="${junit38.lib}"/>[m
[31m-             <pathelement location="${servletapi.lib}"/>[m
[31m-           </classpath>[m
[31m-           <link href="${junit.doc.link}"/>[m
[31m-           <tag name="todo"/>[m
[31m-           <tag name="revised"/>[m
[31m-           <tag name="jboss.xmbean"/>[m
[31m-           <tag name="jmx.mbean"/>[m
[31m-           <tag name="jmx.managed-attribute"/>[m
[31m-           <tag name="jmx.managed-operation"/>[m
[31m-           <tag name="jmx.managed-operation-parameter"/>[m
[31m-      </javadoc>[m
[31m-      <fixcrlf preservelastmodified='true' eol="lf" encoding="UTF-8"[m
[31m-         srcdir="doc/apidocs" includes="**/*.css, **/*.html, **/package-list"/>[m
[31m-    </target>[m
[31m-[m
[31m-    <target name="sqlfile-scanner"[m
[31m-            depends="-delete.SqlFileScanner, -sqlfile-scanner"[m
[31m-    description="Unconditionally run JFlex to regenerate SqlFileScanner.java"/>[m
[31m-[m
[31m-    <target name="-delete.SqlFileScanner">[m
[31m-      <delete file="src/org/hsqldb/cmdline/sqltool/SqlFileScanner.java"/>[m
[31m-    </target>[m
[31m-[m
[31m-     <!-- If you don't want this to run unless ant.java.iscjava06 is set,[m
[31m-          then call -conditionalize-sqlfile-scanner before this target. -->[m
[31m-    <target name="-sqlfile-scanner" depends="-conditionalize-jflex, jflex"[m
[31m-            unless="-sqlfile-scanner.skip">[m
[31m-      <!-- Prepares SqlFileScanner.java, running Jflex only if needed.[m
[31m-           Purpose here is to require jflex library only if user modifies[m
[31m-           the *.flex file.[m
[31m-      -->[m
[31m-[m
[31m-      <!-- We no longer remove SqlFileScanner.java automatically.[m
[31m-           We can't depend on file timestamps, because Subversion doesn't[m
[31m-           preserve them, so we must depend on explicit removal of[m
[31m-           SqlFileScanner.java if we want it regenerated.[m
[31m-      <dependset>[m
[31m-        <srcfilelist dir="src/org/hsqldb/cmdline">[m
[31m-          <file name="sqltool.flex"/>[m
[31m-        </srcfilelist>[m
[31m-        <targetfilelist dir="src/org/hsqldb/cmdline/sqltool">[m
[31m-          <file name="SqlFileScanner.java"/>[m
[31m-        </targetfilelist>[m
[31m-      </dependset>[m
[31m-      -->[m
[31m-      <copy todir="${swsrctool}/org/hsqldb/cmdline/sqltool"[m
[31m-            file="src/org/hsqldb/cmdline/sqltool/SqlFileScanner.java"/>[m
[31m-    </target>[m
[31m-[m
[31m-    <target name="-init-jflex" unless="jflex.skip">[m
[31m-      <available property='_jflex_available' classpath='${jflex.lib}'[m
[31m-                 classname='JFlex.anttask.JFlexTask'/>[m
[31m-      <fail unless='_jflex_available'[m
[31m-            message="Run target 'fetch-jflex' or otherwise place a JFlex jar file at '${jflex.lib}'"/>[m
[31m-      <taskdef classname="JFlex.anttask.JFlexTask" name="jflex"[m
[31m-               classpath='${jflex.lib}'/>[m
[31m-    </target>[m
[31m-[m
[31m-    <target name="fetch-jflex" depends="-ivy-setup"[m
[31m-       description="Fetch JFlex jar file from Internet, for rebuilding SqlTool scanner">[m
[31m-      <copy tofile="${jflex.lib}" preservelastmodified="true">[m
[31m-         <path refid="jflex-jar.cpref"/>[m
[31m-      </copy>[m
[31m-    </target>[m
[31m-[m
[31m-    <target name="-conditionalize-jflex" depends="-set-jvmvars">[m
[31m-      <!-- JFlex will only run if SqlFileScanner.java does not exist -->[m
[31m-      <available property="jflex.skip" type="file"[m
[31m-                 file="src/org/hsqldb/cmdline/sqltool/SqlFileScanner.java"/>[m
[31m-    </target>[m
[31m-[m
[31m-    <target name="-conditionalize-sqlfile-scanner" depends="-set-jvmvars">[m
[31m-    </target>[m
[31m-[m
[31m-    <!-- If called internally, always call the -conditionalize-flex target[m
[31m-         before this one, to eliminate unnecessary executions. -->[m
[31m-    <target name="jflex" depends="-init-jflex" unless="jflex.skip"[m
[31m-            description="Execute JFlex.  For SqlTool scanner developers.">[m
[31m-        <jflex file="src/org/hsqldb/cmdline/sqltool.flex" destdir="src"/>[m
[31m-        <!-- A limitation of the jflex task is that you must specify the .flex[m
[31m-             files individually and explicitly.  No filesets, etc. -->[m
[31m-      <!-- JFlex writes tt tags which have been deprecated for Javadoc, so[m
[31m-           replace them: -->[m
[31m-      <replace token="&lt;tt&gt;" value="{@code "[m
[31m-            file="src/org/hsqldb/cmdline/sqltool/SqlFileScanner.java"/>[m
[31m-      <replace token="&lt;/tt&gt;" value="}"[m
[31m-            file="src/org/hsqldb/cmdline/sqltool/SqlFileScanner.java"/>[m
[31m-    </target>[m
[31m-[m
[31m-    <target name="-update-switch-branch" unless="switch.inplace">[m
[31m-      <mkdir dir='${swsrc}'/>[m
[31m-      <copy todir='${swsrc}' preservelastmodified='true'>[m
[31m-          <fileset dir='src' includes='**/*.java'/>[m
[31m-      </copy>[m
[31m-    </target>[m
[31m-[m
[31m-    <target name="-clean-switch-branch" unless="switch.inplace">[m
[31m-      <delete dir="${tmpsrc}"/>[m
[31m-    </target>[m
[31m-[m
[31m-    <target name="update-readme"[m
[31m-        description="Update the version number in the root readme.txt file">[m
[31m-      <!-- Want to have this target depended upon by some other target that[m
[31m-           is always run after changing the version yet before tagging a[m
[31m-           release.[m
[31m-           Unfortunately, there is no such target, since somebody could do all[m
[31m-           testing, then change the version number right before tagging. :([m
[31m-           Therefore, instead of automating, we just have the distribution[m
[31m-           assembly task fail if the readme.txt is not up to date w/ version.[m
[31m-           (Can't actually change readme.txt when assembling, since tagging[m
[31m-           must be completed before-hand).[m
[31m-      -->[m
[31m-      <copy file="doc-src/readme-template.txt" tofile="readme.txt"[m
[31m-            overwrite="true">[m
[31m-        <filterchain> <expandproperties/> </filterchain>[m
[31m-      </copy>[m
[31m-    </target>[m
[31m-[m
[31m-    <!-- ***********************************************************[m
[31m-    *************   DOCBOOK v.5 BUILD SYSTEM   *********************[m
[31m-    *************************************************************-->[m
[31m-  <!-- See the file doc-src/readme-docauthors.txt for details about out DocBook[m
[31m-       build system.  -->[m
[31m-[m
[31m-    <!-- files copied for docs -->[m
[31m-    <fileset id='verbatimfiles' dir="${basedir}/"[m
[31m-        includes='[m
[31m-        sample/**,[m
[31m-        src/org/hsqldb/sample/SqlFileEmbedder.java,[m
[31m-        src/org/hsqldb/sample/Testdb.java,[m
[31m-        src/org/hsqldb/sample/TriggerSample.java,[m
[31m-        src/org/hsqldb/server/Servlet.java,[m
[31m-        src/org/hsqldb/server/WebServer.java,[m
[31m-        src/org/hsqldb/test/TestBase.java,[m
[31m-        src/org/hsqldb/trigger/Trigger.java,[m
[31m-        testrun/sqltool/sqljrt.sql,[m
[31m-        testrun/sqltool/sqlpsm.sql[m
[31m-            '/>[m
[31m-[m
[31m-    <target name='prepare-verbatim'[m
[31m-                description='Copy varbatim the files needed for docs'>[m
[31m-      <mkdir dir="${basedir}/doc-src/verbatim"/>[m
[31m-[m
[31m-      <copy todir='${basedir}/doc-src/verbatim/' preservelastmodified='true'>[m
[31m-        <fileset refid='verbatimfiles'/>[m
[31m-      </copy>[m
[31m-    </target>[m
[31m-[m
[31m-[m
[31m-    <import file="build-docbook.xml"/>[m
[31m-[m
[31m-    <target name="-prep-images">[m
[31m-    <!-- This will only add 'new' files to our "doc-src/images/db" directory.[m
[31m-         Therefore, if you want to update file "x.png", then remove it there[m
[31m-         before this target runs, and it will be pulled from ${dbimage.path}.[m
[31m-         After you have built the docs once, you will need to check your source[m
[31m-         for the document source code to see which images HSQLDB[m
[31m-         change-controls.  Just see what is in directory "doc-src/images/db",[m
[31m-         in Subversion or your distribution zip. -->[m
[31m-    <fail unless="dbimage.path">[m
[31m-Ant property 'dbimage.path' is required.  This should be set to the "images"[m
[31m-subdirectory of a DocBook v.5 NS Style Sheet distribution, on your local[m
[31m-filesystem.  If you run the Gradle task 'installDbImages', I'll do that for[m
[31m-you, downloading and installing the resources from sourceforge.net if you[m
[31m-don't already have them.  You will have the option of installing the entire[m
[31m-Style Sheet distribution (instead of just the images) to speed up your future[m
[31m-DocBook builds and decrease dependency upon a network and Internet connection.[m
[31m-('installDbImages' is only available as a Gradle task, not as an Ant target).[m
[31m-[m
[31m-See comments at the top of file "${basedir}/build/local-docbook.properties"[m
[31m-for instructions on how set up the DocBook images (and other optional[m
[31m-optimizations) manually.[m
[31m-</fail>[m
[31m-   <!-- The touch is to prevent overwriting customized images.[m
[31m-        Ant will overwrite if the destination file is older than the source.-->[m
[31m-    <touch> <fileset dir="doc-src/images/db" excludes="**/.*/**"/> </touch>[m
[31m-    <copy todir="doc-src/images/db">[m
[31m-      <fileset dir="${dbimage.path}"/>[m
[31m-    </copy>[m
[31m-    </target>[m
[31m-[m
[31m-    <!-- See comments at top of "build-docbook.xml" about doc.target property -->[m
[31m-    <target name="gen-docs" description="Generate Docbook documents for project"[m
[31m-          depends="prepare-verbatim, validate-docs, -prep-images, -gen-docs-setup">[m
[31m-      <!-- These doc-skip properties can be simplified once we require Ant 1.8 -->[m
[31m-      <condition property="_genskip-guide" value="DUMMY">[m
[31m-        <equals arg1="guide" arg2="${doc.target}"/>[m
[31m-      </condition>[m
[31m-      <condition property="_genskip-guide" value="-dbtransform-skip">[m
[31m-        <isset property="doc.target"/>[m
[31m-      </condition>[m
[31m-      <property name="_genskip-guide" value="DUMMY"/>[m
[31m-      <condition property="_genskip-util-guide" value="DUMMY">[m
[31m-        <equals arg1="util-guide" arg2="${doc.target}"/>[m
[31m-      </condition>[m
[31m-      <condition property="_genskip-util-guide" value="-dbtransform-skip">[m
[31m-        <isset property="doc.target"/>[m
[31m-      </condition>[m
[31m-      <property name="_genskip-util-guide" value="DUMMY"/>[m
[31m-[m
[31m-      <antcall target="docbook-transform" inheritrefs="true">[m
[31m-        <param name="${_genskip-guide}" value="true"/>[m
[31m-        <param name="doc.name" value="guide"/>[m
[31m-      </antcall>[m
[31m-      <antcall target="docbook-transform" inheritrefs="true">[m
[31m-        <param name="${_genskip-util-guide}" value="true"/>[m
[31m-        <param name="doc.name" value="util-guide"/>[m
[31m-      </antcall>[m
[31m-      <antcall target="-gen-docs-complete"/>[m
[31m-    </target>[m
[31m-[m
[31m-    <!-- See comments at top of "build-docbook.xml" about doc.target property -->[m
[31m-    <target name="validate-docs" depends="-ivy-setup"[m
[31m-          description="Validate project DocBook source files">[m
[31m-    <!-- The 'depends' above would be redundant, except that Gradle needs[m
[31m-         -ivy-setup to execute BEFORE the first antcall executes -->[m
[31m-[m
[31m-      <!-- These doc-skip properties can be simplified once we require Ant 1.8 -->[m
[31m-      <condition property="_valskip-guide" value="DUMMY">[m
[31m-        <equals arg1="guide" arg2="${doc.target}"/>[m
[31m-      </condition>[m
[31m-      <condition property="_valskip-guide" value="validation.skip">[m
[31m-        <isset property="doc.target"/>[m
[31m-      </condition>[m
[31m-      <property name="_valskip-guide" value="DUMMY"/>[m
[31m-      <condition property="_valskip-util-guide" value="DUMMY">[m
[31m-        <equals arg1="util-guide" arg2="${doc.target}"/>[m
[31m-      </condition>[m
[31m-      <condition property="_valskip-util-guide" value="validation.skip">[m
[31m-        <isset property="doc.target"/>[m
[31m-      </condition>[m
[31m-      <property name="_valskip-util-guide" value="DUMMY"/>[m
[31m-      <antcall target="validate-doc" inheritrefs="true">[m
[31m-        <param name="${_valskip-guide}" value="true"/>[m
[31m-        <param name="doc.name" value="guide"/>[m
[31m-      </antcall>[m
[31m-      <antcall target="validate-doc" inheritrefs="true">[m
[31m-        <param name="${_valskip-util-guide}" value="true"/>[m
[31m-        <param name="doc.name" value="util-guide"/>[m
[31m-      </antcall>[m
[31m-    </target>[m
[31m-[m
[31m-    <target name="-rm-rngcat" unless="_no-centx-url-change">[m
[31m-      <delete file="stylesheets/rng-catalog.xml" quiet="true"/>[m
[31m-    </target>[m
[31m-[m
[31m-    <target name="-validation-setup">[m
[31m-      <loadfile srcFile="build/local.centx_url"[m
[31m-                failonerror="false" property="_lasturl"/>[m
[31m-      <condition property="_no-centx-url-change">[m
[31m-        <equals arg1="${_lasturl}" arg2="${dbcentx.url}"/>[m
[31m-      </condition>[m
[31m-      <antcall target="-rm-rngcat"/>[m
[31m-      <copy file="build/rng-catalog-template.xml"[m
[31m-            tofile="stylesheets/rng-catalog.xml">[m
[31m-        <filterset>[m
[31m-          <filter token="DBCENTX_URL" value="${dbcentx.url}"/>[m
[31m-        </filterset>[m
[31m-      </copy>[m
[31m-      <echo file="build/local.centx_url" message="${dbcentx.url}"/>[m
[31m-    </target>[m
[31m-[m
[31m-    <target name="-prep-license-files">[m
[31m-      <mkdir dir="doc"/>[m
[31m-      <fixcrlf destdir="doc" preservelastmodified='true' eol="crlf"[m
[31m-               srcdir="doc-src" includes="*_lic.txt"/>[m
[31m-    </target>[m
[31m-[m
[31m-    <target name="osgi" depends="-ivy-setup, hsqldb"[m
[31m-      description="Generates 'hsqldb-osgi.jar' file with OSGI properties in manifest">[m
[31m-      <pathconvert property="bndjar.file" refid="bnd-jar.cpref"/>[m
[31m-      <!-- Purposefully not using the bndwrap task available for this purpose,[m
[31m-           because the docs don't explain how to use the attributes clearly enough[m
[31m-           to figure out how to use it. -->[m
[31m-      <java fork="true" dir="lib" classpath="${bndjar.file}"[m
[31m-            outputproperty="out.0" errorproperty="err.0"[m
[31m-            resultproperty="exec.val.0"[m
[31m-            classname="aQute.bnd.main.bnd">[m
[31m-        <sysproperty key="hsqldb.version" value="${hsqldb.version}"/>[m
[31m-        <sysproperty key="build.description" value="${description}"/>[m
[31m-        <sysproperty key="hsqldb.title" value="${hsqldb.title}"/>[m
[31m-        <arg value="wrap"/>[m
[31m-        <arg value="--output"/>[m
[31m-        <arg value="hsqldb-osgi${jdk8string}.jar"/>[m
[31m-        <arg value="--properties"/>[m
[31m-        <arg file="build/hsqldb.bnd"/>[m
[31m-        <arg value="hsqldb${jdk8string}.jar"/>[m
[31m-      </java>[m
[31m-      <condition property="_do-abort" value="DUMMY">[m
[31m-        <not> <equals arg1="0" arg2="${exec.val.0}"/> </not>[m
[31m-      </condition>[m
[31m-      <fail if="_do-abort">Exiting due to BND JVM exit value ${exec.val.0}.[m
[31m-JVM stdout: ---------------------------------------------------[m
[31m-${out.0}[m
[31m-JVM stderr: ---------------------------------------------------[m
[31m-${err.0}</fail>[m
[31m-      <delete file="lib/hsqldb${jdk8string}.jar"/>[m
[31m-    </target>[m
[31m-</project>[m
[1mdiff --git a/hsqldb/build/cfdistro.bash b/hsqldb/build/cfdistro.bash[m
[1mdeleted file mode 100644[m
[1mindex 0907de0..0000000[m
[1m--- a/hsqldb/build/cfdistro.bash[m
[1m+++ /dev/null[m
[36m@@ -1,119 +0,0 @@[m
[31m-#!/bin/bash -p[m
[31m-PROGNAME="${0##*/}"[m
[31m-[m
[31m-# Copyright (c) 2001-2009, The HSQL Development Group[m
[31m-# All rights reserved.[m
[31m-#[m
[31m-# Redistribution and use in source and binary forms, with or without[m
[31m-# modification, are permitted provided that the following conditions are met:[m
[31m-#[m
[31m-# Redistributions of source code must retain the above copyright notice, this[m
[31m-# list of conditions and the following disclaimer.[m
[31m-#[m
[31m-# Redistributions in binary form must reproduce the above copyright notice,[m
[31m-# this list of conditions and the following disclaimer in the documentation[m
[31m-# and/or other materials provided with the distribution.[m
[31m-#[m
[31m-# Neither the name of the HSQL Development Group nor the names of its[m
[31m-# contributors may be used to endorse or promote products derived from this[m
[31m-# software without specific prior written permission.[m
[31m-#[m
[31m-# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"[m
[31m-# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE[m
[31m-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE[m
[31m-# ARE DISCLAIMED. IN NO EVENT SHALL HSQL DEVELOPMENT GROUP, HSQLDB.ORG,[m
[31m-# OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,[m
[31m-# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,[m
[31m-# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;[m
[31m-# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND[m
[31m-# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT[m
[31m-# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS[m
[31m-# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.[m
[31m-[m
[31m-# This script generates a concise listing of differences between two[m
[31m-# distributions.[m
[31m-# This script obviously requires Bash.  I don't know whether it works on Cygwin.[m
[31m-[m
[31m-# You run this script against two directory branches.[m
[31m-# If you are starting with two zip distributions, you must extract them first.[m
[31m-# If you are going to investigate differences, then set up the distribution[m
[31m-# directories so that the highest directories of interest are peers, like[m
[31m-#    cd /tmp/me[m
[31m-#    mkdir cfdir[m
[31m-#    unzip -q /tmp/hsqldb-x1.zip[m
[31m-#    mv hsqldb-x1/hsqldb cfdir/x1[m
[31m-#    unzip -q /tmp/hsqldb-x2.zip[m
[31m-#    mv hsqldb-x2/hsqldb cfdir/x2[m
[31m-#    cd cfdir[m
[31m-#    /path/to/cfdistro.bash x1 x2[m
[31m-# It is then very easy to view differences between the distributions textually[m
[31m-# or graphically.  If your file difference report (".../files.diff") contains[m
[31m-#  < hsqldb/testrun/hsqldb/TestSelf.txt  -rw-r--r-- 1 blaine blaine   52585[m
[31m-#  > hsqldb/testrun/hsqldb/TestSelf.txt  -rw-r--r-- 1 blaine blaine   52587[m
[31m-# then you use vim to check encodings and fileformat (EOLs), diff for[m
[31m-# differences in text, or gvimdiff for diffrences graphically.[m
[31m-#   gvim */hsqldb/testrun/hsqldb/TestSelf.txt  # Check encoding + fileformat[m
[31m-#   diff */hsqldb/testrun/hsqldb/TestSelf.txt  # See differences in text[m
[31m-#   gvimdiff */hsqldb/testrun/hsqldb/TestSelf.txt # See differences graphically[m
[31m-[m
[31m-# This script can easily be enhanced to do the extraction and directory setup[m
[31m-# steps.[m
[31m-# We purposefully ignore directory and file modification timestamps.[m
[31m-# Modify the perl regular expressions to include or exclude other items in[m
[31m-# the "ls -l" listings.[m
[31m-# The generation timestamps and version labels inside of generated JavaDoc[m
[31m-# output will make these files differ.  I usually manually compare an index[m
[31m-# file and an actual class HTML file, then exclude the rest from the summary[m
[31m-# file with a command like[m
[31m-#   perl -ni -we 'print unless m:^. doc/apidocs/:;' /tmp/cfdistro-13756/files.diff[m
[31m-[m
[31m-shopt -s xpg_echo[m
[31m-set +u[m
[31m-[m
[31m-Failout() {[m
[31m-    echo "Aborting $PROGNAME:  $*" 1>&2[m
[31m-    exit 1[m
[31m-}[m
[31m-[ -n "$TMPDIR" ] || TMPDIR=/tmp[m
[31m-WORKDIR="$TMPDIR/${PROGNAME%.*}-$$"[m
[31m-mkdir "$WORKDIR" || Failout "Failed to make work director '$WORKDIR'"[m
[31m-[m
[31m-type -t perl >&- || Failout "'$PROGNAME' requires 'perl' in your search path"[m
[31m-[m
[31m-[ $# -ne 2 ] && Failout "SYNTAX:  $PROGNAME dir1/path dir2/path"[m
[31m-BASE1="$1"; shift[m
[31m-BASE2="$1"; shift[m
[31m-[m
[31m-STARTDIR="$PWD"[m
[31m-cd "$BASE1" || Failout "Failed to cd to first base dir: $BASE1"[m
[31m-find * -type d | xargs ls -ld |[m
[31m-    perl -nwe 'm/(.+?)200\d-\d\d-\d\d \d\d:\d\d\s+(.+)/; print "$2  $1\n";' |[m
[31m-    sort > $WORKDIR/dirs.1[m
[31m-find * -type f | xargs ls -ld |[m
[31m-    perl -nwe 'm/(.+?)200\d-\d\d-\d\d \d\d:\d\d\s+(.+)/; print "$2  $1\n";' |[m
[31m-    sort > $WORKDIR/files.1[m
[31m-[m
[31m-cd "$STARTDIR"[m
[31m-cd "$BASE2" || Failout "Failed to cd to first base dir: $BASE2"[m
[31m-find * -type d | xargs ls -ld |[m
[31m-    perl -nwe 'm/(.+?)200\d-\d\d-\d\d \d\d:\d\d\s+(.+)/; print "$2  $1\n";' |[m
[31m-    sort > $WORKDIR/dirs.2[m
[31m-find * -type f | xargs ls -ld |[m
[31m-    perl -nwe 'm/(.+?)200\d-\d\d-\d\d \d\d:\d\d\s+(.+)/; print "$2  $1\n";' |[m
[31m-    sort > $WORKDIR/files.2[m
[31m-[m
[31m-cd "$STARTDIR"[m
[31m-cd "$WORKDIR" || Failout "Failed to cd to work dir: $WORKDIR"[m
[31m-declare -i retval=0[m
[31m-cmp -s dirs.1 dirs.2 || {[m
[31m-    ((retval = retval + 1))[m
[31m-    diff dirs.1 dirs.2 | egrep '^[<>]' > dirs.diff[m
[31m-    echo "See dir diffs at $WORKDIR/dirs.diff"[m
[31m-}[m
[31m-cmp -s files.1 files.2 || {[m
[31m-    ((retval = retval + 1))[m
[31m-    diff files.1 files.2 | egrep '^[<>]' > files.diff[m
[31m-    echo "See dir diffs at $WORKDIR/files.diff"[m
[31m-}[m
[31m-[m
[31m-exit $retval[m
[1mdiff --git a/hsqldb/build/clean.test.suite.cmd b/hsqldb/build/clean.test.suite.cmd[m
[1mdeleted file mode 100644[m
[1mindex f76d9e0..0000000[m
[1m--- a/hsqldb/build/clean.test.suite.cmd[m
[1m+++ /dev/null[m
[36m@@ -1,2 +0,0 @@[m
[31m-call setenv.cmd[m
[31m-call ant -f test.xml clean.test.suite[m
[1mdiff --git a/hsqldb/build/dbuInstallSheetsWrapper.groovy b/hsqldb/build/dbuInstallSheetsWrapper.groovy[m
[1mdeleted file mode 100644[m
[1mindex 3508bae..0000000[m
[1m--- a/hsqldb/build/dbuInstallSheetsWrapper.groovy[m
[1m+++ /dev/null[m
[36m@@ -1 +0,0 @@[m
[31m-retVal = DocBookUtil.installStyleSheets(params[0], params[1])[m
[1mdiff --git a/hsqldb/build/dependencies.gradle b/hsqldb/build/dependencies.gradle[m
[1mdeleted file mode 100644[m
[1mindex b676012..0000000[m
[1m--- a/hsqldb/build/dependencies.gradle[m
[1m+++ /dev/null[m
[36m@@ -1,44 +0,0 @@[m
[31m-configurations {[m
[31m-    xcsdeRngvalJar[m
[31m-    xcsdeRngvalDeps.extendsFrom xcsdeRngvalJar[m
[31m-    xalan.extendsFrom xcsdeRngvalJar[m
[31m-    fop[m
[31m-    bndJar[m
[31m-    jflexJar[m
[31m-}[m
[31m-[m
[31m-dependencies {[m
[31m-  //<dependencies defaultconfmapping="*->default">[m
[31m-  fop('org.apache.xmlgraphics:fop:1.0') { transitive = false }[m
[31m-  fop('org.apache.xmlgraphics:xmlgraphics-commons:1.4') { transitive = false }[m
[31m-  fop('org.apache.avalon.framework:avalon-framework-api:4.3.1') { transitive = false }[m
[31m-  fop('org.apache.avalon.framework:avalon-framework-impl:4.3.1') { transitive = false }[m
[31m-  fop('org.apache.xmlgraphics:batik-svg-dom:1.7') { transitive = false }[m
[31m-  fop('org.apache.xmlgraphics:batik-bridge:1.7') { transitive = false }[m
[31m-  fop('org.apache.xmlgraphics:batik-bridge:1.7') { transitive = false }[m
[31m-  fop('org.apache.xmlgraphics:batik-util:1.7') { transitive = false }[m
[31m-  fop('org.apache.xmlgraphics:batik-dom:1.7') { transitive = false }[m
[31m-  fop('org.apache.xmlgraphics:batik-css:1.7') { transitive = false }[m
[31m-  fop('org.apache.xmlgraphics:batik-awt-util:1.7') { transitive = false }[m
[31m-  fop('org.apache.xmlgraphics:batik-gvt:1.7') { transitive = false }[m
[31m-  fop('org.apache.xmlgraphics:batik-transcoder:1.7') { transitive = false }[m
[31m-  fop('org.apache.xmlgraphics:batik-extension:1.7') { transitive = false }[m
[31m-  fop('org.apache.xmlgraphics:batik-ext:1.7') { transitive = false }[m
[31m-[m
[31m-  fop('commons-io:commons-io:2.1')[m
[31m-  fop('commons-logging:commons-logging:1.1.1')[m
[31m-  xalan('xalan:xalan:2.7.1')[m
[31m-  xalan('xalan:serializer:2.7.1')[m
[31m-  xalan('net.sf.docbook:docbook-xsl-xalan:1.0.0')[m
[31m-  xalan('xml-apis:xml-apis:1.0.b2')[m
[31m-  xalan('xerces:xercesImpl:2.10.0')[m
[31m-  xcsdeRngvalJar('com.admc:xcsde-rngval:0.1.0')[m
[31m-    /*   conf extending gets this xcsdeRngvalJar into the xcsdeRngvalDeps and[m
[31m-         into xalan.[m
[31m-         Primary purpose of this jar is for the admc MSV validator.[m
[31m-         It is also added to the XSLT CLASSPATH only to add the XInclude[m
[31m-         settings file to the CLASSPATH.  Needed by Xalan during XSLT.[m
[31m-    */[m
[31m-  bndJar('biz.aQute.bnd:biz.aQute.bnd:5.3.0')	[m
[31m-  bndJar('de.jflex:jflex:1.4.3')[m
[31m-}[m
[1mdiff --git a/hsqldb/build/gradle/wrapper/gradle-wrapper.jar b/hsqldb/build/gradle/wrapper/gradle-wrapper.jar[m
[1mdeleted file mode 100644[m
[1mindex e708b1c..0000000[m
Binary files a/hsqldb/build/gradle/wrapper/gradle-wrapper.jar and /dev/null differ
[1mdiff --git a/hsqldb/build/gradle/wrapper/gradle-wrapper.properties b/hsqldb/build/gradle/wrapper/gradle-wrapper.properties[m
[1mdeleted file mode 100644[m
[1mindex 4d9ca16..0000000[m
[1m--- a/hsqldb/build/gradle/wrapper/gradle-wrapper.properties[m
[1m+++ /dev/null[m
[36m@@ -1,5 +0,0 @@[m
[31m-distributionBase=GRADLE_USER_HOME[m
[31m-distributionPath=wrapper/dists[m
[31m-distributionUrl=https\://services.gradle.org/distributions/gradle-6.7.1-bin.zip[m
[31m-zipStoreBase=GRADLE_USER_HOME[m
[31m-zipStorePath=wrapper/dists[m
[1mdiff --git a/hsqldb/build/gradlew b/hsqldb/build/gradlew[m
[1mdeleted file mode 100644[m
[1mindex 4f906e0..0000000[m
[1m--- a/hsqldb/build/gradlew[m
[1m+++ /dev/null[m
[36m@@ -1,185 +0,0 @@[m
[31m-#!/usr/bin/env sh[m
[31m-[m
[31m-#[m
[31m-# Copyright 2015 the original author or authors.[m
[31m-#[m
[31m-# Licensed under the Apache License, Version 2.0 (the "License");[m
[31m-# you may not use this file except in compliance with the License.[m
[31m-# You may obtain a copy of the License at[m
[31m-#[m
[31m-#      https://www.apache.org/licenses/LICENSE-2.0[m
[31m-#[m
[31m-# Unless required by applicable law or agreed to in writing, software[m
[31m-# distributed under the License is distributed on an "AS IS" BASIS,[m
[31m-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[31m-# See the License for the specific language governing permissions and[m
[31m-# limitations under the License.[m
[31m-#[m
[31m-[m
[31m-##############################################################################[m
[31m-##[m
[31m-##  Gradle start up script for UN*X[m
[31m-##[m
[31m-##############################################################################[m
[31m-[m
[31m-# Attempt to set APP_HOME[m
[31m-# Resolve links: $0 may be a link[m
[31m-PRG="$0"[m
[31m-# Need this for relative symlinks.[m
[31m-while [ -h "$PRG" ] ; do[m
[31m-    ls=`ls -ld "$PRG"`[m
[31m-    link=`expr "$ls" : '.*-> \(.*\)$'`[m
[31m-    if expr "$link" : '/.*' > /dev/null; then[m
[31m-        PRG="$link"[m
[31m-    else[m
[31m-        PRG=`dirname "$PRG"`"/$link"[m
[31m-    fi[m
[31m-done[m
[31m-SAVED="`pwd`"[m
[31m-cd "`dirname \"$PRG\"`/" >/dev/null[m
[31m-APP_HOME="`pwd -P`"[m
[31m-cd "$SAVED" >/dev/null[m
[31m-[m
[31m-APP_NAME="Gradle"[m
[31m-APP_BASE_NAME=`basename "$0"`[m
[31m-[m
[31m-# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.[m
[31m-DEFAULT_JVM_OPTS='"-Xmx64m" "-Xms64m"'[m
[31m-[m
[31m-# Use the maximum available, or set MAX_FD != -1 to use that value.[m
[31m-MAX_FD="maximum"[m
[31m-[m
[31m-warn () {[m
[31m-    echo "$*"[m
[31m-}[m
[31m-[m
[31m-die () {[m
[31m-    echo[m
[31m-    echo "$*"[m
[31m-    echo[m
[31m-    exit 1[m
[31m-}[m
[31m-[m
[31m-# OS specific support (must be 'true' or 'false').[m
[31m-cygwin=false[m
[31m-msys=false[m
[31m-darwin=false[m
[31m-nonstop=false[m
[31m-case "`uname`" in[m
[31m-  CYGWIN* )[m
[31m-    cygwin=true[m
[31m-    ;;[m
[31m-  Darwin* )[m
[31m-    darwin=true[m
[31m-    ;;[m
[31m-  MINGW* )[m
[31m-    msys=true[m
[31m-    ;;[m
[31m-  NONSTOP* )[m
[31m-    nonstop=true[m
[31m-    ;;[m
[31m-esac[m
[31m-[m
[31m-CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar[m
[31m-[m
[31m-[m
[31m-# Determine the Java command to use to start the JVM.[m
[31m-if [ -n "$JAVA_HOME" ] ; then[m
[31m-    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then[m
[31m-        # IBM's JDK on AIX uses strange locations for the executables[m
[31m-        JAVACMD="$JAVA_HOME/jre/sh/java"[m
[31m-    else[m
[31m-        JAVACMD="$JAVA_HOME/bin/java"[m
[31m-    fi[m
[31m-    if [ ! -x "$JAVACMD" ] ; then[m
[31m-        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME[m
[31m-[m
[31m-Please set the JAVA_HOME variable in your environment to match the[m
[31m-location of your Java installation."[m
[31m-    fi[m
[31m-else[m
[31m-    JAVACMD="java"[m
[31m-    which java >/dev/null 2>&1 || die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.[m
[31m-[m
[31m-Please set the JAVA_HOME variable in your environment to match the[m
[31m-location of your Java installation."[m
[31m-fi[m
[31m-[m
[31m-# Increase the maximum file descriptors if we can.[m
[31m-if [ "$cygwin" = "false" -a "$darwin" = "false" -a "$nonstop" = "false" ] ; then[m
[31m-    MAX_FD_LIMIT=`ulimit -H -n`[m
[31m-    if [ $? -eq 0 ] ; then[m
[31m-        if [ "$MAX_FD" = "maximum" -o "$MAX_FD" = "max" ] ; then[m
[31m-            MAX_FD="$MAX_FD_LIMIT"[m
[31m-        fi[m
[31m-        ulimit -n $MAX_FD[m
[31m-        if [ $? -ne 0 ] ; then[m
[31m-            warn "Could not set maximum file descriptor limit: $MAX_FD"[m
[31m-        fi[m
[31m-    else[m
[31m-        warn "Could not query maximum file descriptor limit: $MAX_FD_LIMIT"[m
[31m-    fi[m
[31m-fi[m
[31m-[m
[31m-# For Darwin, add options to specify how the application appears in the dock[m
[31m-if $darwin; then[m
[31m-    GRADLE_OPTS="$GRADLE_OPTS \"-Xdock:name=$APP_NAME\" \"-Xdock:icon=$APP_HOME/media/gradle.icns\""[m
[31m-fi[m
[31m-[m
[31m-# For Cygwin or MSYS, switch paths to Windows format before running java[m
[31m-if [ "$cygwin" = "true" -o "$msys" = "true" ] ; then[m
[31m-    APP_HOME=`cygpath --path --mixed "$APP_HOME"`[m
[31m-    CLASSPATH=`cygpath --path --mixed "$CLASSPATH"`[m
[31m-[m
[31m-    JAVACMD=`cygpath --unix "$JAVACMD"`[m
[31m-[m
[31m-    # We build the pattern for arguments to be converted via cygpath[m
[31m-    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`[m
[31m-    SEP=""[m
[31m-    for dir in $ROOTDIRSRAW ; do[m
[31m-        ROOTDIRS="$ROOTDIRS$SEP$dir"[m
[31m-        SEP="|"[m
[31m-    done[m
[31m-    OURCYGPATTERN="(^($ROOTDIRS))"[m
[31m-    # Add a user-defined pattern to the cygpath arguments[m
[31m-    if [ "$GRADLE_CYGPATTERN" != "" ] ; then[m
[31m-        OURCYGPATTERN="$OURCYGPATTERN|($GRADLE_CYGPATTERN)"[m
[31m-    fi[m
[31m-    # Now convert the arguments - kludge to limit ourselves to /bin/sh[m
[31m-    i=0[m
[31m-    for arg in "$@" ; do[m
[31m-        CHECK=`echo "$arg"|egrep -c "$OURCYGPATTERN" -`[m
[31m-        CHECK2=`echo "$arg"|egrep -c "^-"`                                 ### Determine if an option[m
[31m-[m
[31m-        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition[m
[31m-            eval `echo args$i`=`cygpath --path --ignore --mixed "$arg"`[m
[31m-        else[m
[31m-            eval `echo args$i`="\"$arg\""[m
[31m-        fi[m
[31m-        i=`expr $i + 1`[m
[31m-    done[m
[31m-    case $i in[m
[31m-        0) set -- ;;[m
[31m-        1) set -- "$args0" ;;[m
[31m-        2) set -- "$args0" "$args1" ;;[m
[31m-        3) set -- "$args0" "$args1" "$args2" ;;[m
[31m-        4) set -- "$args0" "$args1" "$args2" "$args3" ;;[m
[31m-        5) set -- "$args0" "$args1" "$args2" "$args3" "$args4" ;;[m
[31m-        6) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" ;;[m
[31m-        7) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" ;;[m
[31m-        8) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" ;;[m
[31m-        9) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" "$args8" ;;[m
[31m-    esac[m
[31m-fi[m
[31m-[m
[31m-# Escape application args[m
[31m-save () {[m
[31m-    for i do printf %s\\n "$i" | sed "s/'/'\\\\''/g;1s/^/'/;\$s/\$/' \\\\/" ; done[m
[31m-    echo " "[m
[31m-}[m
[31m-APP_ARGS=`save "$@"`[m
[31m-[m
[31m-# Collect all arguments for the java command, following the shell quoting and substitution rules[m
[31m-eval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS "\"-Dorg.gradle.appname=$APP_BASE_NAME\"" -classpath "\"$CLASSPATH\"" org.gradle.wrapper.GradleWrapperMain "$APP_ARGS"[m
[31m-[m
[31m-exec "$JAVACMD" "$@"[m
[1mdiff --git a/hsqldb/build/gradlew.bat b/hsqldb/build/gradlew.bat[m
[1mdeleted file mode 100644[m
[1mindex 107acd3..0000000[m
[1m--- a/hsqldb/build/gradlew.bat[m
[1m+++ /dev/null[m
[36m@@ -1,89 +0,0 @@[m
[31m-@rem[m
[31m-@rem Copyright 2015 the original author or authors.[m
[31m-@rem[m
[31m-@rem Licensed under the Apache License, Version 2.0 (the "License");[m
[31m-@rem you may not use this file except in compliance with the License.[m
[31m-@rem You may obtain a copy of the License at[m
[31m-@rem[m
[31m-@rem      https://www.apache.org/licenses/LICENSE-2.0[m
[31m-@rem[m
[31m-@rem Unless required by applicable law or agreed to in writing, software[m
[31m-@rem distributed under the License is distributed on an "AS IS" BASIS,[m
[31m-@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[31m-@rem See the License for the specific language governing permissions and[m
[31m-@rem limitations under the License.[m
[31m-@rem[m
[31m-[m
[31m-@if "%DEBUG%" == "" @echo off[m
[31m-@rem ##########################################################################[m
[31m-@rem[m
[31m-@rem  Gradle startup script for Windows[m
[31m-@rem[m
[31m-@rem ##########################################################################[m
[31m-[m
[31m-@rem Set local scope for the variables with windows NT shell[m
[31m-if "%OS%"=="Windows_NT" setlocal[m
[31m-[m
[31m-set DIRNAME=%~dp0[m
[31m-if "%DIRNAME%" == "" set DIRNAME=.[m
[31m-set APP_BASE_NAME=%~n0[m
[31m-set APP_HOME=%DIRNAME%[m
[31m-[m
[31m-@rem Resolve any "." and ".." in APP_HOME to make it shorter.[m
[31m-for %%i in ("%APP_HOME%") do set APP_HOME=%%~fi[m
[31m-[m
[31m-@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.[m
[31m-set DEFAULT_JVM_OPTS="-Xmx64m" "-Xms64m"[m
[31m-[m
[31m-@rem Find java.exe[m
[31m-if defined JAVA_HOME goto findJavaFromJavaHome[m
[31m-[m
[31m-set JAVA_EXE=java.exe[m
[31m-%JAVA_EXE% -version >NUL 2>&1[m
[31m-if "%ERRORLEVEL%" == "0" goto execute[m
[31m-[m
[31m-echo.[m
[31m-echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.[m
[31m-echo.[m
[31m-echo Please set the JAVA_HOME variable in your environment to match the[m
[31m-echo location of your Java installation.[m
[31m-[m
[31m-goto fail[m
[31m-[m
[31m-:findJavaFromJavaHome[m
[31m-set JAVA_HOME=%JAVA_HOME:"=%[m
[31m-set JAVA_EXE=%JAVA_HOME%/bin/java.exe[m
[31m-[m
[31m-if exist "%JAVA_EXE%" goto execute[m
[31m-[m
[31m-echo.[m
[31m-echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%[m
[31m-echo.[m
[31m-echo Please set the JAVA_HOME variable in your environment to match the[m
[31m-echo location of your Java installation.[m
[31m-[m
[31m-goto fail[m
[31m-[m
[31m-:execute[m
[31m-@rem Setup the command line[m
[31m-[m
[31m-set CLASSPATH=%APP_HOME%\gradle\wrapper\gradle-wrapper.jar[m
[31m-[m
[31m-[m
[31m-@rem Execute Gradle[m
[31m-"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% "-Dorg.gradle.appname=%APP_BASE_NAME%" -classpath "%CLASSPATH%" org.gradle.wrapper.GradleWrapperMain %*[m
[31m-[m
[31m-:end[m
[31m-@rem End local scope for the variables with windows NT shell[m
[31m-if "%ERRORLEVEL%"=="0" goto mainEnd[m
[31m-[m
[31m-:fail[m
[31m-rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of[m
[31m-rem the _cmd.exe /c_ return code![m
[31m-if  not "" == "%GRADLE_EXIT_CONSOLE%" exit 1[m
[31m-exit /b 1[m
[31m-[m
[31m-:mainEnd[m
[31m-if "%OS%"=="Windows_NT" endlocal[m
[31m-[m
[31m-:omega[m
[1mdiff --git a/hsqldb/build/gui-initial.setting b/hsqldb/build/gui-initial.setting[m
[1mdeleted file mode 100644[m
[1mindex b6b9fba..0000000[m
[1m--- a/hsqldb/build/gui-initial.setting[m
[1m+++ /dev/null[m
[36m@@ -1,13 +0,0 @@[m
[31m-<?xml version="1.0" encoding="UTF-8"?>[m
[31m-[m
[31m-<!-- The whole goal here is to enable filter-out-tasks-with-no-descriptions -->[m
[31m-[m
[31m-<root>[m
[31m-  <setting name="task-tab">[m
[31m-    <setting name="basic-project-and-task-filter">[m
[31m-      <setting name="filter-out-tasks-with-no-description" value="true"/>[m
[31m-      <setting name="filtered-out-projects"/>[m
[31m-      <setting name="filtered-out-tasks"/>[m
[31m-    </setting>[m
[31m-  </setting>[m
[31m-</root>[m
[1mdiff --git a/hsqldb/build/gui-welcome.txt b/hsqldb/build/gui-welcome.txt[m
[1mdeleted file mode 100644[m
[1mindex f7d7fde..0000000[m
[1m--- a/hsqldb/build/gui-welcome.txt[m
[1m+++ /dev/null[m
[36m@@ -1,16 +0,0 @@[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-                    Please stand by as Gradle starts up...[m
[31m-[m
[31m-[m
[31m-[m
[31m-                  This window will remain after it's started.[m
[31m-            If it annoys you, please minimize it.  (Do not close it!)[m
[31m-[m
[31m-[m
[1mdiff --git a/hsqldb/build/hsqldb.bnd b/hsqldb/build/hsqldb.bnd[m
[1mdeleted file mode 100644[m
[1mindex 79e0cfe..0000000[m
[1m--- a/hsqldb/build/hsqldb.bnd[m
[1m+++ /dev/null[m
[36m@@ -1,10 +0,0 @@[m
[31m-# File for use by 'bnd' utility for generating OSGi Bundle descriptions.[m
[31m-# https://bnd.bndtools.org/[m
[31m-[m
[31m-Bundle-Version: ${hsqldb.version}[m
[31m-Bundle-Description: ${build.description}[m
[31m-Bundle-Name: ${hsqldb.title}[m
[31m-Bundle-SymbolicName: org.hsqldb.hsqldb[m
[31m-Export-Package: *[m
[31m-Import-Package: *;resolution:=optional[m
[31m--removeheaders: Bnd-*, Tool, Require-Capability[m
\ No newline at end of file[m
[1mdiff --git a/hsqldb/build/ivy.xml b/hsqldb/build/ivy.xml[m
[1mdeleted file mode 100644[m
[1mindex c453459..0000000[m
[1m--- a/hsqldb/build/ivy.xml[m
[1m+++ /dev/null[m
[36m@@ -1,57 +0,0 @@[m
[31m-<ivy-module version="2.0">[m
[31m-  <!-- $Id: ivy.xml 6364 2021-07-16 19:23:53Z fredt $ -->[m
[31m-  <info organisation="hsqldb" module="docbook"/>[m
[31m-  <configurations defaultconf="fop">[m
[31m-    <conf name="xcsdeRngvalJar" transitive="false"[m
[31m-          description="Single XCSDE RELAX NG XML Validator jar file"/>[m
[31m-    <conf name="xcsdeRngvalDeps" transitive="true"[m
[31m-          description="Dependecies of XCSDE RELAX NG XML Validator Jar file"[m
[31m-          extends="xcsdeRngvalJar"/>[m
[31m-    <conf name="xalan" description="Xalan Xslt" transitive="false"[m
[31m-          extends="xcsdeRngvalJar"/>[m
[31m-    <conf name="fop" description="FOP" transitive="false"/>[m
[31m-    <conf name="bndJar" transitive="false"[m
[31m-          description="aQute Bundle Tool Library jar file"/>[m
[31m-    <conf name="jflexJar" transitive="false"[m
[31m-          description="JFlex Library jar file"/>[m
[31m-  </configurations>[m
[31m-  <dependencies defaultconfmapping="*->default">[m
[31m-    <dependency name="fop" org="org.apache.xmlgraphics" rev="1.0"/>[m
[31m-    <dependency name="xmlgraphics-commons" org="org.apache.xmlgraphics"[m
[31m-                rev="1.4"/>[m
[31m-    <dependency name="avalon-framework-api" org="org.apache.avalon.framework"[m
[31m-                rev="4.3.1"/>[m
[31m-    <dependency name="avalon-framework-impl" org="org.apache.avalon.framework"[m
[31m-                rev="4.3.1"/>[m
[31m-    <dependency name="batik-svg-dom" org="org.apache.xmlgraphics" rev="1.7"/>[m
[31m-    <dependency name="batik-bridge" org="org.apache.xmlgraphics" rev="1.7"/>[m
[31m-    <dependency name="batik-util" org="org.apache.xmlgraphics" rev="1.7"/>[m
[31m-    <dependency name="batik-dom" org="org.apache.xmlgraphics" rev="1.7"/>[m
[31m-    <dependency name="batik-css" org="org.apache.xmlgraphics" rev="1.7"/>[m
[31m-    <dependency name="batik-awt-util" org="org.apache.xmlgraphics" rev="1.7"/>[m
[31m-    <dependency name="batik-gvt" org="org.apache.xmlgraphics" rev="1.7"/>[m
[31m-    <dependency name="batik-transcoder" org="org.apache.xmlgraphics" rev="1.7"/>[m
[31m-    <dependency name="batik-extension" org="org.apache.xmlgraphics" rev="1.7"/>[m
[31m-    <dependency name="batik-ext" org="org.apache.xmlgraphics"[m
[31m-                rev="1.7" conf="fop"/>[m
[31m-    <dependency name="commons-io" org="commons-io" rev="2.1"/>[m
[31m-    <dependency name="commons-logging" org="commons-logging" rev="1.1.1"/>[m
[31m-    <dependency name="xalan" org="xalan" rev="2.7.1" conf="xalan"/>[m
[31m-    <dependency name="serializer" org="xalan" rev="2.7.1" conf="xalan"/>[m
[31m-    <dependency name="docbook-xsl-xalan" org="net.sf.docbook" rev="1.0.0"[m
[31m-                conf="xalan"/>[m
[31m-    <dependency name="xml-apis" org="xml-apis" rev="1.0.b2" conf="xalan"/>[m
[31m-    <dependency name="xercesImpl" org="xerces" rev="2.10.0"[m
[31m-                conf="xalan"/>[m
[31m-    <dependency name="xcsde-rngval" rev="0.1.0" org="com.admc"[m
[31m-                conf="xcsdeRngvalJar"/>[m
[31m-    <!-- conf extending gets this xcsdeRngvalJar into the xcsdeRngvalDeps and[m
[31m-         into xalan.[m
[31m-         Primary purpose of this jar is for the admc MSV validator.[m
[31m-         It is also added to the XSLT CLASSPATH only to add the XInclude[m
[31m-         settings file to the CLASSPATH.  Needed by Xalan during XSLT.[m
[31m-    -->[m
[31m-    <dependency name="biz.aQute.bnd" org="biz.aQute.bnd" rev="5.3.0" conf="bndJar"/>[m
[31m-    <dependency name="jflex" org="de.jflex" rev="1.4.3" conf="jflexJar"/>[m
[31m-  </dependencies>[m
[31m-</ivy-module>[m
[1mdiff --git a/hsqldb/build/ivysettings-sample.xml b/hsqldb/build/ivysettings-sample.xml[m
[1mdeleted file mode 100644[m
[1mindex d1f4a44..0000000[m
[1m--- a/hsqldb/build/ivysettings-sample.xml[m
[1m+++ /dev/null[m
[36m@@ -1,22 +0,0 @@[m
[31m-<ivysettings>[m
[31m-<!--[m
[31m-$Id: ivysettings-sample.xml 4684 2011-11-03 04:26:00Z unsaved $[m
[31m-[m
[31m-Edit your copy of this file (named "ivysettings.xml"), or replace it completely.[m
[31m-This file will work with any directory on any web server which[m
[31m-holds the plain jar files with names like BASENAME-VERSION.jar.[m
[31m--->[m
[31m-[m
[31m-  <caches checkUpToDate="false" resolutionCacheDir="${user.home}/.ivycache"[m
[31m-          ivyPattern="[module]-[revision].xml"[m
[31m-          defaultCacheDir="${user.home}/.ivycache"[m
[31m-          repositoryCacheDir="${user.home}/lib-repos"[m
[31m-          artifactPattern="[artifact]-[revision].[ext]"/>[m
[31m-  <settings defaultResolver="default"/>[m
[31m-  <resolvers>[m
[31m-    <ibiblio name="default" m2compatible="true"/>[m
[31m-    <chain name="downloadGrapes">[m
[31m-      <chain ref="default"/>[m
[31m-    </chain>[m
[31m-  </resolvers>[m
[31m-</ivysettings>[m
[1mdiff --git a/hsqldb/build/mvn-pub.gradle b/hsqldb/build/mvn-pub.gradle[m
[1mdeleted file mode 100644[m
[1mindex 0a80e10..0000000[m
[1m--- a/hsqldb/build/mvn-pub.gradle[m
[1m+++ /dev/null[m
[36m@@ -1,286 +0,0 @@[m
[31m-/**[m
[31m- * Invoke this build file with Gradle's -b switch for POM- or[m
[31m- * Maven-publishing related tasks.[m
[31m- *[m
[31m- * Unfortunately, it is impractical to encapsulate all of the needed processing[m
[31m- * here, so there is some tight coupling between this file and "build.gradle".[m
[31m- * (This file loads/applies "build.gradle").[m
[31m- *[m
[31m- * The tasks pulled in by this file require several properties to be set,[m
[31m- * for populating a POM file and for specifying (and optionally authenticating[m
[31m- * to a Maven repository server).[m
[31m- *[m
[31m- *****************************************************************************[m
[31m- * Instructions for doing a full, public release:[m
[31m- *[m
[31m- * Right after doing the build of the zip distributable with JDK 8 and[m
[31m- * javac.debug of false (according to "build-dist.gradle"), publish the same[m
[31m- * exact jar files that are in the zip.[m
[31m- * Use -x switches to prevent rebuilds of the jars which have been checksummed[m
[31m- * by 'build-dist' not by 'mvn-pub'.[m
[31m- *[m
[31m- * <PRE><CODE>[m
[31m- *     gradlew -x sqltool -x hsqldb -b mvn-pub.gradle[m
[31m- * </CODE></PRE>[m
[31m- *[m
[31m- * Now, for each alternative, adjust environment and build properties, like[m
[31m- * by setting build property 'build.debug', and run[m
[31m- *[m
[31m- * <PRE><CODE>[m
[31m- *   [single-command no longer works due to broken inter-dependencies:[m
[31m- *   gradlew -Pclassifier=NEW_CLASSIFIER -b mvn-pub.gradle clean-all uploadArchives][m
[31m- *   gradlew -b mvn-pub.gradle clean-all[m
[31m- *   gradlew -Pclassifier=NEW_CLASSIFIER -b mvn-pub.gradle sqltool[m
[31m- *   gradlew -Pclassifier=NEW_CLASSIFIER -b mvn-pub.gradle hsqldb[m
[31m- *   gradlew -Pclassifier=NEW_CLASSIFIER -b mvn-pub.gradle -x sqltool -x hsqldb[m
[31m- *[m
[31m- *   # Restore regular build property values[m
[31m- *   pushd ../lib; mkdir ../safe.d; mv -v hsqldb.jar sqltool.jar ../safe.d/[m
[31m- *   mv -v hsqldb-jdk8.jar hsqldb.jar && mv -v sqltool-jdk8.jar sqltool.jar[m
[31m- *   popd[m
[31m- *   gradlew -Pclassifier=jdk8 -b mvn-pub.gradle -x sqltool -x hsqldb[m
[31m- *   [m
[31m- * </CODE></PRE>[m
[31m- * The clean-all will wipe .../doc, but the .../doc and everything else from[m
[31m- * your original dist build will be retained in .../dist/*.zip.[m
[31m- *****************************************************************************[m
[31m- * For snapshot builds, just publish jar-pairs individually, exactly as[m
[31m- * described in the 2nd part of "Instructions for doing a full, public[m
[31m- * release:" above, beginning with "Now, for each alternative".[m
[31m- * (In this case, clean-all really will blow away your only docs, so either[m
[31m- * back them up or regenerate them afterwards).[m
[31m- *[m
[31m- * @author Blaine Simpson  (blaine dot simpson at admc dot com)[m
[31m- */[m
[31m-[m
[31m-apply plugin: 'java'[m
[31m-apply plugin: 'maven'[m
[31m-apply plugin: 'signing'[m
[31m-[m
[31m-signing {[m
[31m-    required { project.hasProperty('signing.keyId') }[m
[31m-    sign configurations.archives[m
[31m-}[m
[31m-[m
[31m-project.ext.mvnBuild = true[m
[31m-apply from: 'build.gradle'[m
[31m-defaultTasks 'uploadArchives'[m
[31m-[m
[31m-configurations {[m
[31m-    deployJars[m
[31m-}[m
[31m-[m
[31m-List<String> ss = [];[m
[31m-// Apply property '(URL)' suffixes.  Strip suffix and convert type.[m
[31m-ext.properties.keySet().findResults {[m
[31m-    if (!it.endsWith('(URL)')) return null;[m
[31m-    final int sLen =  it.length()[m
[31m-    return it.substring(0, sLen - '(URL)'.length())[m
[31m-}.each { newName->[m
[31m-    // Impossible to remove ext members.  Closest we can do is to set to null.[m
[31m-    ext[newName] = new URL(ext[newName + '(URL)'])[m
[31m-    ext[newName + '(URL)'] = null[m
[31m-}[m
[31m-[m
[31m-if (project.hasProperty('mavenRepository.dest.url')) {[m
[31m-    def url = project.property('mavenRepository.dest.url')[m
[31m-    assert url != null:[m
[31m-        '''Property 'mavenRepository.dest.url' may not be null[m
[31m-'''[m
[31m-    assert url instanceof URL || url instanceof String:[m
[31m-        ('''Property 'mavenRepository.dest.url' must be of type URL.  Is a '''[m
[31m-                + url.class.name + '\n')[m
[31m-    if (url instanceof String && url.startsWith('scp')) {[m
[31m-        repositories { mavenCentral() }[m
[31m-        dependencies {[m
[31m-            deployJars 'org.apache.maven.wagon:wagon-ssh:latest.milestone'[m
[31m-        }[m
[31m-    }[m
[31m-}[m
[31m-[m
[31m-// description attribute of project is always set, but may be null[m
[31m-if (!project.hasProperty('description') ||[m
[31m-        project.property('description') == null)[m
[31m-    project.description = 'HSQLDB - Lightweight 100% Java SQL Database Engine'[m
[31m-if (!project.hasProperty('title')) project.ext.set('title', 'HyperSQL Database')[m
[31m-[m
[31m-uploadArchives {[m
[31m-    def authMap = [:][m
[31m-    if (project.hasProperty('mavenRepository.dest.username'))[m
[31m-        authMap['userName'] = project.property('mavenRepository.dest.username')[m
[31m-    if (project.hasProperty('mavenRepository.dest.password'))[m
[31m-        authMap['password'] = project.property('mavenRepository.dest.password')[m
[31m-    if (project.hasProperty('mavenRepository.dest.privateKey'))[m
[31m-        authMap['privateKey'] =[m
[31m-                project.property('mavenRepository.dest.privateKey')[m
[31m-[m
[31m-    repositories.mavenDeployer {[m
[31m-        configuration = configurations.deployJars[m
[31m-        if (project.hasProperty('signing.keyId')) beforeDeployment {[m
[31m-            MavenDeployment deployment -> signing.signPom(deployment)[m
[31m-        }[m
[31m-        if (project.hasProperty('mavenRepository.dest.url'))[m
[31m-            repository(url: project.property('mavenRepository.dest.url')) {[m
[31m-                authentication(authMap)[m
[31m-            }[m
[31m-        [[m
[31m-            addFilter('hsqldb') {artifact, file -> artifact.name == 'hsqldb'},[m
[31m-            addFilter('sqltool') {artifact, file -> artifact.name == 'sqltool'}[m
[31m-        ].each { pom -> pom.project {[m
[31m-            // The hasProperty tests are necessary even for required variables[m
[31m-            // because this code is evaluated even if the uploadArchives task[m
[31m-            // will never be executed.[m
[31m-            if (project.hasProperty('title')) name project.property('title')[m
[31m-            if (project.hasProperty('description'))[m
[31m-                description project.property('description')[m
[31m-            if (project.hasProperty('url')) url project.property('url')[m
[31m-            if (project.hasProperty('inceptionYear'))[m
[31m-                inceptionYear project.property('inceptionYear')[m
[31m-            scm {[m
[31m-                if (project.hasProperty('scm.url'))[m
[31m-                    url project.property('scm.url')[m
[31m-                if (project.hasProperty('scm.connection'))[m
[31m-                    connection project.property('scm.connection')[m
[31m-                if (project.hasProperty('scm.tag'))[m
[31m-                    tag project.property('scm.tag')[m
[31m-            }[m
[31m-            if (project.hasProperty('org.name')[m
[31m-                    || project.hasProperty('org.url')) organization {[m
[31m-                if (project.hasProperty('org.name'))[m
[31m-                    name project.property('org.name')[m
[31m-                if (project.hasProperty('org.url'))[m
[31m-                    url project.property('org.url')[m
[31m-            }[m
[31m-            licenses {[m
[31m-                license {[m
[31m-                    name 'HSQLDB License, a BSD open source license'[m
[31m-                    url 'http://hsqldb.org/web/hsqlLicense.html'[m
[31m-                    distribution 'repo'[m
[31m-                }[m
[31m-            }[m
[31m-            if (project.hasProperty('developer.name')[m
[31m-                    || project.hasProperty('developer.email')) developers {[m
[31m-                developer {[m
[31m-                    if (project.hasProperty('developer.id'))[m
[31m-                        id project.property('developer.id')[m
[31m-                    if (project.hasProperty('developer.name'))[m
[31m-                        name project.property('developer.name')[m
[31m-                    if (project.hasProperty('developer.email'))[m
[31m-                        email project.property('developer.email')[m
[31m-                }[m
[31m-            }[m
[31m-        } }[m
[31m-    }[m
[31m-}[m
[31m-[m
[31m-uploadArchives { doFirst {[m
[31m-    //project.setProperty 'group', 'helo there'[m
[31m-    project.group = project['project.group'][m
[31m-    //throw new Exception('(' + project.group + '), (' + project.property('group') + ')')[m
[31m-    ['title', 'group', 'mavenRepository.dest.url', 'scm.connection',[m
[31m-            'scm.url', 'url', 'inceptionYear', 'description'].each {[m
[31m-        assert (project.hasProperty(it) && project.property(it) != null[m
[31m-                && project.property(it) != '') :[m
[31m-            """Property '$it' is required by 'uploadArchives' task.[m
[31m-"""[m
[31m-    }[m
[31m-    ['scm.url', 'url', 'org.url'].each {[m
[31m-        assert project.property(it) != null:[m
[31m-            """Property '$it' may not be null[m
[31m-"""[m
[31m-        assert (!project.hasProperty(it)[m
[31m-                || project.property(it) instanceof URL):[m
[31m-            ("""Property '$it' must be of type URL.  Is a """[m
[31m-                    + project.property(it).class.name + '\n')[m
[31m-    }[m
[31m-    ['mavenRepository.dest.url'].each {[m
[31m-        assert project.property(it) != null:[m
[31m-            """Property '$it' may not be null[m
[31m-"""[m
[31m-        assert (!project.hasProperty(it)[m
[31m-                || project.property(it) instanceof URL[m
[31m-                || project.property(it) instanceof String):[m
[31m-            ("""Property '$it' must be of type URL or String.  Is a """[m
[31m-                    + project.property(it).class.name + '\n')[m
[31m-    }[m
[31m-} }[m
[31m-[m
[31m-// This is because jar.inputs is read-only[m
[31m-// Funny name is work-around for Gradle sequencing bug[m
[31m-task zJarDep { doLast {[m
[31m-    if (jar.archivePath.exists() && jar.archivePath.lastModified()[m
[31m-            < file('../lib/hsqldb.jar').lastModified()) {[m
[31m-        logger.warn "Deleting $jar.archivePath.absolutePath"[m
[31m-        jar.archivePath.delete()[m
[31m-    }[m
[31m-} }[m
[31m-[m
[31m-jar { doLast {[m
[31m-    File srcFile = file('../lib/hsqldb.jar')[m
[31m-    jar.archivePath.setBytes(srcFile.bytes)[m
[31m-} }[m
[31m-[m
[31m-jar.dependsOn = [hsqldb, zJarDep][m
[31m-if (project.hasProperty('classifier')) jar.classifier = project.classifier[m
[31m-[m
[31m-clean.dependsOn = [prohibitionMap['clean']][m
[31m-[m
[31m-// This is because jar.inputs is read-only[m
[31m-// Funny name is work-around for Gradle sequencing bug[m
[31m-task zSqltoolJarDep { doLast {[m
[31m-    if (sqltoolJar.archivePath.exists() && sqltoolJar.archivePath.lastModified()[m
[31m-            < file('../lib/sqltool.jar').lastModified()) {[m
[31m-        logger.warn "Deleting $sqltoolJar.archivePath.absolutePath"[m
[31m-        sqltoolJar.archivePath.delete()[m
[31m-    }[m
[31m-} }[m
[31m-[m
[31m-task sqltoolJar(dependsOn: [sqltool, zSqltoolJarDep], type: Jar) {[m
[31m-    archiveBaseName = 'sqltool'[m
[31m-    if (project.hasProperty('classifier')) classifier = project.classifier[m
[31m-}[m
[31m-[m
[31m-sqltoolJar { doLast {[m
[31m-    File srcFile = file('../lib/sqltool.jar')[m
[31m-    sqltoolJar.archivePath.setBytes(srcFile.bytes)[m
[31m-} }[m
[31m-[m
[31m-task sourcesJar(type: Jar, dependsOn:hsqldbsources) {[m
[31m-    classifier = 'sources'[m
[31m-    //from sourceSets.main.allSource[m
[31m-    from { zipTree '../lib/hsqldb-sources.jar' }[m
[31m-}[m
[31m-sourcesJar.description = 'Build sources jar file'[m
[31m-[m
[31m-task javadocJar(type: Jar, dependsOn:javadoc) {[m
[31m-     classifier = 'javadoc'[m
[31m-     //from javadoc.destinationDir[m
[31m-     from fileTree(dir: '../doc/apidocs')[m
[31m-}[m
[31m-javadocJar.description = 'Build javadoc jar file'[m
[31m-[m
[31m-task sqltoolSourcesJar(type: Jar, dependsOn:sqltoolsources) {[m
[31m-    archiveBaseName = 'sqltool'[m
[31m-    classifier = 'sources'[m
[31m-    //from sourceSets.main.allSource[m
[31m-    from { zipTree '../lib/sqltool-sources.jar' }[m
[31m-}[m
[31m-sqltoolSourcesJar.description = 'Build Sqltool sources jar file'[m
[31m-[m
[31m-task sqltoolJavadocJar(type: Jar, dependsOn:javadoc) {[m
[31m-    archiveBaseName = 'sqltool'[m
[31m-    classifier = 'javadoc'[m
[31m-    //from javadoc.destinationDir[m
[31m-    from fileTree(dir: '../doc/apidocssqltool')[m
[31m-}[m
[31m-sqltoolJavadocJar.description = 'Build Sqltool javadoc jar file'[m
[31m- [m
[31m-artifacts { archives sqltoolJar }[m
[31m-[m
[31m-// add javadoc/source jar tasks as artifacts, only if no classifier specified[m
[31m-if (!project.hasProperty('classifier')) artifacts {[m
[31m-    archives sourcesJar[m
[31m-    archives javadocJar[m
[31m-    archives sqltoolSourcesJar[m
[31m-    archives sqltoolJavadocJar[m
[31m-}[m
[1mdiff --git a/hsqldb/build/rng-catalog-template.xml b/hsqldb/build/rng-catalog-template.xml[m
[1mdeleted file mode 100644[m
[1mindex e7d8411..0000000[m
[1m--- a/hsqldb/build/rng-catalog-template.xml[m
[1m+++ /dev/null[m
[36m@@ -1,15 +0,0 @@[m
[31m-<?xml version="1.0"?>[m
[31m-<!-- $Id: rng-catalog-template.xml 4586 2011-10-21 22:09:28Z unsaved $ -->[m
[31m-[m
[31m-<!DOCTYPE catalog PUBLIC "-//OASIS//DTD Entity Resolution XML Catalog V1.0//EN"[m
[31m-    "http://www.oasis-open.org/committees/entity/release/1.0/catalog.dtd">[m
[31m-[m
[31m-<catalog xmlns="urn:oasis:names:tc:entity:xmlns:xml:catalog" prefer="public">[m
[31m-  <public publicId="-//OASIS/ENTITIES DocBook Character Entities V4.5//EN"[m
[31m-          uri="@DBCENTX_URL@"/>[m
[31m-  <!--  Relative paths must be relative to this file.[m
[31m-        If the designated hostname or file DOES NOT EXIST, the setting will[m
[31m-        be ignored.  Make sure to not set to http URL for a host name that[m
[31m-        does exist, with a wrong path, or the server error message will be[m
[31m-        parsed!  -->[m
[31m-</catalog>[m
[1mdiff --git a/hsqldb/build/run.test.suite.cmd b/hsqldb/build/run.test.suite.cmd[m
[1mdeleted file mode 100644[m
[1mindex d74eeee..0000000[m
[1m--- a/hsqldb/build/run.test.suite.cmd[m
[1m+++ /dev/null[m
[36m@@ -1,2 +0,0 @@[m
[31m-call setenv.cmd[m
[31m-ant -f test.xml run.test.suite[m
[1mdiff --git a/hsqldb/build/setenv.cmd b/hsqldb/build/setenv.cmd[m
[1mdeleted file mode 100644[m
[1mindex 4db1ab1..0000000[m
[1m--- a/hsqldb/build/setenv.cmd[m
[1m+++ /dev/null[m
[36m@@ -1,7 +0,0 @@[m
[31m-REM basic environment setup[m
[31m-REM change as needed[m
[31m-[m
[31m-set JAVA_HOME=C:\Program Files\Java\jdk8[m
[31m-set ANT_HOME=C:\Program Files\NetBeans-12.6\netbeans\extide\ant[m
[31m-set ANT_OPTS=-Xmx512m[m
[31m-set PATH=%JAVA_HOME%\bin;%ANT_HOME%\bin;%PATH%[m
[1mdiff --git a/hsqldb/build/settings.gradle b/hsqldb/build/settings.gradle[m
[1mdeleted file mode 100644[m
[1mindex 0aec813..0000000[m
[1m--- a/hsqldb/build/settings.gradle[m
[1m+++ /dev/null[m
[36m@@ -1,10 +0,0 @@[m
[31m-//According to Adam Murdoch at[m
[31m-// http://gradle.1045684.n5.nabble.com/Changing-project-name-within-a-build-script-td3321614.html[m
[31m-//"For the Gradle 1.0 release, we plan to merge the settings.gradle script into[m
[31m-// the build script".[m
[31m-rootProject.name = 'hsqldb'[m
[31m-[m
[31m-// Following work-around needed when use -b switch to Gradle, per[m
[31m-// http://forums.gradle.org/gradle/topics/how_change_project_name_when_using_non_build_gradle_build_file[m
[31m-if (startParameter.buildFile)[m
[31m-    rootProject.buildFileName = startParameter.buildFile.name[m
[1mdiff --git a/hsqldb/build/test.dbmd.convert.properties b/hsqldb/build/test.dbmd.convert.properties[m
[1mdeleted file mode 100644[m
[1mindex 8fab5cb..0000000[m
[1m--- a/hsqldb/build/test.dbmd.convert.properties[m
[1m+++ /dev/null[m
[36m@@ -1,7 +0,0 @@[m
[31m-## Note: [m
[31m-##[m
[31m-## Most test.dbmd.convert properties have been moved to /org/hsqldb/resources[m
[31m-## under the test source folder and are now read using the bundle handler facility.[m
[31m-##[m
[31m-## System properties now take precedence, so you can use this file[m
[31m-## to override the values in the default test.dbmd.convert properties file.[m
[1mdiff --git a/hsqldb/build/test.properties b/hsqldb/build/test.properties[m
[1mdeleted file mode 100644[m
[1mindex bd3cba6..0000000[m
[1m--- a/hsqldb/build/test.properties[m
[1m+++ /dev/null[m
[36m@@ -1,7 +0,0 @@[m
[31m-## Note: [m
[31m-##[m
[31m-## Most test properties have been moved to /org/hsqldb/resources[m
[31m-## under the test source folder and are now read using the bundle handler facility.[m
[31m-##[m
[31m-## System properties now take precedence, so you can use this file[m
[31m-## to override the values in the default test.properties file.[m
[1mdiff --git a/hsqldb/build/test.xml b/hsqldb/build/test.xml[m
[1mdeleted file mode 100644[m
[1mindex 25ac48f..0000000[m
[1m--- a/hsqldb/build/test.xml[m
[1m+++ /dev/null[m
[36m@@ -1,381 +0,0 @@[m
[31m-<?xml version="1.0" encoding="UTF-8"?>[m
[31m-<project name="hsqldb.test.suite"[m
[31m-         default="run.test.suite"[m
[31m-         basedir="..">[m
[31m-[m
[31m-    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->[m
[31m-    <!-- B U I L D  T I M E S T A M P                                         -->[m
[31m-    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->[m
[31m-    <tstamp>[m
[31m-        <format property="_tmpstamp"[m
[31m-                pattern="yyyy/MM/dd-hh:mm:ss"[m
[31m-                locale="en"/>[m
[31m-    </tstamp>[m
[31m-[m
[31m-    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->[m
[31m-    <!-- U S E R  B U I L D  P R O P E R T I E S  O V E R R I D E S           -->[m
[31m-    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->[m
[31m-    <property file="${basedir}/build/build.properties"/>[m
[31m-[m
[31m-    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->[m
[31m-    <!-- D E F A U L T  B U I L D  P R O P E R T I E S                        -->[m
[31m-    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->[m
[31m-    <property name="test.suite.version"[m
[31m-              value="2.7.0"/>[m
[31m-[m
[31m-    <property name="test.suite.title"[m
[31m-              value="HSQLDB Test Suite"/>[m
[31m-[m
[31m-    <property name="test.suite.vendor"[m
[31m-              value="The HSQL Development Group"/>[m
[31m-[m
[31m-    <property name="test.suite.implementation.title"[m
[31m-              value="SQL:2016 / JDBC 4.3 Conformance and Supporing Library Test Cases"/>[m
[31m-[m
[31m-    <property name="test.suite.implementation.label"[m
[31m-              value="private-${_tmpstamp}"/>[m
[31m-[m
[31m-    <property name="test.suite.implementation.vendor"[m
[31m-              value="${user.name}"/>[m
[31m-[m
[31m-    <property name="junit.jar" [m
[31m-              value="${basedir}/lib/junit.jar" />[m
[31m-[m
[31m-    <property name="preprocessor.jar"[m
[31m-              value="${basedir}/lib/preprocessor.jar" />[m
[31m-[m
[31m-    <property name="test.run.dir"[m
[31m-              value="${basedir}/testrun" />[m
[31m-    [m
[31m-    <property name="test.suite.jar"[m
[31m-              value="${basedir}/lib/testsuite.jar" />[m
[31m-[m
[31m-    <property name="test.src.dir"[m
[31m-              value="${basedir}/test-src" />[m
[31m-   [m
[31m-    <property name="test.src.tmp.dir"[m
[31m-              value="${basedir}/tmp/testsrc" />[m
[31m-[m
[31m-    <property name="test.classes.dir"[m
[31m-              value="${basedir}/test-classes" />[m
[31m-[m
[31m-    <property name="test.results.dir"[m
[31m-              value="${basedir}/test-results" />[m
[31m-[m
[31m-    <property name="build.debug"[m
[31m-              value="true" />[m
[31m-[m
[31m-    <property name="build.optimize"[m
[31m-              value="false" />[m
[31m-[m
[31m-    <target name="-set-jvmvars">[m
[31m-        <condition property="_crosswithoutbcp"> [m
[31m-            <and>[m
[31m-                <isset property="ant.build.javac.target"/>[m
[31m-                <not> [m
[31m-                    <isset property="javac.bootcp.override"/> [m
[31m-                </not>[m
[31m-            </and> [m
[31m-        </condition>[m
[31m-        [m
[31m-        <fail if="_crosswithoutbcp">[m
[31m-            If cross-compiling, you  must set property 'javac.bootcp.override'[m
[31m-        </fail>[m
[31m-        [m
[31m-        <condition property="ant.build.javac.source"[m
[31m-                   value="${ant.build.javac.target}">[m
[31m-            <isset property="ant.build.javac.target"/>[m
[31m-        </condition>[m
[31m-        [m
[31m-        <condition property="ant.java.iscjava08">[m
[31m-            <and>[m
[31m-                <available classname="java.sql.JDBCType" property="ant.java.iscjava08"/>[m
[31m-                <not>[m
[31m-                    <matches string="${ant.build.javac.target}"[m
[31m-                             pattern="^(?:1[.])?(1|2|3|4|5|6|7)$"/>[m
[31m-                </not>[m
[31m-            </and>[m
[31m-        </condition>[m
[31m-        [m
[31m-        <condition property="ant.java.iscjava11">[m
[31m-            <and>[m
[31m-                <available classname="java.sql.ShardingKey" property="ant.java.iscjava11"/>[m
[31m-                <not>[m
[31m-                    <matches string="${ant.build.javac.target}"[m
[31m-                             pattern="^(?:1[.])?(1|2|3|4|5|6|7|8)$"/>[m
[31m-                </not>[m
[31m-            </and>[m
[31m-        </condition>[m
[31m-        [m
[31m-        <condition property="jar-name-suffix"[m
[31m-                   value=""[m
[31m-                   else="-jdk8">[m
[31m-            <isset property="ant.java.iscjava11"/>[m
[31m-        </condition>[m
[31m-        [m
[31m-        <fail if="debug.targetjvm">[m
[31m-            specified compile target: ${ant.build.javac.target}[m
[31m-            derived version:  8?${ant.java.iscjava08}  11?${ant.java.iscjava11}[m
[31m-            src (${ant.build.javac.source})[m
[31m-            targ (${ant.build.javac.target})[m
[31m-            bcp (${javac.bootcp.override})[m
[31m-        </fail>[m
[31m-    </target>[m
[31m-[m
[31m-    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->[m
[31m-    <!-- S H A R E D  I N I T I A L I Z A T I O N                             -->[m
[31m-    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->[m
[31m-    <target name="-init" depends="-set-jvmvars">[m
[31m-[m
[31m-        <fail unless='ant.java.iscjava08'[m
[31m-              message="JDK must be 1.8 or greater"/>[m
[31m-        [m
[31m-        <property name="hsqldb.jar" [m
[31m-                  value="${basedir}/lib/hsqldb${jar-name-suffix}.jar"/>[m
[31m-        [m
[31m-[m
[31m-        <available file="${hsqldb.jar}"[m
[31m-                   type='file'[m
[31m-                   property="hsqldb.available"/>[m
[31m-        [m
[31m-        <fail unless="hsqldb.available" [m
[31m-              message="hsqldb jar must reside at ${hsqldb.jar}"/>[m
[31m-[m
[31m-        <available file="${preprocessor.jar}"[m
[31m-                   type='file'[m
[31m-                   property="preprocessor.available"/>[m
[31m-[m
[31m-        <fail unless='preprocessor.available'[m
[31m-              message="'preprocessor.jar' must reside at ${preprocessor.jar}"/>[m
[31m-        [m
[31m-        <property name="sqltool.jar"[m
[31m-                  value="${basedir}/lib/sqltool${jar-name-suffix}.jar" />[m
[31m-[m
[31m-        <available file="${sqltool.jar}"[m
[31m-                   type='file'[m
[31m-                   property="sqltool.available"/>[m
[31m-[m
[31m-        <fail unless="sqltool.available"[m
[31m-              message="sqltool jar must reside at ${sqltool.jar}"/>[m
[31m-[m
[31m-        <available file="${junit.jar}"[m
[31m-                   type="file"[m
[31m-                   property="junit.available"/>[m
[31m-[m
[31m-        <fail unless='junit.available'[m
[31m-              message="junit jar must reside at ${junit.jar}"/>[m
[31m-        [m
[31m-        <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->[m
[31m-        <!-- B U I L D  C L A S S P A T H                                    -->[m
[31m-        <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->[m
[31m-[m
[31m-        <path id="test.suite.javac.classpath">[m
[31m-            <pathelement location="${hsqldb.jar}"/>[m
[31m-            <pathelement location="${preprocessor.jar}"/>[m
[31m-            <pathelement location="${sqltool.jar}"/>[m
[31m-            <pathelement location="${junit.jar}" />[m
[31m-        </path>[m
[31m-    </target>[m
[31m-[m
[31m-    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->[m
[31m-    <!-- M A K E  T E S T  S U I T E                                          -->[m
[31m-    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->[m
[31m-    <target name="make.test.suite"[m
[31m-            description="Builds test classes and creates test suite jar"[m
[31m-            depends="-init">[m
[31m-        <mkdir dir="${test.classes.dir}"/>[m
[31m-        <mkdir dir="${test.src.tmp.dir}/org/hsqldb/test"/>[m
[31m-        <copy todir="${test.src.tmp.dir}/org/hsqldb/test">[m
[31m-            <fileset dir="${basedir}/src/org/hsqldb/test">[m
[31m-                <include name="TestBase.java"/>[m
[31m-                <include name="TestConnectionSettings.java"/>[m
[31m-                <include name="TestDirectorySettings.java"/>[m
[31m-                <include name="TestUtil.java"/>[m
[31m-                <include name="Waiter.java"/>[m
[31m-                <include name="TestStoredProcedure.java"/>[m
[31m-            </fileset>[m
[31m-        </copy>[m
[31m-[m
[31m-        <!-- Compile Classes -->[m
[31m-        <javac destdir="${test.classes.dir}"[m
[31m-               debug="${build.debug}"[m
[31m-               optimize="${build.optimize}"[m
[31m-               includeantruntime="false" [m
[31m-        >[m
[31m-            <compilerarg value="-Xlint:-path"/>[m
[31m-            <src path="${test.src.dir}"/>[m
[31m-            <src path="${test.src.tmp.dir}"/>[m
[31m-            <classpath refid="test.suite.javac.classpath"/>[m
[31m-            <include name="**/*.java"/>[m
[31m-            <!-- @todo -->[m
[31m-            <exclude name="/org/hsqldb/testbase/jtm/*.java"/>[m
[31m-        </javac>[m
[31m-[m
[31m-        <!-- Build Jar -->[m
[31m-        <jar jarfile="${test.suite.jar}"[m
[31m-             basedir="${test.classes.dir}">[m
[31m-            <manifest>[m
[31m-                <attribute name='Specification-Title'[m
[31m-                           value='${test.suite.title}'/>[m
[31m-[m
[31m-                <attribute name='Specification-Version'[m
[31m-                           value='${test.suite.version}'/>[m
[31m-[m
[31m-                <attribute name='Specification-Vendor'[m
[31m-                           value='${test.suite.vendor}'/>[m
[31m-[m
[31m-                <attribute name='Implementation-Title'[m
[31m-                           value='${test.suite.implementation.title}'/>[m
[31m-[m
[31m-                <attribute name='Implementation-Version'[m
[31m-                           value='${test.suite.implementation.label}'/>[m
[31m-[m
[31m-                <attribute name='Implementation-Vendor'[m
[31m-                           value='${test.suite.implementation.vendor}'/>[m
[31m-            </manifest>[m
[31m-            <fileset dir="test-src" includes="org/hsqldb/resources/*"/>[m
[31m-            <fileset dir="test-src" includes="org/hsqldb/jdbc/*.sql"/>[m
[31m-            <fileset dir="test-src" includes="org/hsqldb/jdbc/resources/sql/*"/>[m
[31m-            <fileset dir="test-src" includes="org/hsqldb/jdbc/resources/xml/*"/>[m
[31m-        </jar>[m
[31m-    </target>[m
[31m-[m
[31m-    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->[m
[31m-    <!-- R U N  T E S T  S U I T E                                            -->[m
[31m-    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->[m
[31m-    <target name="run.test.suite"[m
[31m-            description="Runs the test suite and generates test result reports"[m
[31m-            depends="-init">[m
[31m-[m
[31m-        <available file="${test.suite.jar}"[m
[31m-                   type='file'[m
[31m-                   property="test.suite.jar.available"/>[m
[31m-[m
[31m-        <fail unless="test.suite.jar.available"[m
[31m-              message="The test suite jar must reside at ${test.suite.jar}.[m
[31m-Try running the make.test.suite target first."/>[m
[31m-[m
[31m-        <delete dir="${test.results.dir}"/>[m
[31m-[m
[31m-        <!-- FILE VERSJUS JAR RESOURCES AVOID ISSUES SUCH AS XML SYSTEM ID HANDLING -->[m
[31m-       [m
[31m-        <mkdir dir="${test.results.dir}/resources/org/hsqldb/util/preprocessor"/>[m
[31m-[m
[31m-        <copy todir="${test.results.dir}/resources/org/hsqldb/util/preprocessor">[m
[31m-            <fileset dir="${test.src.dir}/org/hsqldb/util/preprocessor"[m
[31m-                     includes="*.exp"/>[m
[31m-        </copy>[m
[31m-        <copy todir="${test.results.dir}/resources/org/hsqldb/util/preprocessor">[m
[31m-            <fileset dir="${test.src.dir}/org/hsqldb/util/preprocessor"[m
[31m-                     includes="*.inc"/>[m
[31m-        </copy>[m
[31m-        <copy todir="${test.results.dir}/resources/org/hsqldb/util/preprocessor">[m
[31m-            <fileset dir="${test.src.dir}/org/hsqldb/util/preprocessor"[m
[31m-                     includes="*.src"/>[m
[31m-        </copy>[m
[31m-[m
[31m-        <mkdir dir="${test.results.dir}/resources/org/hsqldb/jdbc"/>[m
[31m-[m
[31m-        <copy todir="${test.results.dir}/resources/org/hsqldb/jdbc">[m
[31m-            <fileset dir="${test.src.dir}/org/hsqldb/jdbc"[m
[31m-                     includes="*.sql"/>[m
[31m-        </copy>[m
[31m-[m
[31m-        <mkdir dir="${test.results.dir}/resources/org/hsqldb/jdbc/resources"/>[m
[31m-        <mkdir dir="${test.results.dir}/resources/org/hsqldb/jdbc/resources/xml"/>[m
[31m-[m
[31m-        <copy todir="${test.results.dir}/resources/org/hsqldb/jdbc/resources/xml">[m
[31m-            <fileset dir="${test.src.dir}/org/hsqldb/jdbc/resources/xml"[m
[31m-                     includes="*.*"/>[m
[31m-        </copy>[m
[31m-[m
[31m-        <mkdir dir="${test.results.dir}/resources/org/hsqldb/jdbc/resources/sql"/>[m
[31m-[m
[31m-        <copy todir="${test.results.dir}/resources/org/hsqldb/jdbc/resources/sql">[m
[31m-            <fileset dir="${test.src.dir}/org/hsqldb/jdbc/resources/sql"[m
[31m-                     includes="*.*"/>[m
[31m-        </copy>[m
[31m-[m
[31m-        <mkdir dir="${test.results.dir}/resources/org/hsqldb/resources"/>[m
[31m-[m
[31m-        <copy todir="${test.results.dir}/resources/org/hsqldb/resources">[m
[31m-            <fileset dir="${test.src.dir}/org/hsqldb/resources" includes="*.*"/>[m
[31m-        </copy>[m
[31m-[m
[31m-        <echo>Starting JUnit Tests...</echo>[m
[31m-[m
[31m-        <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->[m
[31m-        <!-- U S E R  T E S T  P R O P E R T I E S                                -->[m
[31m-        <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->[m
[31m-        <!-- Now using BundleHandler facility as primary properties loader, but   -->[m
[31m-        <!-- System properties still work (e.g. on command line -Dfoo=xyz or      -->[m
[31m-        <!-- using Ant to load properties files) and now take  precedence over    -->[m
[31m-        <!-- bundle handler resources.                                            -->[m
[31m-        <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->[m
[31m-        <!-- In this way, the bulk of the standard properties (that will probably -->[m
[31m-        <!-- never need to be overriden) stay under the test source folder, hence -->[m
[31m-        <!-- only specific property overrides need to be placed in the build      -->[m
[31m-        <!-- folder properties files or on the command line as -Dx=y directives.  -->[m
[31m-        <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->[m
[31m-        <!-- The only (minor) disadvantage of this new scheme is that the bulk of -->[m
[31m-        <!-- the test properties will no longer show up in the test report output -->[m
[31m-        <!-- as environment settings                                              -->[m
[31m-        <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->[m
[31m-        <property file="${basedir}/build/test.properties"/>[m
[31m-        <property file="${basedir}/build/test.dbmd.convert.properties"/>[m
[31m-[m
[31m-        <!-- Execute JUNIT Tests -->[m
[31m-        <junit showoutput="true"[m
[31m-               fork="false"[m
[31m-               failureproperty="tests.failed"[m
[31m-               errorproperty="tests.failed" >[m
[31m-            <batchtest todir="${test.results.dir}">[m
[31m-                <fileset dir="${test.src.dir}"[m
[31m-                         includes="**/*Test.java">[m
[31m-                    <exclude name="org/hsqldb/testbase/**"/>[m
[31m-                    <exclude name="org/hsqldb/jdbc/testbase/**"/>[m
[31m-                </fileset>[m
[31m-            </batchtest>[m
[31m-            <classpath>[m
[31m-                <!-- Placed first to avoid issues with JAR resource URL handling -->[m
[31m-                <!-- e.g. relative system id XML DTD, XSD and entites -->[m
[31m-                <pathelement location="${test.results.dir}/resources"/>[m
[31m-                <pathelement location="${test.run.dir}"/>[m
[31m-                <path path="${hsqldb.jar}"/>[m
[31m-                <path path="${preprocessor.jar}"/>[m
[31m-                <path path="${sqltool.jar}"/>[m
[31m-                <path path="${junit.jar}"/>[m
[31m-                <path path="${test.suite.jar}"/>[m
[31m-            </classpath>[m
[31m-            <syspropertyset id="test.suite.system.properties">[m
[31m-                <propertyref prefix="hsqldb.test.suite."/>[m
[31m-            </syspropertyset>[m
[31m-            <formatter type="xml"/>[m
[31m-        </junit>[m
[31m-[m
[31m-        <echo>Generating Test Reports...</echo>[m
[31m-[m
[31m-        <mkdir dir="${test.results.dir}/reports"/>[m
[31m-        <mkdir dir="${test.results.dir}/reports/html"/>[m
[31m-[m
[31m-        <!-- Generate Test Reports -->[m
[31m-        <junitreport todir="${test.results.dir}/reports">[m
[31m-            <fileset dir="${test.results.dir}">[m
[31m-                <include name="TEST-*.xml"/>[m
[31m-            </fileset>[m
[31m-            <report format="frames"[m
[31m-                    todir="${test.results.dir}/reports/html"/>[m
[31m-        </junitreport>[m
[31m-    </target>[m
[31m-[m
[31m-    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->[m
[31m-    <!-- C L E A N  T E S T  S U I T E                                        -->[m
[31m-    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->[m
[31m-    <target name="clean.test.suite"[m
[31m-            description="Deletes compiled classes, test results and suite jar">[m
[31m-        <delete dir="${test.classes.dir}" />[m
[31m-        <delete dir="${test.results.dir}" />[m
[31m-        <delete dir="${test.src.tmp.dir}" />[m
[31m-        <delete file="${test.suite.jar}" />[m
[31m-    </target>[m
[31m-</project>[m
[1mdiff --git a/payara6/glassfish/lib/install/applications/__admingui/WEB-INF/faces-config.xml b/payara6/glassfish/lib/install/applications/__admingui/WEB-INF/faces-config.xml[m
[1mindex 87f7760..96ef583 100644[m
[1m--- a/payara6/glassfish/lib/install/applications/__admingui/WEB-INF/faces-config.xml[m
[1m+++ b/payara6/glassfish/lib/install/applications/__admingui/WEB-INF/faces-config.xml[m
[36m@@ -93,7 +93,7 @@[m
     <managed-bean>[m
         <description></description>[m
     	<managed-bean-name>JavaHelpBean</managed-bean-name>[m
[31m-    	<managed-bean-class>com.sun.webui.jsf.bean.HelpBackingBean</managed-bean-class>[m
[32m+[m[41m    [m	[32m<managed-bean-class>com.sun.webui.jsf.bean.HelpバッキングBean</managed-bean-class>[m
     	<managed-bean-scope>request</managed-bean-scope>[m
     </managed-bean> [m
 [m
[1mdiff --git a/projects/accounting_etl/.gitkeep b/projects/accounting_etl/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/bookstore_jee/.gitkeep b/projects/bookstore_jee/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/bookstore_jee_enhance/.gitkeep b/projects/bookstore_jee_enhance/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/cdi_conversation/.gitignore b/projects/cdi_conversation/.gitignore[m
[1mdeleted file mode 100644[m
[1mindex 6f1d2c2..0000000[m
[1m--- a/projects/cdi_conversation/.gitignore[m
[1m+++ /dev/null[m
[36m@@ -1,5 +0,0 @@[m
[31m-/classes[m
[31m-/bin[m
[31m-/build[m
[31m-/target[m
[31m-/.gradle[m
[1mdiff --git a/projects/cdi_conversation/README.md b/projects/cdi_conversation/README.md[m
[1mdeleted file mode 100644[m
[1mindex 46d26d3..0000000[m
[1m--- a/projects/cdi_conversation/README.md[m
[1m+++ /dev/null[m
[36m@@ -1,93 +0,0 @@[m
[31m-# cdi_conversation プロジェクト[m
[31m-[m
[31m-## 📖 概要[m
[31m-[m
[31m-CDIの会話スコープ（@ConversationScoped）を学ぶサンプルプロジェクトです。[m
[31m-複数画面にまたがる状態管理を学習できます。[m
[31m-[m
[31m-## 🚀 アプリケーションの開発フローとデプロイ方法[m
[31m-[m
[31m-### 前提条件[m
[31m-[m
[31m-- JDK 21以上[m
[31m-- Gradle 8.x以上[m
[31m-- Payara Server 6（プロジェクトルートの`payara6/`に配置）[m
[31m-[m
[31m-### 1. Payara Serverの起動（研修1回について初回だけ）[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew startPayara[m
[31m-```[m
[31m-[m
[31m-### 2. WARファイルのビルド（アプリケーション作成・更新のたびに実施）[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew :projects:cdi_conversation:war[m
[31m-```[m
[31m-[m
[31m-### 3. アプリケーションのデプロイ（アプリケーション作成・更新のたびに実施）[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew :projects:cdi_conversation:deploy[m
[31m-```[m
[31m-[m
[31m-## 📍 アクセスURL[m
[31m-[m
[31m-デプロイ後、以下のURLにアクセス：[m
[31m-[m
[31m-- **トップページ**: http://localhost:8080/cdi_conversation/faces/index.xhtml[m
[31m-[m
[31m-## 🎯 プロジェクト構成[m
[31m-[m
[31m-```[m
[31m-projects/cdi_conversation/[m
[31m-├── src/[m
[31m-│   ├── main/[m
[31m-│   │   ├── java/[m
[31m-│   │   │   └── bean/              # CDI Bean (@ConversationScoped)[m
[31m-│   │   └── webapp/[m
[31m-│   │       ├── *.xhtml[m
[31m-│   │       └── WEB-INF/[m
[31m-│   │           ├── web.xml[m
[31m-│   │           └── beans.xml[m
[31m-│   └── test/[m
[31m-└── build/[m
[31m-    └── libs/[m
[31m-        └── cdi_conversation.war[m
[31m-```[m
[31m-[m
[31m-## 🔧 使用している技術[m
[31m-[m
[31m-- **Jakarta EE 10**[m
[31m-- **Payara Server 6**[m
[31m-- **Jakarta CDI 4.0**[m
[31m-- **Jakarta Faces (JSF) 4.0**[m
[31m-- **@ConversationScoped**[m
[31m-[m
[31m-## 🛑 アプリケーションを停止する[m
[31m-[m
[31m-### アプリケーションのアンデプロイ[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew :projects:cdi_conversation:undeploy[m
[31m-```[m
[31m-[m
[31m-### Payara Server全体を停止[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew stopPayara[m
[31m-```[m
[31m-[m
[31m-## 🔍 ログ監視[m
[31m-[m
[31m-別のターミナルでログをリアルタイム監視：[m
[31m-[m
[31m-**Windows (PowerShell):**[m
[31m-```powershell[m
[31m-Get-Content -Path payara6\glassfish\domains\domain1\logs\server.log -Wait -Tail 50 -Encoding UTF8[m
[31m-```[m
[31m-[m
[31m-**Linux/Mac:**[m
[31m-```bash[m
[31m-tail -f -n 50 payara6/glassfish/domains/domain1/logs/server.log[m
[31m-```[m
[1mdiff --git a/projects/cdi_conversation/src/main/java/.gitkeep b/projects/cdi_conversation/src/main/java/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/cdi_conversation/src/main/java/dev/cline/apricot/cdi/conversation/Person.java b/projects/cdi_conversation/src/main/java/dev/cline/apricot/cdi/conversation/Person.java[m
[1mdeleted file mode 100644[m
[1mindex 058d833..0000000[m
[1m--- a/projects/cdi_conversation/src/main/java/dev/cline/apricot/cdi/conversation/Person.java[m
[1m+++ /dev/null[m
[36m@@ -1,72 +0,0 @@[m
[31m-package dev.cline.apricot.cdi.conversation;[m
[31m-[m
[31m-public class Person {[m
[31m-    // IDフィールド[m
[31m-    private Integer personId;[m
[31m-    // 名前フィールド[m
[31m-    private String personName;[m
[31m-    // 年齢フィールド[m
[31m-    private Integer age;[m
[31m-    // 性別フィールド[m
[31m-    private String gender;[m
[31m-[m
[31m-    // コンストラクタ[m
[31m-    public Person() {[m
[31m-    };[m
[31m-[m
[31m-    public Person(Integer personId, String personName, Integer age,[m
[31m-            String gender) {[m
[31m-        this.personId = personId;[m
[31m-        this.personName = personName;[m
[31m-        this.age = age;[m
[31m-        this.gender = gender;[m
[31m-    }[m
[31m-[m
[31m-    public Person(String personName, Integer age, String gender) {[m
[31m-        this.personName = personName;[m
[31m-        this.age = age;[m
[31m-        this.gender = gender;[m
[31m-    }[m
[31m-[m
[31m-    // IDへのアクセサメソッド[m
[31m-    public Integer getPersonId() {[m
[31m-        return personId;[m
[31m-    }[m
[31m-[m
[31m-    public void setPersonId(Integer personId) {[m
[31m-        this.personId = personId;[m
[31m-    }[m
[31m-[m
[31m-    // 名前へのアクセサメソッド[m
[31m-    public String getPersonName() {[m
[31m-        return personName;[m
[31m-    }[m
[31m-[m
[31m-    public void setPersonName(String personName) {[m
[31m-        this.personName = personName;[m
[31m-    }[m
[31m-[m
[31m-    // 性別へのアクセサメソッド[m
[31m-    public String getGender() {[m
[31m-        return gender;[m
[31m-    }[m
[31m-[m
[31m-    public void setGender(String gender) {[m
[31m-        this.gender = gender;[m
[31m-    }[m
[31m-[m
[31m-    // 年齢へのアクセサメソッド[m
[31m-    public Integer getAge() {[m
[31m-        return age;[m
[31m-    }[m
[31m-[m
[31m-    public void setAge(Integer age) {[m
[31m-        this.age = age;[m
[31m-    }[m
[31m-[m
[31m-    @Override[m
[31m-    public String toString() {[m
[31m-        return "Person [personId=" + personId + ", personName=" + personName[m
[31m-                + ", age=" + age + ", gender=" + gender + "]";[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/projects/cdi_conversation/src/main/java/dev/cline/apricot/cdi/conversation/PersonConversationBean.java b/projects/cdi_conversation/src/main/java/dev/cline/apricot/cdi/conversation/PersonConversationBean.java[m
[1mdeleted file mode 100644[m
[1mindex 894ce9f..0000000[m
[1m--- a/projects/cdi_conversation/src/main/java/dev/cline/apricot/cdi/conversation/PersonConversationBean.java[m
[1m+++ /dev/null[m
[36m@@ -1,81 +0,0 @@[m
[31m-package dev.cline.apricot.cdi.conversation;[m
[31m-[m
[31m-import java.io.Serializable;[m
[31m-import java.util.List;[m
[31m-[m
[31m-import jakarta.enterprise.context.Conversation;[m
[31m-import jakarta.enterprise.context.ConversationScoped;[m
[31m-import jakarta.inject.Inject;[m
[31m-import jakarta.inject.Named;[m
[31m-[m
[31m-@ConversationScoped[m
[31m-@Named("personConversation")[m
[31m-public class PersonConversationBean implements Serializable {[m
[31m-    // UIコンポーネントの値を保持するためのプロパティ[m
[31m-    private Person person;[m
[31m-    private List<Person> personList;[m
[31m-[m
[31m-    public Person getPerson() {[m
[31m-        if (person == null) {[m
[31m-            person = new Person();[m
[31m-        }[m
[31m-        return person;[m
[31m-    }[m
[31m-[m
[31m-    public void setPerson(Person person) {[m
[31m-        this.person = person;[m
[31m-    }[m
[31m-[m
[31m-    public List<Person> getPersonList() {[m
[31m-        personList = personService.getPersonList();[m
[31m-        return personList;[m
[31m-    }[m
[31m-[m
[31m-    public void setPersonList(List<Person> personList) {[m
[31m-        this.personList = personList;[m
[31m-    }[m
[31m-[m
[31m-    // インジェクションポイント[m
[31m-    @Inject[m
[31m-    private PersonService personService;[m
[31m-[m
[31m-    // インジェクションポイント[m
[31m-    @Inject[m
[31m-    private Conversation conversation;[m
[31m-[m
[31m-    // アクションメソッド（確認画面に遷移する）[m
[31m-    public String confirm() {[m
[31m-        conversation.begin();[m
[31m-        return "PersonUpdatePage?faces-redirect=true";[m
[31m-    }[m
[31m-[m
[31m-    // アクションメソッド（人員を更新・追加する）[m
[31m-    public String updatePerson() {[m
[31m-        conversation.end();[m
[31m-        if (person.getPersonId() != null) {[m
[31m-            personService.updatePerson(person);[m
[31m-        } else {[m
[31m-            personService.addPerson(person);[m
[31m-        }[m
[31m-        return "PersonTablePage?faces-redirect=true";[m
[31m-    }[m
[31m-[m
[31m-    // アクションメソッド（「入力画面」に戻る）[m
[31m-    public String back() {[m
[31m-        conversation.end();[m
[31m-        return "PersonInputPage?faces-redirect=true";[m
[31m-    }[m
[31m-[m
[31m-    // アクションメソッド（人員を削除する）[m
[31m-    public String removePerson(Integer personId) {[m
[31m-        personService.removePerson(personId);[m
[31m-        return "PersonTablePage?faces-redirect=true";[m
[31m-    }[m
[31m-[m
[31m-    // ヴューアクションメソッド（人員を表示する）[m
[31m-    public void viewAction() {[m
[31m-        if (person != null) {[m
[31m-            person = personService.getPerson(person.getPersonId());[m
[31m-        }[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/projects/cdi_conversation/src/main/java/dev/cline/apricot/cdi/conversation/PersonService.java b/projects/cdi_conversation/src/main/java/dev/cline/apricot/cdi/conversation/PersonService.java[m
[1mdeleted file mode 100644[m
[1mindex 5c6f405..0000000[m
[1m--- a/projects/cdi_conversation/src/main/java/dev/cline/apricot/cdi/conversation/PersonService.java[m
[1m+++ /dev/null[m
[36m@@ -1,95 +0,0 @@[m
[31m-package dev.cline.apricot.cdi.conversation;[m
[31m-[m
[31m-import java.io.BufferedReader;[m
[31m-import java.io.IOException;[m
[31m-import java.io.InputStream;[m
[31m-import java.io.InputStreamReader;[m
[31m-import java.io.Serializable;[m
[31m-import java.util.List;[m
[31m-import java.util.StringTokenizer;[m
[31m-import java.util.concurrent.CopyOnWriteArrayList;[m
[31m-[m
[31m-import jakarta.annotation.PostConstruct;[m
[31m-import jakarta.enterprise.context.ApplicationScoped;[m
[31m-[m
[31m-@ApplicationScoped[m
[31m-public class PersonService implements Serializable {[m
[31m-    private List<Person> personList = new CopyOnWriteArrayList<Person>();[m
[31m-[m
[31m-    @PostConstruct[m
[31m-    public void init() {[m
[31m-        ClassLoader classLoader = Thread.currentThread().getContextClassLoader();[m
[31m-        InputStream is = classLoader.getResourceAsStream("persons.csv");[m
[31m-        BufferedReader br = null;[m
[31m-        try {[m
[31m-            br = new BufferedReader(new InputStreamReader(is, "UTF-8"));[m
[31m-            String line;[m
[31m-            while ((line = br.readLine()) != null) {[m
[31m-                Person person = createPersonFromLine(line);[m
[31m-                personList.add(person);[m
[31m-            }[m
[31m-        } catch(IOException ioe) {[m
[31m-            throw new RuntimeException(ioe);[m
[31m-        } finally {[m
[31m-            try {[m
[31m-                if (br != null) {[m
[31m-                    br.close();[m
[31m-                }[m
[31m-            } catch(IOException ioe) {[m
[31m-                throw new RuntimeException(ioe);[m
[31m-            }[m
[31m-        }[m
[31m-    }[m
[31m-[m
[31m-    public Person getPerson(Integer personId) {[m
[31m-        for (Person person : personList) {[m
[31m-            if (person.getPersonId().equals(personId)) {[m
[31m-                return person;[m
[31m-            }[m
[31m-        }[m
[31m-        return null;[m
[31m-    }[m
[31m-[m
[31m-    public List<Person> getPersonList() {[m
[31m-        return personList;[m
[31m-    }[m
[31m-[m
[31m-    public void addPerson(Person person) {[m
[31m-        person.setPersonId(getNextPersonId());[m
[31m-        personList.add(person);[m
[31m-    }[m
[31m-[m
[31m-    public void removePerson(Integer personId) {[m
[31m-        for (Person p : personList) {[m
[31m-            if (p.getPersonId().equals(personId)) {[m
[31m-                personList.remove(p);[m
[31m-                return;[m
[31m-            }[m
[31m-        }[m
[31m-    }[m
[31m-[m
[31m-    public void updatePerson(Person person) {[m
[31m-        for (int i = 0; i < personList.size(); i++) {[m
[31m-            if (personList.get(i).getPersonId().equals(person.getPersonId())) {[m
[31m-                personList.remove(i);[m
[31m-                personList.add(i, person);[m
[31m-                return;[m
[31m-            }[m
[31m-        }[m
[31m-        personList.add(person);[m
[31m-    }[m
[31m-[m
[31m-    private Person createPersonFromLine(String line) {[m
[31m-        StringTokenizer st = new StringTokenizer(line, ",");[m
[31m-        Integer personId = Integer.parseInt(st.nextToken());[m
[31m-        String personName = st.nextToken();[m
[31m-        Integer age = Integer.parseInt(st.nextToken());[m
[31m-        String gender = st.nextToken();[m
[31m-        Person person = new Person(personId, personName, age, gender);[m
[31m-        return person;[m
[31m-    }[m
[31m-[m
[31m-    private Integer getNextPersonId() {[m
[31m-        return personList.get(personList.size() - 1).getPersonId() + 1;[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/projects/cdi_conversation/src/main/java/dev/cline/apricot/cdi/conversation/SessionFilter.java b/projects/cdi_conversation/src/main/java/dev/cline/apricot/cdi/conversation/SessionFilter.java[m
[1mdeleted file mode 100644[m
[1mindex 7608c69..0000000[m
[1m--- a/projects/cdi_conversation/src/main/java/dev/cline/apricot/cdi/conversation/SessionFilter.java[m
[1m+++ /dev/null[m
[36m@@ -1,39 +0,0 @@[m
[31m-package dev.cline.apricot.cdi.conversation;[m
[31m-[m
[31m-import java.io.IOException;[m
[31m-[m
[31m-import jakarta.servlet.Filter;[m
[31m-import jakarta.servlet.FilterChain;[m
[31m-import jakarta.servlet.FilterConfig;[m
[31m-import jakarta.servlet.ServletException;[m
[31m-import jakarta.servlet.ServletRequest;[m
[31m-import jakarta.servlet.ServletResponse;[m
[31m-import jakarta.servlet.annotation.WebFilter;[m
[31m-import jakarta.servlet.http.HttpServletRequest;[m
[31m-import jakarta.servlet.http.HttpSession;[m
[31m-[m
[31m-@WebFilter(urlPatterns = "/*")[m
[31m-public class SessionFilter implements Filter {[m
[31m-[m
[31m-    public void doFilter(ServletRequest request, ServletResponse response,[m
[31m-            FilterChain chain) throws IOException, ServletException {[m
[31m-[m
[31m-        HttpServletRequest hreq = (HttpServletRequest)request;[m
[31m-[m
[31m-        // リクエストの文字コードをUTF-8にセットする[m
[31m-        hreq.setCharacterEncoding("UTF-8");[m
[31m-[m
[31m-        // セッションを生成しておく[m
[31m-        HttpSession session = hreq.getSession(true);[m
[31m-        // セッションに対して同期処理を行う[m
[31m-        synchronized(session) {[m
[31m-            chain.doFilter(request, response);[m
[31m-        }[m
[31m-    }[m
[31m-[m
[31m-    public void init(FilterConfig config) throws ServletException {[m
[31m-    }[m
[31m-[m
[31m-    public void destroy() {[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/projects/cdi_conversation/src/main/resources/.gitkeep b/projects/cdi_conversation/src/main/resources/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/cdi_conversation/src/main/resources/persons.csv b/projects/cdi_conversation/src/main/resources/persons.csv[m
[1mdeleted file mode 100644[m
[1mindex de13f89..0000000[m
[1m--- a/projects/cdi_conversation/src/main/resources/persons.csv[m
[1m+++ /dev/null[m
[36m@@ -1,3 +0,0 @@[m
[31m-1,Alice,35,female[m
[31m-2,Bob,20,male[m
[31m-3,Carol,30,female[m
[1mdiff --git a/projects/cdi_conversation/src/main/webapp/.gitkeep b/projects/cdi_conversation/src/main/webapp/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/cdi_conversation/src/main/webapp/PersonInputPage.xhtml b/projects/cdi_conversation/src/main/webapp/PersonInputPage.xhtml[m
[1mdeleted file mode 100644[m
[1mindex dad04df..0000000[m
[1m--- a/projects/cdi_conversation/src/main/webapp/PersonInputPage.xhtml[m
[1m+++ /dev/null[m
[36m@@ -1,40 +0,0 @@[m
[31m-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja"[m
[31m-      xmlns:f="http://java.sun.com/jsf/core"[m
[31m-      xmlns:h="http://java.sun.com/jsf/html"[m
[31m-      xmlns:ui="http://java.sun.com/jsf/facelets">[m
[31m-<h:head>[m
[31m-<title>PersonInputPage</title>[m
[31m-<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />[m
[31m-</h:head>[m
[31m-<h:body>[m
[31m-  <h2>PersonInputPage</h2>[m
[31m-  <hr />[m
[31m-  <h:form id="form1">[m
[31m-    <h:outputText value="ID : #{personConversation.person.personId}"[m
[31m-      rendered="#{personConversation.person.personId != null}" />[m
[31m-    <h:panelGrid border="0" columns="3">[m
[31m-      <h:outputText value="名前" />[m
[31m-      <h:inputText id="personName" value="#{personConversation.person.personName}"[m
[31m-        required="true">[m
[31m-        <f:validateLength minimum="1" maximum="15" />[m
[31m-      </h:inputText>[m
[31m-      <h:message for="personName" errorStyle="color: red" />[m
[31m-      <h:outputText value="年齢" />[m
[31m-      <h:inputText id="age" value="#{personConversation.person.age}" required="true">[m
[31m-        <f:validateLongRange minimum="20" maximum="100" />[m
[31m-      </h:inputText>[m
[31m-      <h:message for="age" errorStyle="color: red" />[m
[31m-      <h:outputText value="性別" />[m
[31m-      <h:selectOneRadio id="gender" value="#{personConversation.person.gender}"[m
[31m-        required="true">[m
[31m-        <f:selectItem itemValue="male" itemLabel="男性" />[m
[31m-        <f:selectItem itemValue="female" itemLabel="女性" />[m
[31m-      </h:selectOneRadio>[m
[31m-      <h:message for="gender" errorStyle="color: red" />[m
[31m-    </h:panelGrid>[m
[31m-    <div>[m
[31m-      <h:commandButton value="確認画面へ" action="#{personConversation.confirm}" />[m
[31m-    </div>[m
[31m-  </h:form>[m
[31m-</h:body>[m
[31m-</html>[m
\ No newline at end of file[m
[1mdiff --git a/projects/cdi_conversation/src/main/webapp/PersonTablePage.xhtml b/projects/cdi_conversation/src/main/webapp/PersonTablePage.xhtml[m
[1mdeleted file mode 100644[m
[1mindex 9e08660..0000000[m
[1m--- a/projects/cdi_conversation/src/main/webapp/PersonTablePage.xhtml[m
[1m+++ /dev/null[m
[36m@@ -1,48 +0,0 @@[m
[31m-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja"[m
[31m-      xmlns:f="http://java.sun.com/jsf/core"[m
[31m-      xmlns:h="http://java.sun.com/jsf/html"[m
[31m-      xmlns:ui="http://java.sun.com/jsf/facelets">[m
[31m-<h:head>[m
[31m-<title>PersonTablePage</title>[m
[31m-<meta http-equiv="content-type" content="text/html; charset=UTF-8" />[m
[31m-</h:head>[m
[31m-<h:body>[m
[31m-  <h2>PersonTablePage</h2>[m
[31m-  <hr />[m
[31m-  <h:form>[m
[31m-    <h:dataTable id="dataTable" value="#{personConversation.personList}"[m
[31m-      var="person" border="1">[m
[31m-      <h:column>[m
[31m-        <f:facet name="header">ID</f:facet>[m
[31m-        <h:outputText id="personId" value="#{person.personId}" />[m
[31m-      </h:column>[m
[31m-      <h:column>[m
[31m-        <f:facet name="header">名前</f:facet>[m
[31m-        <h:outputText id="personName" value="#{person.personName}" />[m
[31m-      </h:column>[m
[31m-      <h:column>[m
[31m-        <f:facet name="header">年齢</f:facet>[m
[31m-        <h:outputText id="age" value="#{person.age}" />[m
[31m-      </h:column>[m
[31m-      <h:column>[m
[31m-        <f:facet name="header">性別</f:facet>[m
[31m-        <h:outputText id="gender" value="#{person.gender == null ? '' :[m
[31m-          person.gender == 'male' ? '男性' : '女性'}" />[m
[31m-      </h:column>[m
[31m-      <h:column>[m
[31m-        <f:facet name="header">編集</f:facet>[m
[31m-        <h:commandButton value="編集"[m
[31m-          action="#{personConversation.editPerson(person.personId)}" />[m
[31m-      </h:column>[m
[31m-      <h:column>[m
[31m-        <f:facet name="header">削除</f:facet>[m
[31m-        <h:commandButton value="削除"[m
[31m-          action="#{personConversation.removePerson(person.personId)}" />[m
[31m-      </h:column>[m
[31m-    </h:dataTable>[m
[31m-    <div>[m
[31m-      <h:commandButton value="作成" action="PersonInputPage" />[m
[31m-    </div>[m
[31m-  </h:form>[m
[31m-</h:body>[m
[31m-</html>[m
\ No newline at end of file[m
[1mdiff --git a/projects/cdi_conversation/src/main/webapp/PersonUpdatePage.xhtml b/projects/cdi_conversation/src/main/webapp/PersonUpdatePage.xhtml[m
[1mdeleted file mode 100644[m
[1mindex 49592d4..0000000[m
[1m--- a/projects/cdi_conversation/src/main/webapp/PersonUpdatePage.xhtml[m
[1m+++ /dev/null[m
[36m@@ -1,30 +0,0 @@[m
[31m-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja"[m
[31m-      xmlns:f="http://java.sun.com/jsf/core"[m
[31m-      xmlns:h="http://java.sun.com/jsf/html"[m
[31m-      xmlns:ui="http://java.sun.com/jsf/facelets">[m
[31m-<h:head>[m
[31m-<title>PersonUpdatePage</title>[m
[31m-<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />[m
[31m-</h:head>[m
[31m-<h:body>[m
[31m-  <h2>PersonUpdatePage</h2>[m
[31m-  <hr />[m
[31m-  <h:form id="form1">[m
[31m-    <h:outputText value="ID : #{personConversation.person.personId}"[m
[31m-      rendered="#{personConversation.person.personId != null}" />[m
[31m-    <h:panelGrid columns="2">[m
[31m-      <h:outputText value="名前" />[m
[31m-      <h:outputText value="#{personConversation.person.personName}" />[m
[31m-      <h:outputText value="年齢" />[m
[31m-      <h:outputText value="#{personConversation.person.age}" />[m
[31m-      <h:outputText value="性別" />[m
[31m-      <h:outputText value="#{personConversation.person.gender == null ? '' :[m
[31m-        personConversation.person.gender == 'male' ? '男性' : '女性'}" />[m
[31m-    </h:panelGrid>[m
[31m-    <div>[m
[31m-      <h:commandButton value="戻る" action="#{personConversation.back}" />[m
[31m-      <h:commandButton value="更新実行" action="#{personConversation.updatePerson}" />[m
[31m-    </div>[m
[31m-  </h:form>[m
[31m-</h:body>[m
[31m-</html>[m
\ No newline at end of file[m
[1mdiff --git a/projects/cdi_conversation/src/main/webapp/WEB-INF/.gitkeep b/projects/cdi_conversation/src/main/webapp/WEB-INF/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/cdi_conversation/src/main/webapp/WEB-INF/beans.xml b/projects/cdi_conversation/src/main/webapp/WEB-INF/beans.xml[m
[1mdeleted file mode 100644[m
[1mindex 0fc6e30..0000000[m
[1m--- a/projects/cdi_conversation/src/main/webapp/WEB-INF/beans.xml[m
[1m+++ /dev/null[m
[36m@@ -1,6 +0,0 @@[m
[31m-<beans xmlns="http://xmlns.jcp.org/xml/ns/javaee"[m
[31m-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"[m
[31m-       xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee[m
[31m-       http://xmlns.jcp.org/xml/ns/javaee/beans_2_0.xsd"[m
[31m-       bean-discovery-mode="all" version="2.0">[m
[31m-</beans>[m
\ No newline at end of file[m
[1mdiff --git a/projects/cdi_conversation/src/main/webapp/WEB-INF/web.xml b/projects/cdi_conversation/src/main/webapp/WEB-INF/web.xml[m
[1mdeleted file mode 100644[m
[1mindex 76462f2..0000000[m
[1m--- a/projects/cdi_conversation/src/main/webapp/WEB-INF/web.xml[m
[1m+++ /dev/null[m
[36m@@ -1,48 +0,0 @@[m
[31m-<?xml version="1.0" encoding="UTF-8"?>[m
[31m-<web-app xmlns="https://jakarta.ee/xml/ns/jakartaee"[m
[31m-         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"[m
[31m-         xsi:schemaLocation="https://jakarta.ee/xml/ns/jakartaee[m
[31m-         https://jakarta.ee/xml/ns/jakartaee/web-app_5_0.xsd"[m
[31m-         version="5.0">[m
[31m-[m
[31m-  <!-- ========== Context Param ================================= -->[m
[31m-  <!-- Select JSF State Saving Mode -->[m
[31m-  <context-param>[m
[31m-    <param-name>jakarta.faces.STATE_SAVING_METHOD</param-name>[m
[31m-    <param-value>server</param-value>[m
[31m-  </context-param>[m
[31m-[m
[31m-  <!-- For Facelets Comment Skip -->[m
[31m-  <context-param>[m
[31m-    <param-name>jakarta.faces.FACELETS_SKIP_COMMENTS</param-name>[m
[31m-    <param-value>true</param-value>[m
[31m-  </context-param>[m
[31m-[m
[31m-  <!-- For Empty String Validation -->[m
[31m-  <context-param>[m
[31m-    <param-name>jakarta.faces.INTERPRET_EMPTY_STRING_SUBMITTED_VALUES_AS_NULL[m
[31m-    </param-name>[m
[31m-    <param-value>true</param-value>[m
[31m-  </context-param>[m
[31m-[m
[31m-  <!-- For Using System Timezone -->[m
[31m-  <context-param>[m
[31m-    <param-name>jakarta.faces.DATETIMECONVERTER_DEFAULT_TIMEZONE_IS_SYSTEM_TIMEZONE[m
[31m-    </param-name>[m
[31m-    <param-value>true</param-value>[m
[31m-  </context-param>[m
[31m-[m
[31m-  <!-- ========== Servlet ======================================= -->[m
[31m-  <servlet>[m
[31m-    <servlet-name>Faces Servlet</servlet-name>[m
[31m-    <servlet-class>jakarta.faces.webapp.FacesServlet</servlet-class>[m
[31m-    <load-on-startup>1</load-on-startup>[m
[31m-  </servlet>[m
[31m-[m
[31m-  <!-- ========== Servlet Mapping =============================== -->[m
[31m-  <servlet-mapping>[m
[31m-    <servlet-name>Faces Servlet</servlet-name>[m
[31m-    <url-pattern>/faces/*</url-pattern>[m
[31m-  </servlet-mapping>[m
[31m-[m
[31m-</web-app>[m
\ No newline at end of file[m
[1mdiff --git a/projects/cdi_conversation/src/test/java/.gitkeep b/projects/cdi_conversation/src/test/java/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/cdi_conversation/src/test/resources/.gitkeep b/projects/cdi_conversation/src/test/resources/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/cdi_inject/.gitignore b/projects/cdi_inject/.gitignore[m
[1mdeleted file mode 100644[m
[1mindex 6f1d2c2..0000000[m
[1m--- a/projects/cdi_inject/.gitignore[m
[1m+++ /dev/null[m
[36m@@ -1,5 +0,0 @@[m
[31m-/classes[m
[31m-/bin[m
[31m-/build[m
[31m-/target[m
[31m-/.gradle[m
[1mdiff --git a/projects/cdi_inject/README.md b/projects/cdi_inject/README.md[m
[1mdeleted file mode 100644[m
[1mindex 3dc4727..0000000[m
[1m--- a/projects/cdi_inject/README.md[m
[1m+++ /dev/null[m
[36m@@ -1,94 +0,0 @@[m
[31m-# cdi_inject プロジェクト[m
[31m-[m
[31m-## 📖 概要[m
[31m-[m
[31m-CDI (Contexts and Dependency Injection) の基本的な依存性注入を学ぶサンプルです。[m
[31m-@Inject、@Named、スコープなどの基本概念を学習できます。[m
[31m-[m
[31m-## 🚀 アプリケーションの開発フローとデプロイ方法[m
[31m-[m
[31m-### 前提条件[m
[31m-[m
[31m-- JDK 21以上[m
[31m-- Gradle 8.x以上[m
[31m-- Payara Server 6（プロジェクトルートの`payara6/`に配置）[m
[31m-[m
[31m-### 1. Payara Serverの起動（研修1回について初回だけ）[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew startPayara[m
[31m-```[m
[31m-[m
[31m-### 2. WARファイルのビルド（アプリケーション作成・更新のたびに実施）[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew :projects:cdi_inject:war[m
[31m-```[m
[31m-[m
[31m-### 3. アプリケーションのデプロイ（アプリケーション作成・更新のたびに実施）[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew :projects:cdi_inject:deploy[m
[31m-```[m
[31m-[m
[31m-## 📍 アクセスURL[m
[31m-[m
[31m-デプロイ後、以下のURLにアクセス：[m
[31m-[m
[31m-- **トップページ**: http://localhost:8080/cdi_inject/[m
[31m-[m
[31m-## 🎯 プロジェクト構成[m
[31m-[m
[31m-```[m
[31m-projects/cdi_inject/[m
[31m-├── src/[m
[31m-│   ├── main/[m
[31m-│   │   ├── java/[m
[31m-│   │   │   ├── bean/              # CDI Bean[m
[31m-│   │   │   ├── service/           # サービスクラス[m
[31m-│   │   │   └── servlet/           # Servlet[m
[31m-│   │   └── webapp/[m
[31m-│   │       ├── index.html[m
[31m-│   │       └── WEB-INF/[m
[31m-│   │           ├── web.xml[m
[31m-│   │           └── beans.xml      # CDI設定[m
[31m-│   └── test/[m
[31m-└── build/[m
[31m-    └── libs/[m
[31m-        └── cdi_inject.war[m
[31m-```[m
[31m-[m
[31m-## 🔧 使用している技術[m
[31m-[m
[31m-- **Jakarta EE 10**[m
[31m-- **Payara Server 6**[m
[31m-- **Jakarta CDI 4.0**[m
[31m-- **Jakarta Servlet 6.0**[m
[31m-[m
[31m-## 🛑 アプリケーションを停止する[m
[31m-[m
[31m-### アプリケーションのアンデプロイ[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew :projects:cdi_inject:undeploy[m
[31m-```[m
[31m-[m
[31m-### Payara Server全体を停止[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew stopPayara[m
[31m-```[m
[31m-[m
[31m-## 🔍 ログ監視[m
[31m-[m
[31m-別のターミナルでログをリアルタイム監視：[m
[31m-[m
[31m-**Windows (PowerShell):**[m
[31m-```powershell[m
[31m-Get-Content -Path payara6\glassfish\domains\domain1\logs\server.log -Wait -Tail 50 -Encoding UTF8[m
[31m-```[m
[31m-[m
[31m-**Linux/Mac:**[m
[31m-```bash[m
[31m-tail -f -n 50 payara6/glassfish/domains/domain1/logs/server.log[m
[31m-```[m
[1mdiff --git a/projects/cdi_inject/src/main/java/.gitkeep b/projects/cdi_inject/src/main/java/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/cdi_inject/src/main/java/dev/cline/apricot/cdi/di/.LCKFugaServlet.java~ b/projects/cdi_inject/src/main/java/dev/cline/apricot/cdi/di/.LCKFugaServlet.java~[m
[1mdeleted file mode 100644[m
[1mindex 2520031..0000000[m
[1m--- a/projects/cdi_inject/src/main/java/dev/cline/apricot/cdi/di/.LCKFugaServlet.java~[m
[1m+++ /dev/null[m
[36m@@ -1 +0,0 @@[m
[31m-D:\GitHubRepos\cline_training_2025\cline_training_answer\projects\cdi_inject\src\main\java\jp\mufg\it\ee\cdi\di\FugaServlet.java[m
\ No newline at end of file[m
[1mdiff --git a/projects/cdi_inject/src/main/java/dev/cline/apricot/cdi/di/Bar.java b/projects/cdi_inject/src/main/java/dev/cline/apricot/cdi/di/Bar.java[m
[1mdeleted file mode 100644[m
[1mindex 1558b23..0000000[m
[1m--- a/projects/cdi_inject/src/main/java/dev/cline/apricot/cdi/di/Bar.java[m
[1m+++ /dev/null[m
[36m@@ -1,5 +0,0 @@[m
[31m-package dev.cline.apricot.cdi.di;[m
[31m-[m
[31m-public interface Bar {[m
[31m-    public int doBusiness(int param);[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/projects/cdi_inject/src/main/java/dev/cline/apricot/cdi/di/BarImpl.java b/projects/cdi_inject/src/main/java/dev/cline/apricot/cdi/di/BarImpl.java[m
[1mdeleted file mode 100644[m
[1mindex ef1e2a3..0000000[m
[1m--- a/projects/cdi_inject/src/main/java/dev/cline/apricot/cdi/di/BarImpl.java[m
[1m+++ /dev/null[m
[36m@@ -1,12 +0,0 @@[m
[31m-package dev.cline.apricot.cdi.di;[m
[31m-[m
[31m-import jakarta.enterprise.context.RequestScoped;[m
[31m-[m
[31m-@RequestScoped[m
[31m-public class BarImpl implements Bar {[m
[31m-[m
[31m-    // ビジネスメソッド[m
[31m-    public int doBusiness(int param) {[m
[31m-        return param * param;[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/projects/cdi_inject/src/main/java/dev/cline/apricot/cdi/di/Foo.java b/projects/cdi_inject/src/main/java/dev/cline/apricot/cdi/di/Foo.java[m
[1mdeleted file mode 100644[m
[1mindex f4e4250..0000000[m
[1m--- a/projects/cdi_inject/src/main/java/dev/cline/apricot/cdi/di/Foo.java[m
[1m+++ /dev/null[m
[36m@@ -1,5 +0,0 @@[m
[31m-package dev.cline.apricot.cdi.di;[m
[31m-[m
[31m-public interface Foo {[m
[31m-    public int doBusiness(int param);[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/projects/cdi_inject/src/main/java/dev/cline/apricot/cdi/di/FooImpl.java b/projects/cdi_inject/src/main/java/dev/cline/apricot/cdi/di/FooImpl.java[m
[1mdeleted file mode 100644[m
[1mindex daa1ecd..0000000[m
[1m--- a/projects/cdi_inject/src/main/java/dev/cline/apricot/cdi/di/FooImpl.java[m
[1m+++ /dev/null[m
[36m@@ -1,29 +0,0 @@[m
[31m-package dev.cline.apricot.cdi.di;[m
[31m-[m
[31m-import jakarta.enterprise.context.Dependent;[m
[31m-import jakarta.inject.Inject;[m
[31m-[m
[31m-@Dependent // インジェクション先のライフサイクルに準じる[m
[31m-public class FooImpl implements Foo {[m
[31m-    // インジェクションポイント[m
[31m-    @Inject[m
[31m-    private Bar bar;[m
[31m-[m
[31m-    // コンストラクタ[m
[31m-    public FooImpl(Bar bar) {[m
[31m-        this.bar = bar;[m
[31m-    }[m
[31m-[m
[31m-    // 引数無しのコンストラクタ[m
[31m-    public FooImpl() {[m
[31m-    }[m
[31m-[m
[31m-    // ビジネスメソッド[m
[31m-    public int doBusiness(int param) {[m
[31m-        // Barのビジネスメソッドを呼び出す[m
[31m-        int retVal = bar.doBusiness(param);[m
[31m-        // Barの結果を受けてビジネスロジックを実行する[m
[31m-        int result = retVal + retVal;[m
[31m-        return result;[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/projects/cdi_inject/src/main/java/dev/cline/apricot/cdi/di/FugaServlet.java b/projects/cdi_inject/src/main/java/dev/cline/apricot/cdi/di/FugaServlet.java[m
[1mdeleted file mode 100644[m
[1mindex 3112b6b..0000000[m
[1m--- a/projects/cdi_inject/src/main/java/dev/cline/apricot/cdi/di/FugaServlet.java[m
[1m+++ /dev/null[m
[36m@@ -1,29 +0,0 @@[m
[31m-package dev.cline.apricot.cdi.di;[m
[31m-[m
[31m-import java.io.IOException;[m
[31m-import java.io.PrintWriter;[m
[31m-import jakarta.inject.Inject;[m
[31m-import jakarta.servlet.ServletException;[m
[31m-import jakarta.servlet.annotation.WebServlet;[m
[31m-import jakarta.servlet.http.HttpServlet;[m
[31m-import jakarta.servlet.http.HttpServletRequest;[m
[31m-import jakarta.servlet.http.HttpServletResponse;[m
[31m-[m
[31m-@WebServlet("/FugaServlet")[m
[31m-public class FugaServlet extends HttpServlet {[m
[31m-    // インジェクションポイント[m
[31m-    @Inject[m
[31m-    private Foo foo;[m
[31m-[m
[31m-    // doPostメソッド[m
[31m-    public void doGet(HttpServletRequest request, HttpServletResponse response)[m
[31m-            throws IOException, ServletException {[m
[31m-        // ビジネスメソッドを呼び出す[m
[31m-        int answer = foo.doBusiness(3);[m
[31m-[m
[31m-        // 結果を画面に出力する[m
[31m-        PrintWriter out = response.getWriter();[m
[31m-        out.print("NORMAL END ( Answer ---> " + answer + " )");[m
[31m-        out.close();[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/projects/cdi_inject/src/main/java/dev/cline/apricot/cdi/mocking/MockBar.java b/projects/cdi_inject/src/main/java/dev/cline/apricot/cdi/mocking/MockBar.java[m
[1mdeleted file mode 100644[m
[1mindex 86bfb1f..0000000[m
[1m--- a/projects/cdi_inject/src/main/java/dev/cline/apricot/cdi/mocking/MockBar.java[m
[1m+++ /dev/null[m
[36m@@ -1,17 +0,0 @@[m
[31m-package dev.cline.apricot.cdi.mocking;[m
[31m-[m
[31m-import jakarta.enterprise.context.RequestScoped;[m
[31m-import jakarta.enterprise.inject.Alternative;[m
[31m-[m
[31m-import dev.cline.apricot.cdi.di.Bar;[m
[31m-[m
[31m-@RequestScoped[m
[31m-@Alternative[m
[31m-//ビジネスメソッド[m
[31m-public class MockBar implements Bar {[m
[31m-    public int doBusiness(int param) {[m
[31m-     // Fooが単体テストを実施しやすくなるように実装する[m
[31m-     // ここでは常に10を返す[m
[31m-        return 10;[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/projects/cdi_inject/src/main/resources/.gitkeep b/projects/cdi_inject/src/main/resources/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/cdi_inject/src/main/webapp/.gitkeep b/projects/cdi_inject/src/main/webapp/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/cdi_inject/src/main/webapp/WEB-INF/.gitkeep b/projects/cdi_inject/src/main/webapp/WEB-INF/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/cdi_inject/src/main/webapp/WEB-INF/beans.xml b/projects/cdi_inject/src/main/webapp/WEB-INF/beans.xml[m
[1mdeleted file mode 100644[m
[1mindex 35dbd31..0000000[m
[1m--- a/projects/cdi_inject/src/main/webapp/WEB-INF/beans.xml[m
[1m+++ /dev/null[m
[36m@@ -1,9 +0,0 @@[m
[31m-<beans xmlns="http://xmlns.jcp.org/xml/ns/javaee"[m
[31m-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"[m
[31m-       xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee[m
[31m-       http://xmlns.jcp.org/xml/ns/javaee/beans_2_0.xsd"[m
[31m-       bean-discovery-mode="all" version="2.0">[m
[31m-  <alternatives>[m
[31m-    <class>jp.mufg.it.ee.cdi.mocking.MockBar</class>[m
[31m-  </alternatives>[m
[31m-</beans>[m
\ No newline at end of file[m
[1mdiff --git a/projects/cdi_inject/src/main/webapp/WEB-INF/web.xml b/projects/cdi_inject/src/main/webapp/WEB-INF/web.xml[m
[1mdeleted file mode 100644[m
[1mindex b7a659c..0000000[m
[1m--- a/projects/cdi_inject/src/main/webapp/WEB-INF/web.xml[m
[1m+++ /dev/null[m
[36m@@ -1,7 +0,0 @@[m
[31m-<?xml version="1.0" encoding="UTF-8"?>[m
[31m-<web-app xmlns="https://jakarta.ee/xml/ns/jakartaee"[m
[31m-         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"[m
[31m-         xsi:schemaLocation="https://jakarta.ee/xml/ns/jakartaee[m
[31m-         https://jakarta.ee/xml/ns/jakartaee/web-app_5_0.xsd"[m
[31m-         version="5.0">[m
[31m-</web-app>[m
\ No newline at end of file[m
[1mdiff --git a/projects/cdi_inject/src/test/java/.gitkeep b/projects/cdi_inject/src/test/java/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/cdi_inject/src/test/java/dev/cline/apricot/cdi/di/FooImplTest1.java b/projects/cdi_inject/src/test/java/dev/cline/apricot/cdi/di/FooImplTest1.java[m
[1mdeleted file mode 100644[m
[1mindex 3aba887..0000000[m
[1m--- a/projects/cdi_inject/src/test/java/dev/cline/apricot/cdi/di/FooImplTest1.java[m
[1m+++ /dev/null[m
[36m@@ -1,22 +0,0 @@[m
[31m-package dev.cline.apricot.cdi.di;[m
[31m-[m
[31m-import org.junit.jupiter.api.Assertions;[m
[31m-import org.junit.jupiter.api.Test;[m
[31m-[m
[31m-public class FooImplTest1 {[m
[31m-[m
[31m-    @Test[m
[31m-    public void testDoBusiness() throws Exception {[m
[31m-        // Barインスタンスを生成する[m
[31m-        Bar bar = new BarImpl();[m
[31m-[m
[31m-        // Fooインスタンスを生成する[m
[31m-        Foo foo = new FooImpl(bar);[m
[31m-[m
[31m-        // テスト対象メソッドを呼び出す[m
[31m-        int answer = foo.doBusiness(3);[m
[31m-[m
[31m-        // 結果を検証する[m
[31m-        Assertions.assertEquals(18, answer);[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/projects/cdi_inject/src/test/java/dev/cline/apricot/cdi/di/FooImplTest2.java b/projects/cdi_inject/src/test/java/dev/cline/apricot/cdi/di/FooImplTest2.java[m
[1mdeleted file mode 100644[m
[1mindex 38a78b5..0000000[m
[1m--- a/projects/cdi_inject/src/test/java/dev/cline/apricot/cdi/di/FooImplTest2.java[m
[1m+++ /dev/null[m
[36m@@ -1,23 +0,0 @@[m
[31m-package dev.cline.apricot.cdi.di;[m
[31m-[m
[31m-import org.junit.jupiter.api.Assertions;[m
[31m-import org.junit.jupiter.api.Test;[m
[31m-import dev.cline.apricot.cdi.mocking.MockBar;[m
[31m-[m
[31m-public class FooImplTest2 {[m
[31m-[m
[31m-    @Test[m
[31m-    public void testDoBusiness() throws Exception {[m
[31m-        // Barのモックオブジェクトを生成する[m
[31m-        Bar bar = new MockBar();[m
[31m-[m
[31m-        // Fooインスタンスを生成する[m
[31m-        Foo foo = new FooImpl(bar);[m
[31m-[m
[31m-        // テスト対象メソッドを呼び出す[m
[31m-        int answer = foo.doBusiness(3);[m
[31m-[m
[31m-        // 結果を検証する[m
[31m-        Assertions.assertEquals(20, answer);[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/projects/cdi_inject/src/test/resources/.gitkeep b/projects/cdi_inject/src/test/resources/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/cdi_transactional/.gitignore b/projects/cdi_transactional/.gitignore[m
[1mdeleted file mode 100644[m
[1mindex 6f1d2c2..0000000[m
[1m--- a/projects/cdi_transactional/.gitignore[m
[1m+++ /dev/null[m
[36m@@ -1,5 +0,0 @@[m
[31m-/classes[m
[31m-/bin[m
[31m-/build[m
[31m-/target[m
[31m-/.gradle[m
[1mdiff --git a/projects/cdi_transactional/README.md b/projects/cdi_transactional/README.md[m
[1mdeleted file mode 100644[m
[1mindex 37a8b27..0000000[m
[1m--- a/projects/cdi_transactional/README.md[m
[1m+++ /dev/null[m
[36m@@ -1,156 +0,0 @@[m
[31m-﻿# cdi_transactional プロジェクト[m
[31m-[m
[31m-## 📖 概要[m
[31m-[m
[31m-CDIとJTA（Jakarta Transactions API）を使用したトランザクション管理のサンプルです。[m
[31m-@Transactionalアノテーションによる宣言的トランザクション管理を学習できます。[m
[31m-[m
[31m-## 🚀 アプリケーションの開発フローとデプロイ方法[m
[31m-[m
[31m-### 前提条件[m
[31m-[m
[31m-- JDK 21以上[m
[31m-- Gradle 8.x以上[m
[31m-- Payara Server 6（プロジェクトルートの`payara6/`に配置）[m
[31m-- HSQLDB（プロジェクトルートの`hsqldb/`に配置）[m
[31m-[m
[31m-### 1. HSQLDBサーバーの起動（研修1回について初回だけ）[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew startHsqldb[m
[31m-```[m
[31m-[m
[31m-### 2. 初期データのセットアップ（研修1回について初回だけ）[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew :projects:cdi_transactional:setupHsqldb[m
[31m-```[m
[31m-[m
[31m-### 3. Payara Serverの起動（研修1回について初回だけ）[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew startPayara[m
[31m-```[m
[31m-[m
[31m-### 4. データソースの作成（研修1回について初回だけ）[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew createConnectionPool[m
[31m-.\gradlew createDataSource[m
[31m-```[m
[31m-[m
[31m-### 5. WARファイルのビルド（アプリケーション作成・更新のたびに実施）[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew :projects:cdi_transactional:war[m
[31m-```[m
[31m-[m
[31m-### 6. アプリケーションのデプロイ（アプリケーション作成・更新のたびに実施）[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew :projects:cdi_transactional:deploy[m
[31m-```[m
[31m-[m
[31m-## 📍 アクセスURL[m
[31m-[m
[31m-デプロイ後、以下のURLにアクセス：[m
[31m-[m
[31m-- **トップページ**: http://localhost:8080/cdi_transactional/[m
[31m-[m
[31m-## 🎯 プロジェクト構成[m
[31m-[m
[31m-```[m
[31m-projects/cdi_transactional/[m
[31m-├── src/[m
[31m-│   ├── main/[m
[31m-│   │   ├── java/[m
[31m-│   │   │   ├── bean/              # CDI Bean[m
[31m-│   │   │   ├── entity/            # JPAエンティティ[m
[31m-│   │   │   ├── service/           # サービス (@Transactional)[m
[31m-│   │   │   └── servlet/           # Servlet[m
[31m-│   │   ├── resources/[m
[31m-│   │   │   └── META-INF/[m
[31m-│   │   │       └── persistence.xml[m
[31m-│   │   └── webapp/[m
[31m-│   │       ├── index.html[m
[31m-│   │       └── WEB-INF/[m
[31m-│   │           ├── web.xml[m
[31m-│   │           └── beans.xml[m
[31m-│   └── test/[m
[31m-├── sql/[m
[31m-│   └── hsqldb/[m
[31m-└── build/[m
[31m-    └── libs/[m
[31m-        └── cdi_transactional.war[m
[31m-```[m
[31m-[m
[31m-## 🔧 使用している技術[m
[31m-[m
[31m-- **Jakarta EE 10**[m
[31m-- **Payara Server 6**[m
[31m-- **Jakarta CDI 4.0**[m
[31m-- **Jakarta Transactions (JTA)**[m
[31m-- **JDBC DataSource**[m
[31m-- **HSQLDB 2.7.x**[m
[31m-[m
[31m-## 📝 データソース設定について[m
[31m-[m
[31m-このプロジェクトはルートの`build.gradle`で定義されたタスクを使用してデータソースを作成します。[m
[31m-[m
[31m-### 設定内容[m
[31m-[m
[31m-- **JNDI名**: `jdbc/HsqldbDS`[m
[31m-- **データベース**: `testdb`[m
[31m-- **ユーザー**: `SA`[m
[31m-- **パスワード**: （空文字）[m
[31m-- **TCPサーバー**: `localhost:9001`[m
[31m-[m
[31m-データソースはPayara Serverのドメイン設定に登録されます。[m
[31m-[m
[31m-### ⚠️ 注意事項[m
[31m-[m
[31m-- HSQLDB Databaseサーバーが起動している必要があります[m
[31m-- データソース作成はPayara Server起動前に実行してください[m
[31m-- 初回のみ実行が必要です（2回目以降は不要）[m
[31m-[m
[31m-## 🔄 再デプロイ[m
[31m-[m
[31m-アプリケーションを更新した場合：[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew :projects:cdi_transactional:redeploy[m
[31m-```[m
[31m-[m
[31m-## 🛑 アプリケーションを停止する[m
[31m-[m
[31m-### アプリケーションのアンデプロイ[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew :projects:cdi_transactional:undeploy[m
[31m-```[m
[31m-[m
[31m-### Payara Server全体を停止[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew stopPayara[m
[31m-```[m
[31m-[m
[31m-### HSQLDBサーバーを停止[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew stopHsqldb[m
[31m-```[m
[31m-[m
[31m-## 🔍 ログ監視[m
[31m-[m
[31m-別のターミナルでログをリアルタイム監視：[m
[31m-[m
[31m-**Windows (PowerShell):**[m
[31m-```powershell[m
[31m-Get-Content -Path payara6\glassfish\domains\domain1\logs\server.log -Wait -Tail 50 -Encoding UTF8[m
[31m-```[m
[31m-[m
[31m-**Linux/Mac:**[m
[31m-```bash[m
[31m-tail -f -n 50 payara6/glassfish/domains/domain1/logs/server.log[m
[31m-```[m
[1mdiff --git a/projects/cdi_transactional/sql/h2/1_JTA_TRANSACTIONAL_DDL.sql b/projects/cdi_transactional/sql/h2/1_JTA_TRANSACTIONAL_DDL.sql[m
[1mdeleted file mode 100644[m
[1mindex 2e6fc19..0000000[m
[1m--- a/projects/cdi_transactional/sql/h2/1_JTA_TRANSACTIONAL_DDL.sql[m
[1m+++ /dev/null[m
[36m@@ -1,6 +0,0 @@[m
[31m-DROP TABLE IF EXISTS BUSINESS;[m
[31m-[m
[31m-CREATE TABLE BUSINESS ([m
[31m-NAME  VARCHAR(10) PRIMARY KEY, [m
[31m-COUNT INT NOT NULL[m
[31m-);[m
\ No newline at end of file[m
[1mdiff --git a/projects/cdi_transactional/sql/h2/2_JTA_TRANSACTIONAL_DML.sql b/projects/cdi_transactional/sql/h2/2_JTA_TRANSACTIONAL_DML.sql[m
[1mdeleted file mode 100644[m
[1mindex 4c2aec8..0000000[m
[1m--- a/projects/cdi_transactional/sql/h2/2_JTA_TRANSACTIONAL_DML.sql[m
[1m+++ /dev/null[m
[36m@@ -1,4 +0,0 @@[m
[31m-DELETE FROM BUSINESS;[m
[31m-[m
[31m-INSERT INTO BUSINESS VALUES('Bar', 0);[m
[31m-INSERT INTO BUSINESS VALUES('Qux', 0);[m
[1mdiff --git a/projects/cdi_transactional/sql/hsqldb/1_JTA_TRANSACTIONAL_DDL.sql b/projects/cdi_transactional/sql/hsqldb/1_JTA_TRANSACTIONAL_DDL.sql[m
[1mdeleted file mode 100644[m
[1mindex c3cecfd..0000000[m
[1m--- a/projects/cdi_transactional/sql/hsqldb/1_JTA_TRANSACTIONAL_DDL.sql[m
[1m+++ /dev/null[m
[36m@@ -1,11 +0,0 @@[m
[31m-DROP TABLE BUSINESS IF EXISTS;[m
[31m-[m
[31m-CREATE TABLE BUSINESS ([m
[31m-NAME  VARCHAR(10) PRIMARY KEY, [m
[31m-COUNT INT NOT NULL[m
[31m-);[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[1mdiff --git a/projects/cdi_transactional/sql/hsqldb/2_JTA_TRANSACTIONAL_DML.sql b/projects/cdi_transactional/sql/hsqldb/2_JTA_TRANSACTIONAL_DML.sql[m
[1mdeleted file mode 100644[m
[1mindex 2d56cae..0000000[m
[1m--- a/projects/cdi_transactional/sql/hsqldb/2_JTA_TRANSACTIONAL_DML.sql[m
[1m+++ /dev/null[m
[36m@@ -1,9 +0,0 @@[m
[31m-DELETE FROM BUSINESS;[m
[31m-[m
[31m-INSERT INTO BUSINESS VALUES('Bar', 0);[m
[31m-INSERT INTO BUSINESS VALUES('Qux', 0);[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[1mdiff --git a/projects/cdi_transactional/src/main/java/.gitkeep b/projects/cdi_transactional/src/main/java/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/cdi_transactional/src/main/java/dev/cline/apricot/jta/transactional/.gitkeep b/projects/cdi_transactional/src/main/java/dev/cline/apricot/jta/transactional/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/cdi_transactional/src/main/java/dev/cline/apricot/jta/transactional/BarBean.java b/projects/cdi_transactional/src/main/java/dev/cline/apricot/jta/transactional/BarBean.java[m
[1mdeleted file mode 100644[m
[1mindex cc5ff01..0000000[m
[1m--- a/projects/cdi_transactional/src/main/java/dev/cline/apricot/jta/transactional/BarBean.java[m
[1m+++ /dev/null[m
[36m@@ -1,57 +0,0 @@[m
[31m-package dev.cline.apricot.jta.transactional;[m
[31m-[m
[31m-import java.sql.Connection;[m
[31m-import java.sql.PreparedStatement;[m
[31m-import java.sql.SQLException;[m
[31m-import jakarta.annotation.Resource;[m
[31m-import jakarta.enterprise.context.Dependent;[m
[31m-import javax.sql.DataSource;[m
[31m-import jakarta.transaction.Transactional;[m
[31m-import jakarta.transaction.Transactional.TxType;[m
[31m-[m
[31m-@Dependent[m
[31m-@Transactional(TxType.REQUIRES_NEW)[m
[31m-public class BarBean {[m
[31m-[m
[31m-    // インジェクションポイント[m
[31m-    @Resource(lookup = "jdbc/H2DS")[m
[31m-    private DataSource ds;[m
[31m-[m
[31m-    // 引数なしのコンストラクタ[m
[31m-    public BarBean() {[m
[31m-    }[m
[31m-[m
[31m-    // コンストラクタ[m
[31m-    public BarBean(DataSource ds) {[m
[31m-        this.ds = ds;[m
[31m-    }[m
[31m-[m
[31m-    // ビジネスメソッド[m
[31m-    public void doBusiness(int param) {[m
[31m-        System.out.println("[ BarBean#doBusiness ] Start");[m
[31m-        Connection conn = null;[m
[31m-        try {[m
[31m-            // OPERATIONテーブルの、主キーが"Bar"のローを更新する[m
[31m-            conn = ds.getConnection();[m
[31m-            PreparedStatement pstmt = conn.prepareStatement([m
[31m-                    "UPDATE BUSINESS SET COUNT = COUNT + ? " +[m
[31m-                    "WHERE NAME = 'Bar'");[m
[31m-            pstmt.setInt(1, param);[m
[31m-            pstmt.executeUpdate();[m
[31m-[m
[31m-        } catch (SQLException sqle) {[m
[31m-            throw new RuntimeException(sqle);[m
[31m-        } finally {[m
[31m-            // コネクションをクローズする[m
[31m-            try {[m
[31m-                if (conn != null) {[m
[31m-                    conn.close();[m
[31m-                }[m
[31m-            } catch (SQLException sqle) {[m
[31m-                throw new RuntimeException(sqle);[m
[31m-            }[m
[31m-        }[m
[31m-[m
[31m-        System.out.println("[ BarBean#doBusiness ] End");[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/projects/cdi_transactional/src/main/java/dev/cline/apricot/jta/transactional/FooBean.java b/projects/cdi_transactional/src/main/java/dev/cline/apricot/jta/transactional/FooBean.java[m
[1mdeleted file mode 100644[m
[1mindex 9ca5a27..0000000[m
[1m--- a/projects/cdi_transactional/src/main/java/dev/cline/apricot/jta/transactional/FooBean.java[m
[1m+++ /dev/null[m
[36m@@ -1,31 +0,0 @@[m
[31m-package dev.cline.apricot.jta.transactional;[m
[31m-[m
[31m-import jakarta.enterprise.context.RequestScoped;[m
[31m-import jakarta.inject.Inject;[m
[31m-import jakarta.transaction.Transactional;[m
[31m-import jakarta.transaction.Transactional.TxType;[m
[31m-[m
[31m-@RequestScoped[m
[31m-@Transactional(TxType.REQUIRED)[m
[31m-public class FooBean {[m
[31m-    // インジェクションポイント（フィールドインジェクション）[m
[31m-    @Inject[m
[31m-    private BarBean barBean;[m
[31m-[m
[31m-    // インジェクションポイント（フィールドインジェクション）[m
[31m-    @Inject[m
[31m-    private QuxBean quxBean;[m
[31m-[m
[31m-    // ビジネスメソッド[m
[31m-    public void doBusiness(int param) {[m
[31m-        System.out.println("[ FooBean#doBusiness ] Start");[m
[31m-[m
[31m-        // セッションBean（BarBean）のビジネスメソッドを呼び出す[m
[31m-        barBean.doBusiness(param);[m
[31m-[m
[31m-        // セッションBean（QuxBean）のビジネスメソッドを呼び出す[m
[31m-        quxBean.doBusiness(param);[m
[31m-[m
[31m-        System.out.println("[ FooBean#doBusiness ] End");[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/projects/cdi_transactional/src/main/java/dev/cline/apricot/jta/transactional/FugaServlet.java b/projects/cdi_transactional/src/main/java/dev/cline/apricot/jta/transactional/FugaServlet.java[m
[1mdeleted file mode 100644[m
[1mindex 5bfda68..0000000[m
[1m--- a/projects/cdi_transactional/src/main/java/dev/cline/apricot/jta/transactional/FugaServlet.java[m
[1m+++ /dev/null[m
[36m@@ -1,32 +0,0 @@[m
[31m-package dev.cline.apricot.jta.transactional;[m
[31m-[m
[31m-import java.io.IOException;[m
[31m-import java.io.PrintWriter;[m
[31m-[m
[31m-import jakarta.inject.Inject;[m
[31m-import jakarta.servlet.ServletException;[m
[31m-import jakarta.servlet.annotation.WebServlet;[m
[31m-import jakarta.servlet.http.HttpServlet;[m
[31m-import jakarta.servlet.http.HttpServletRequest;[m
[31m-import jakarta.servlet.http.HttpServletResponse;[m
[31m-[m
[31m-@WebServlet("/FugaServlet")[m
[31m-public class FugaServlet extends HttpServlet {[m
[31m-    // インジェクションポイント[m
[31m-    @Inject[m
[31m-    private FooBean fooBean;[m
[31m-[m
[31m-    public void doPost(HttpServletRequest request, HttpServletResponse response)[m
[31m-            throws IOException, ServletException {[m
[31m-        // 入力値を取得する[m
[31m-        Integer param = Integer.parseInt(request.getParameter("param"));[m
[31m-[m
[31m-        // ビジネスメソッドを呼び出す[m
[31m-        fooBean.doBusiness(param);[m
[31m-[m
[31m-        // 画面に出力して終了する[m
[31m-        PrintWriter out = response.getWriter();[m
[31m-        out.print("NORMAL END");[m
[31m-        out.close();[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/projects/cdi_transactional/src/main/java/dev/cline/apricot/jta/transactional/QuxBean.java b/projects/cdi_transactional/src/main/java/dev/cline/apricot/jta/transactional/QuxBean.java[m
[1mdeleted file mode 100644[m
[1mindex a201c12..0000000[m
[1m--- a/projects/cdi_transactional/src/main/java/dev/cline/apricot/jta/transactional/QuxBean.java[m
[1m+++ /dev/null[m
[36m@@ -1,64 +0,0 @@[m
[31m-package dev.cline.apricot.jta.transactional;[m
[31m-[m
[31m-import java.sql.Connection;[m
[31m-import java.sql.PreparedStatement;[m
[31m-import java.sql.SQLException;[m
[31m-[m
[31m-import javax.sql.DataSource;[m
[31m-[m
[31m-import jakarta.annotation.Resource;[m
[31m-import jakarta.enterprise.context.Dependent;[m
[31m-import jakarta.transaction.Transactional;[m
[31m-import jakarta.transaction.Transactional.TxType;[m
[31m-[m
[31m-@Dependent[m
[31m-@Transactional(TxType.REQUIRED)[m
[31m-public class QuxBean {[m
[31m-[m
[31m-    // インジェクションポイント[m
[31m-    @Resource(lookup = "jdbc/H2DS")[m
[31m-    private DataSource ds;[m
[31m-[m
[31m-    // 引数なしのコンストラクタ[m
[31m-    public QuxBean() {[m
[31m-    }[m
[31m-[m
[31m-    // コンストラクタ[m
[31m-    public QuxBean(DataSource ds) {[m
[31m-        this.ds = ds;[m
[31m-    }[m
[31m-[m
[31m-    // ビジネスメソッド[m
[31m-    public void doBusiness(int param) {[m
[31m-        System.out.println("[ QuxBean#doBusiness ] Start");[m
[31m-        Connection conn = null;[m
[31m-        try {[m
[31m-            // OPERATIONテーブルの、主キーが"Qux"のローを更新する[m
[31m-            conn = ds.getConnection();[m
[31m-            PreparedStatement pstmt = conn.prepareStatement([m
[31m-                    "UPDATE BUSINESS SET COUNT = COUNT + ? " +[m
[31m-                    "WHERE NAME = 'Qux'");[m
[31m-            pstmt.setInt(1, param);[m
[31m-            pstmt.executeUpdate();[m
[31m-[m
[31m-            // 引数が0未満の場合は、例外をスローする[m
[31m-            if (param < 0) {[m
[31m-                throw new RuntimeException("param is invalid");[m
[31m-            }[m
[31m-[m
[31m-        } catch (SQLException sqle) {[m
[31m-            throw new RuntimeException(sqle);[m
[31m-        } finally {[m
[31m-            // コネクションをクローズする[m
[31m-            try {[m
[31m-                if (conn != null) {[m
[31m-                    conn.close();[m
[31m-                }[m
[31m-            } catch (SQLException sqle) {[m
[31m-                throw new RuntimeException(sqle);[m
[31m-            }[m
[31m-        }[m
[31m-[m
[31m-        System.out.println("[ QuxBean#doBusiness ] End");[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/projects/cdi_transactional/src/main/resources/.gitkeep b/projects/cdi_transactional/src/main/resources/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/cdi_transactional/src/main/webapp/.gitkeep b/projects/cdi_transactional/src/main/webapp/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/cdi_transactional/src/main/webapp/TxPage.html b/projects/cdi_transactional/src/main/webapp/TxPage.html[m
[1mdeleted file mode 100644[m
[1mindex 87ba2fd..0000000[m
[1m--- a/projects/cdi_transactional/src/main/webapp/TxPage.html[m
[1m+++ /dev/null[m
[36m@@ -1,14 +0,0 @@[m
[31m-<html lang="ja">[m
[31m-<head>[m
[31m-<title>TxPage</title>[m
[31m-<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">[m
[31m-</head>[m
[31m-<body>[m
[31m-<h2>TxPage</h2>[m
[31m-<hr />[m
[31m-<form action="/jta_transactional/FugaServlet" method="POST">[m
[31m-  PARAMETER<input type="text" name="param" /><br />[m
[31m-  <input type="submit" value="SEND" />[m
[31m-</form>[m
[31m-</body>[m
[31m-</html>[m
\ No newline at end of file[m
[1mdiff --git a/projects/cdi_transactional/src/main/webapp/WEB-INF/.gitkeep b/projects/cdi_transactional/src/main/webapp/WEB-INF/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/cdi_transactional/src/main/webapp/WEB-INF/META-INF/.gitignore b/projects/cdi_transactional/src/main/webapp/WEB-INF/META-INF/.gitignore[m
[1mdeleted file mode 100644[m
[1mindex c548067..0000000[m
[1m--- a/projects/cdi_transactional/src/main/webapp/WEB-INF/META-INF/.gitignore[m
[1m+++ /dev/null[m
[36m@@ -1 +0,0 @@[m
[31m-/persistence.xml[m
[1mdiff --git a/projects/cdi_transactional/src/main/webapp/WEB-INF/beans.xml b/projects/cdi_transactional/src/main/webapp/WEB-INF/beans.xml[m
[1mdeleted file mode 100644[m
[1mindex 0fc6e30..0000000[m
[1m--- a/projects/cdi_transactional/src/main/webapp/WEB-INF/beans.xml[m
[1m+++ /dev/null[m
[36m@@ -1,6 +0,0 @@[m
[31m-<beans xmlns="http://xmlns.jcp.org/xml/ns/javaee"[m
[31m-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"[m
[31m-       xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee[m
[31m-       http://xmlns.jcp.org/xml/ns/javaee/beans_2_0.xsd"[m
[31m-       bean-discovery-mode="all" version="2.0">[m
[31m-</beans>[m
\ No newline at end of file[m
[1mdiff --git a/projects/cdi_transactional/src/main/webapp/WEB-INF/web.xml b/projects/cdi_transactional/src/main/webapp/WEB-INF/web.xml[m
[1mdeleted file mode 100644[m
[1mindex b7a659c..0000000[m
[1m--- a/projects/cdi_transactional/src/main/webapp/WEB-INF/web.xml[m
[1m+++ /dev/null[m
[36m@@ -1,7 +0,0 @@[m
[31m-<?xml version="1.0" encoding="UTF-8"?>[m
[31m-<web-app xmlns="https://jakarta.ee/xml/ns/jakartaee"[m
[31m-         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"[m
[31m-         xsi:schemaLocation="https://jakarta.ee/xml/ns/jakartaee[m
[31m-         https://jakarta.ee/xml/ns/jakartaee/web-app_5_0.xsd"[m
[31m-         version="5.0">[m
[31m-</web-app>[m
\ No newline at end of file[m
[1mdiff --git a/projects/cdi_transactional/src/test/java/.gitkeep b/projects/cdi_transactional/src/test/java/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/cdi_transactional/src/test/resources/.gitkeep b/projects/cdi_transactional/src/test/resources/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/corebank_jee_rest/.gitkeep b/projects/corebank_jee_rest/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/corebank_jee_soap/.gitkeep b/projects/corebank_jee_soap/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/direct_api_jee/.gitkeep b/projects/direct_api_jee/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/direct_frontend_react/.gitkeep b/projects/direct_frontend_react/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/jsf_ajax/.gitignore b/projects/jsf_ajax/.gitignore[m
[1mdeleted file mode 100644[m
[1mindex 6f1d2c2..0000000[m
[1m--- a/projects/jsf_ajax/.gitignore[m
[1m+++ /dev/null[m
[36m@@ -1,5 +0,0 @@[m
[31m-/classes[m
[31m-/bin[m
[31m-/build[m
[31m-/target[m
[31m-/.gradle[m
[1mdiff --git a/projects/jsf_ajax/README.md b/projects/jsf_ajax/README.md[m
[1mdeleted file mode 100644[m
[1mindex 673af07..0000000[m
[1m--- a/projects/jsf_ajax/README.md[m
[1m+++ /dev/null[m
[36m@@ -1,92 +0,0 @@[m
[31m-# jsf_ajax プロジェクト[m
[31m-[m
[31m-## 📖 概要[m
[31m-[m
[31m-JSFのAjax機能を使用した非同期通信のサンプルです。[m
[31m-ページ全体をリロードせずに、部分的な更新を実現する方法を学習できます。[m
[31m-[m
[31m-## 🚀 アプリケーションの開発フローとデプロイ方法[m
[31m-[m
[31m-### 前提条件[m
[31m-[m
[31m-- JDK 21以上[m
[31m-- Gradle 8.x以上[m
[31m-- Payara Server 6（プロジェクトルートの`payara6/`に配置）[m
[31m-[m
[31m-### 1. Payara Serverの起動（研修1回について初回だけ）[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew startPayara[m
[31m-```[m
[31m-[m
[31m-### 2. WARファイルのビルド（アプリケーション作成・更新のたびに実施）[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew :projects:jsf_ajax:war[m
[31m-```[m
[31m-[m
[31m-### 3. アプリケーションのデプロイ（アプリケーション作成・更新のたびに実施）[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew :projects:jsf_ajax:deploy[m
[31m-```[m
[31m-[m
[31m-## 📍 アクセスURL[m
[31m-[m
[31m-デプロイ後、以下のURLにアクセス：[m
[31m-[m
[31m-- **Ajax デモ**: http://localhost:8080/jsf_ajax/faces/index.xhtml[m
[31m-[m
[31m-## 🎯 プロジェクト構成[m
[31m-[m
[31m-```[m
[31m-projects/jsf_ajax/[m
[31m-├── src/[m
[31m-│   ├── main/[m
[31m-│   │   ├── java/[m
[31m-│   │   │   └── bean/              # マネージドBean[m
[31m-│   │   └── webapp/[m
[31m-│   │       ├── *.xhtml[m
[31m-│   │       └── WEB-INF/[m
[31m-│   │           ├── web.xml[m
[31m-│   │           └── beans.xml[m
[31m-│   └── test/[m
[31m-└── build/[m
[31m-    └── libs/[m
[31m-        └── jsf_ajax.war[m
[31m-```[m
[31m-[m
[31m-## 🔧 使用している技術[m
[31m-[m
[31m-- **Jakarta EE 10**[m
[31m-- **Payara Server 6**[m
[31m-- **Jakarta Faces (JSF) 4.0**[m
[31m-- **JSF Ajax (f:ajax)**[m
[31m-[m
[31m-## 🛑 アプリケーションを停止する[m
[31m-[m
[31m-### アプリケーションのアンデプロイ[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew :projects:jsf_ajax:undeploy[m
[31m-```[m
[31m-[m
[31m-### Payara Server全体を停止[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew stopPayara[m
[31m-```[m
[31m-[m
[31m-## 🔍 ログ監視[m
[31m-[m
[31m-別のターミナルでログをリアルタイム監視：[m
[31m-[m
[31m-**Windows (PowerShell):**[m
[31m-```powershell[m
[31m-Get-Content -Path payara6\glassfish\domains\domain1\logs\server.log -Wait -Tail 50 -Encoding UTF8[m
[31m-```[m
[31m-[m
[31m-**Linux/Mac:**[m
[31m-```bash[m
[31m-tail -f -n 50 payara6/glassfish/domains/domain1/logs/server.log[m
[31m-```[m
[1mdiff --git a/projects/jsf_ajax/src/main/java/.gitkeep b/projects/jsf_ajax/src/main/java/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/jsf_ajax/src/main/java/dev/cline/apricot/jsf/ajax/SportsBean.java b/projects/jsf_ajax/src/main/java/dev/cline/apricot/jsf/ajax/SportsBean.java[m
[1mdeleted file mode 100644[m
[1mindex 381a56f..0000000[m
[1m--- a/projects/jsf_ajax/src/main/java/dev/cline/apricot/jsf/ajax/SportsBean.java[m
[1m+++ /dev/null[m
[36m@@ -1,72 +0,0 @@[m
[31m-package dev.cline.apricot.jsf.ajax;[m
[31m-[m
[31m-import java.io.Serializable;[m
[31m-import java.util.LinkedHashMap;[m
[31m-import java.util.Map;[m
[31m-import jakarta.faces.view.ViewScoped;[m
[31m-import jakarta.inject.Named;[m
[31m-[m
[31m-@ViewScoped[m
[31m-@Named("sportsBean")[m
[31m-public class SportsBean implements Serializable {[m
[31m-    // 選択値を保持するためのプロパティ（フィールドとアクセサ）[m
[31m-    private String sports;[m
[31m-    private String position;[m
[31m-[m
[31m-    public String getSports() {[m
[31m-        return sports;[m
[31m-    }[m
[31m-[m
[31m-    public void setSports(String sports) {[m
[31m-        this.sports = sports;[m
[31m-        // スポーツを選択したら、ポジションはクリアする[m
[31m-        this.position = null;[m
[31m-    }[m
[31m-[m
[31m-    public String getPosition() {[m
[31m-        return position;[m
[31m-    }[m
[31m-[m
[31m-    public void setPosition(String position) {[m
[31m-        this.position = position;[m
[31m-    }[m
[31m-[m
[31m-    // スポーツのセレクトメニューのためのプロパティ（フィールドとアクセサ）[m
[31m-    private Map<String, String> sportsMap = new LinkedHashMap<String, String>();[m
[31m-    private Map<String, String> positionMap = new LinkedHashMap<String, String>();[m
[31m-    public Map<String, String> getSportsMap() {[m
[31m-        if (sportsMap.isEmpty()) {[m
[31m-            sportsMap.put("== 選択して下さい ==", "");[m
[31m-            sportsMap.put("野球", "野球");[m
[31m-            sportsMap.put("サッカー", "サッカー");[m
[31m-        }[m
[31m-        return sportsMap;[m
[31m-    }[m
[31m-[m
[31m-    public void setSportsMap(Map<String, String> sportsMap) {[m
[31m-        this.sportsMap = sportsMap;[m
[31m-    }[m
[31m-[m
[31m-    public Map<String, String> getPositionMap() {[m
[31m-        if (sports == null) return null;[m
[31m-        positionMap.clear();[m
[31m-        if (sports.equals("野球")) {[m
[31m-            positionMap.put("== 選択して下さい ==", "");[m
[31m-            positionMap.put("ピッチャー", "ピッチャー");[m
[31m-            positionMap.put("キャッチャー", "キャッチャー");[m
[31m-            positionMap.put("内野手", "内野手");[m
[31m-            positionMap.put("外野手", "外野手");[m
[31m-        } else if (sports.equals("サッカー")) {[m
[31m-            positionMap.put("== 選択して下さい ==", "");[m
[31m-            positionMap.put("フォワード", "フォワード");[m
[31m-            positionMap.put("ミッドフィールダー", "ミッドフィールダー");[m
[31m-            positionMap.put("ディフェンダー", "ディフェンダー");[m
[31m-            positionMap.put("ゴールキーパー", "ゴールキーパー");[m
[31m-        }[m
[31m-        return positionMap;[m
[31m-    }[m
[31m-[m
[31m-    public void setPositionMap(Map<String, String> positionMap) {[m
[31m-        this.positionMap = positionMap;[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/projects/jsf_ajax/src/main/resources/.gitkeep b/projects/jsf_ajax/src/main/resources/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/jsf_ajax/src/main/resources/persons.csv b/projects/jsf_ajax/src/main/resources/persons.csv[m
[1mdeleted file mode 100644[m
[1mindex de13f89..0000000[m
[1m--- a/projects/jsf_ajax/src/main/resources/persons.csv[m
[1m+++ /dev/null[m
[36m@@ -1,3 +0,0 @@[m
[31m-1,Alice,35,female[m
[31m-2,Bob,20,male[m
[31m-3,Carol,30,female[m
[1mdiff --git a/projects/jsf_ajax/src/main/webapp/.gitkeep b/projects/jsf_ajax/src/main/webapp/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/jsf_ajax/src/main/webapp/SportsPage.xhtml b/projects/jsf_ajax/src/main/webapp/SportsPage.xhtml[m
[1mdeleted file mode 100644[m
[1mindex c6c0957..0000000[m
[1m--- a/projects/jsf_ajax/src/main/webapp/SportsPage.xhtml[m
[1m+++ /dev/null[m
[36m@@ -1,34 +0,0 @@[m
[31m-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja"[m
[31m-      xmlns:f="http://java.sun.com/jsf/core"[m
[31m-      xmlns:h="http://java.sun.com/jsf/html"[m
[31m-      xmlns:ui="http://java.sun.com/jsf/facelets">[m
[31m-<h:head>[m
[31m-<title>SportsPage</title>[m
[31m-<meta http-equiv="content-type" content="text/html; charset=UTF-8" />[m
[31m-</h:head>[m
[31m-<h:body>[m
[31m-  <h2>SportsPage</h2>[m
[31m-  <hr />[m
[31m-  <h:form id="form1">[m
[31m-    <h:panelGrid columns="2">[m
[31m-      <h:outputText value="あなたがしているスポーツ" />[m
[31m-      <h:selectOneMenu id="sports" value="#{sportsBean.sports}">[m
[31m-        <f:selectItems value="#{sportsBean.sportsMap}" />[m
[31m-        <f:ajax event="change" render="position result" />[m
[31m-      </h:selectOneMenu>[m
[31m-      <h:outputText value="あなたのポジション" />[m
[31m-      <h:selectOneMenu id="position" value="#{sportsBean.position}">[m
[31m-        <f:selectItems value="#{sportsBean.positionMap}" />[m
[31m-        <f:ajax event="change" render="result" />[m
[31m-      </h:selectOneMenu>[m
[31m-    </h:panelGrid>[m
[31m-    <hr />[m
[31m-    <h:panelGrid id="result" columns="2">[m
[31m-      <h:outputText value="選択したスポーツ" />[m
[31m-      <h:outputText value="#{sportsBean.sports}" />[m
[31m-      <h:outputText value="選択したポジション" />[m
[31m-      <h:outputText value="#{sportsBean.position}" />[m
[31m-    </h:panelGrid>[m
[31m-  </h:form>[m
[31m-</h:body>[m
[31m-</html>[m
\ No newline at end of file[m
[1mdiff --git a/projects/jsf_ajax/src/main/webapp/WEB-INF/.gitkeep b/projects/jsf_ajax/src/main/webapp/WEB-INF/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/jsf_ajax/src/main/webapp/WEB-INF/beans.xml b/projects/jsf_ajax/src/main/webapp/WEB-INF/beans.xml[m
[1mdeleted file mode 100644[m
[1mindex 0fc6e30..0000000[m
[1m--- a/projects/jsf_ajax/src/main/webapp/WEB-INF/beans.xml[m
[1m+++ /dev/null[m
[36m@@ -1,6 +0,0 @@[m
[31m-<beans xmlns="http://xmlns.jcp.org/xml/ns/javaee"[m
[31m-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"[m
[31m-       xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee[m
[31m-       http://xmlns.jcp.org/xml/ns/javaee/beans_2_0.xsd"[m
[31m-       bean-discovery-mode="all" version="2.0">[m
[31m-</beans>[m
\ No newline at end of file[m
[1mdiff --git a/projects/jsf_ajax/src/main/webapp/WEB-INF/web.xml b/projects/jsf_ajax/src/main/webapp/WEB-INF/web.xml[m
[1mdeleted file mode 100644[m
[1mindex 76462f2..0000000[m
[1m--- a/projects/jsf_ajax/src/main/webapp/WEB-INF/web.xml[m
[1m+++ /dev/null[m
[36m@@ -1,48 +0,0 @@[m
[31m-<?xml version="1.0" encoding="UTF-8"?>[m
[31m-<web-app xmlns="https://jakarta.ee/xml/ns/jakartaee"[m
[31m-         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"[m
[31m-         xsi:schemaLocation="https://jakarta.ee/xml/ns/jakartaee[m
[31m-         https://jakarta.ee/xml/ns/jakartaee/web-app_5_0.xsd"[m
[31m-         version="5.0">[m
[31m-[m
[31m-  <!-- ========== Context Param ================================= -->[m
[31m-  <!-- Select JSF State Saving Mode -->[m
[31m-  <context-param>[m
[31m-    <param-name>jakarta.faces.STATE_SAVING_METHOD</param-name>[m
[31m-    <param-value>server</param-value>[m
[31m-  </context-param>[m
[31m-[m
[31m-  <!-- For Facelets Comment Skip -->[m
[31m-  <context-param>[m
[31m-    <param-name>jakarta.faces.FACELETS_SKIP_COMMENTS</param-name>[m
[31m-    <param-value>true</param-value>[m
[31m-  </context-param>[m
[31m-[m
[31m-  <!-- For Empty String Validation -->[m
[31m-  <context-param>[m
[31m-    <param-name>jakarta.faces.INTERPRET_EMPTY_STRING_SUBMITTED_VALUES_AS_NULL[m
[31m-    </param-name>[m
[31m-    <param-value>true</param-value>[m
[31m-  </context-param>[m
[31m-[m
[31m-  <!-- For Using System Timezone -->[m
[31m-  <context-param>[m
[31m-    <param-name>jakarta.faces.DATETIMECONVERTER_DEFAULT_TIMEZONE_IS_SYSTEM_TIMEZONE[m
[31m-    </param-name>[m
[31m-    <param-value>true</param-value>[m
[31m-  </context-param>[m
[31m-[m
[31m-  <!-- ========== Servlet ======================================= -->[m
[31m-  <servlet>[m
[31m-    <servlet-name>Faces Servlet</servlet-name>[m
[31m-    <servlet-class>jakarta.faces.webapp.FacesServlet</servlet-class>[m
[31m-    <load-on-startup>1</load-on-startup>[m
[31m-  </servlet>[m
[31m-[m
[31m-  <!-- ========== Servlet Mapping =============================== -->[m
[31m-  <servlet-mapping>[m
[31m-    <servlet-name>Faces Servlet</servlet-name>[m
[31m-    <url-pattern>/faces/*</url-pattern>[m
[31m-  </servlet-mapping>[m
[31m-[m
[31m-</web-app>[m
\ No newline at end of file[m
[1mdiff --git a/projects/jsf_ajax/src/test/java/.gitkeep b/projects/jsf_ajax/src/test/java/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/jsf_ajax/src/test/resources/.gitkeep b/projects/jsf_ajax/src/test/resources/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/jsf_person/.gitignore b/projects/jsf_person/.gitignore[m
[1mdeleted file mode 100644[m
[1mindex 6f1d2c2..0000000[m
[1m--- a/projects/jsf_person/.gitignore[m
[1m+++ /dev/null[m
[36m@@ -1,5 +0,0 @@[m
[31m-/classes[m
[31m-/bin[m
[31m-/build[m
[31m-/target[m
[31m-/.gradle[m
[1mdiff --git a/projects/jsf_person/README.md b/projects/jsf_person/README.md[m
[1mdeleted file mode 100644[m
[1mindex f59c129..0000000[m
[1m--- a/projects/jsf_person/README.md[m
[1m+++ /dev/null[m
[36m@@ -1,95 +0,0 @@[m
[31m-# jsf_person プロジェクト[m
[31m-[m
[31m-## 📖 概要[m
[31m-[m
[31m-JavaServer Faces (JSF)の基本的な使い方を学ぶサンプルプロジェクトです。[m
[31m-マネージドBean、Facelets、コンポーネントベースのWeb開発を学習できます。[m
[31m-[m
[31m-## 🚀 アプリケーションの開発フローとデプロイ方法[m
[31m-[m
[31m-### 前提条件[m
[31m-[m
[31m-- JDK 21以上[m
[31m-- Gradle 8.x以上[m
[31m-- Payara Server 6（プロジェクトルートの`payara6/`に配置）[m
[31m-[m
[31m-### 1. Payara Serverの起動（研修1回について初回だけ）[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew startPayara[m
[31m-```[m
[31m-[m
[31m-### 2. WARファイルのビルド（アプリケーション作成・更新のたびに実施）[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew :projects:jsf_person:war[m
[31m-```[m
[31m-[m
[31m-### 3. アプリケーションのデプロイ（アプリケーション作成・更新のたびに実施）[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew :projects:jsf_person:deploy[m
[31m-```[m
[31m-[m
[31m-## 📍 アクセスURL[m
[31m-[m
[31m-デプロイ後、以下のURLにアクセス：[m
[31m-[m
[31m-- **Person入力画面**: http://localhost:8080/jsf_person/faces/PersonInputPage.xhtml[m
[31m-[m
[31m-## 🎯 プロジェクト構成[m
[31m-[m
[31m-```[m
[31m-projects/jsf_person/[m
[31m-├── src/[m
[31m-│   ├── main/[m
[31m-│   │   ├── java/[m
[31m-│   │   │   └── bean/[m
[31m-│   │   │       └── PersonBean.java    # マネージドBean[m
[31m-│   │   └── webapp/[m
[31m-│   │       ├── *.xhtml                 # Faceletsページ[m
[31m-│   │       └── WEB-INF/[m
[31m-│   │           ├── web.xml[m
[31m-│   │           ├── beans.xml           # CDI設定[m
[31m-│   │           └── faces-config.xml    # JSF設定[m
[31m-│   └── test/[m
[31m-└── build/[m
[31m-    └── libs/[m
[31m-        └── jsf_person.war[m
[31m-```[m
[31m-[m
[31m-## 🔧 使用している技術[m
[31m-[m
[31m-- **Jakarta EE 10**[m
[31m-- **Payara Server 6**[m
[31m-- **Jakarta Faces (JSF) 4.0**[m
[31m-- **Jakarta CDI 4.0**[m
[31m-- **Facelets**[m
[31m-[m
[31m-## 🛑 アプリケーションを停止する[m
[31m-[m
[31m-### アプリケーションのアンデプロイ[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew :projects:jsf_person:undeploy[m
[31m-```[m
[31m-[m
[31m-### Payara Server全体を停止[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew stopPayara[m
[31m-```[m
[31m-[m
[31m-## 🔍 ログ監視[m
[31m-[m
[31m-別のターミナルでログをリアルタイム監視：[m
[31m-[m
[31m-**Windows (PowerShell):**[m
[31m-```powershell[m
[31m-Get-Content -Path payara6\glassfish\domains\domain1\logs\server.log -Wait -Tail 50 -Encoding UTF8[m
[31m-```[m
[31m-[m
[31m-**Linux/Mac:**[m
[31m-```bash[m
[31m-tail -f -n 50 payara6/glassfish/domains/domain1/logs/server.log[m
[31m-```[m
[1mdiff --git a/projects/jsf_person/src/main/java/.gitkeep b/projects/jsf_person/src/main/java/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/jsf_person/src/main/java/dev/cline/apricot/jsf/person/.LCKPerson.java~ b/projects/jsf_person/src/main/java/dev/cline/apricot/jsf/person/.LCKPerson.java~[m
[1mdeleted file mode 100644[m
[1mindex 00b5479..0000000[m
[1m--- a/projects/jsf_person/src/main/java/dev/cline/apricot/jsf/person/.LCKPerson.java~[m
[1m+++ /dev/null[m
[36m@@ -1 +0,0 @@[m
[31m-D:\GitHubRepos\cline_training_2025\cline_training_answer\projects\jsf_person\src\main\java\jp\mufg\it\ee\jsf\person\Person.java[m
\ No newline at end of file[m
[1mdiff --git a/projects/jsf_person/src/main/java/dev/cline/apricot/jsf/person/.LCKPersonInputBean.java~ b/projects/jsf_person/src/main/java/dev/cline/apricot/jsf/person/.LCKPersonInputBean.java~[m
[1mdeleted file mode 100644[m
[1mindex b8b02fc..0000000[m
[1m--- a/projects/jsf_person/src/main/java/dev/cline/apricot/jsf/person/.LCKPersonInputBean.java~[m
[1m+++ /dev/null[m
[36m@@ -1 +0,0 @@[m
[31m-D:\GitHubRepos\cline_training_2025\cline_training_answer\projects\jsf_person\src\main\java\jp\mufg\it\ee\jsf\person\PersonInputBean.java[m
\ No newline at end of file[m
[1mdiff --git a/projects/jsf_person/src/main/java/dev/cline/apricot/jsf/person/.LCKPersonUpdateBean.java~ b/projects/jsf_person/src/main/java/dev/cline/apricot/jsf/person/.LCKPersonUpdateBean.java~[m
[1mdeleted file mode 100644[m
[1mindex d3220a5..0000000[m
[1m--- a/projects/jsf_person/src/main/java/dev/cline/apricot/jsf/person/.LCKPersonUpdateBean.java~[m
[1m+++ /dev/null[m
[36m@@ -1 +0,0 @@[m
[31m-D:\GitHubRepos\cline_training_2025\cline_training_answer\projects\jsf_person\src\main\java\jp\mufg\it\ee\jsf\person\PersonUpdateBean.java[m
\ No newline at end of file[m
[1mdiff --git a/projects/jsf_person/src/main/java/dev/cline/apricot/jsf/person/Person.java b/projects/jsf_person/src/main/java/dev/cline/apricot/jsf/person/Person.java[m
[1mdeleted file mode 100644[m
[1mindex 1d27648..0000000[m
[1m--- a/projects/jsf_person/src/main/java/dev/cline/apricot/jsf/person/Person.java[m
[1m+++ /dev/null[m
[36m@@ -1,72 +0,0 @@[m
[31m-package dev.cline.apricot.jsf.person;[m
[31m-[m
[31m-public class Person {[m
[31m-    // IDフィールド[m
[31m-    private Integer personId;[m
[31m-    // 名前フィールド[m
[31m-    private String personName;[m
[31m-    // 年齢フィールド[m
[31m-    private Integer age;[m
[31m-    // 性別フィールド[m
[31m-    private String gender;[m
[31m-[m
[31m-    // コンストラクタ[m
[31m-    public Person() {[m
[31m-    };[m
[31m-[m
[31m-    public Person(Integer personId, String personName, Integer age,[m
[31m-            String gender) {[m
[31m-        this.personId = personId;[m
[31m-        this.personName = personName;[m
[31m-        this.age = age;[m
[31m-        this.gender = gender;[m
[31m-    }[m
[31m-[m
[31m-    public Person(String personName, Integer age, String gender) {[m
[31m-        this.personName = personName;[m
[31m-        this.age = age;[m
[31m-        this.gender = gender;[m
[31m-    }[m
[31m-[m
[31m-    // IDへのアクセサメソッド[m
[31m-    public Integer getPersonId() {[m
[31m-        return personId;[m
[31m-    }[m
[31m-[m
[31m-    public void setPersonId(Integer personId) {[m
[31m-        this.personId = personId;[m
[31m-    }[m
[31m-[m
[31m-    // 名前へのアクセサメソッド[m
[31m-    public String getPersonName() {[m
[31m-        return personName;[m
[31m-    }[m
[31m-[m
[31m-    public void setPersonName(String personName) {[m
[31m-        this.personName = personName;[m
[31m-    }[m
[31m-[m
[31m-    // 性別へのアクセサメソッド[m
[31m-    public String getGender() {[m
[31m-        return gender;[m
[31m-    }[m
[31m-[m
[31m-    public void setGender(String gender) {[m
[31m-        this.gender = gender;[m
[31m-    }[m
[31m-[m
[31m-    // 年齢へのアクセサメソッド[m
[31m-    public Integer getAge() {[m
[31m-        return age;[m
[31m-    }[m
[31m-[m
[31m-    public void setAge(Integer age) {[m
[31m-        this.age = age;[m
[31m-    }[m
[31m-[m
[31m-    @Override[m
[31m-    public String toString() {[m
[31m-        return "Person [personId=" + personId + ", personName=" + personName[m
[31m-                + ", age=" + age + ", gender=" + gender + "]";[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/projects/jsf_person/src/main/java/dev/cline/apricot/jsf/person/PersonInputBean.java b/projects/jsf_person/src/main/java/dev/cline/apricot/jsf/person/PersonInputBean.java[m
[1mdeleted file mode 100644[m
[1mindex d3d8c27..0000000[m
[1m--- a/projects/jsf_person/src/main/java/dev/cline/apricot/jsf/person/PersonInputBean.java[m
[1m+++ /dev/null[m
[36m@@ -1,48 +0,0 @@[m
[31m-package dev.cline.apricot.jsf.person;[m
[31m-[m
[31m-import java.io.Serializable;[m
[31m-[m
[31m-import jakarta.annotation.PostConstruct;[m
[31m-import jakarta.faces.context.FacesContext;[m
[31m-import jakarta.faces.context.Flash;[m
[31m-import jakarta.faces.view.ViewScoped;[m
[31m-import jakarta.inject.Named;[m
[31m-[m
[31m-@ViewScoped[m
[31m-@Named("personInput")[m
[31m-public class PersonInputBean implements Serializable {[m
[31m-    // UIコンポーネントの値を保持するためのプロパティ[m
[31m-    private Person person;[m
[31m-[m
[31m-    public Person getPerson() {[m
[31m-        if (person == null) {[m
[31m-            person = new Person();[m
[31m-        }[m
[31m-        return person;[m
[31m-    }[m
[31m-[m
[31m-    public void setPerson(Person person) {[m
[31m-        this.person = person;[m
[31m-    }[m
[31m-[m
[31m-    // フラッシュスコープ[m
[31m-    private Flash flash;[m
[31m-[m
[31m-    // ライフサイクルメソッド[m
[31m-    @PostConstruct[m
[31m-    public void postConstruct() {[m
[31m-        System.out.println("[ PersonInput#postConstruct ]");[m
[31m-        FacesContext facesContext = FacesContext.getCurrentInstance();[m
[31m-        flash = facesContext.getExternalContext().getFlash();[m
[31m-        person = (Person)flash.get("person");[m
[31m-        if (person == null) {[m
[31m-            person = new Person();[m
[31m-        }[m
[31m-    }[m
[31m-[m
[31m-    // アクションメソッド（「確認画面」に遷移する）[m
[31m-    public String confirm() {[m
[31m-        flash.put("person", person);[m
[31m-        return "PersonUpdatePage";[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/projects/jsf_person/src/main/java/dev/cline/apricot/jsf/person/PersonService.java b/projects/jsf_person/src/main/java/dev/cline/apricot/jsf/person/PersonService.java[m
[1mdeleted file mode 100644[m
[1mindex 5071979..0000000[m
[1m--- a/projects/jsf_person/src/main/java/dev/cline/apricot/jsf/person/PersonService.java[m
[1m+++ /dev/null[m
[36m@@ -1,95 +0,0 @@[m
[31m-package dev.cline.apricot.jsf.person;[m
[31m-[m
[31m-import java.io.BufferedReader;[m
[31m-import java.io.IOException;[m
[31m-import java.io.InputStream;[m
[31m-import java.io.InputStreamReader;[m
[31m-import java.io.Serializable;[m
[31m-import java.util.List;[m
[31m-import java.util.StringTokenizer;[m
[31m-import java.util.concurrent.CopyOnWriteArrayList;[m
[31m-[m
[31m-import jakarta.annotation.PostConstruct;[m
[31m-import jakarta.enterprise.context.ApplicationScoped;[m
[31m-[m
[31m-@ApplicationScoped[m
[31m-public class PersonService implements Serializable {[m
[31m-    private List<Person> personList = new CopyOnWriteArrayList<Person>();[m
[31m-[m
[31m-    @PostConstruct[m
[31m-    public void init() {[m
[31m-        ClassLoader classLoader = Thread.currentThread().getContextClassLoader();[m
[31m-        InputStream is = classLoader.getResourceAsStream("persons.csv");[m
[31m-        BufferedReader br = null;[m
[31m-        try {[m
[31m-            br = new BufferedReader(new InputStreamReader(is, "UTF-8"));[m
[31m-            String line;[m
[31m-            while ((line = br.readLine()) != null) {[m
[31m-                Person person = createPersonFromLine(line);[m
[31m-                personList.add(person);[m
[31m-            }[m
[31m-        } catch(IOException ioe) {[m
[31m-            throw new RuntimeException(ioe);[m
[31m-        } finally {[m
[31m-            try {[m
[31m-                if (br != null) {[m
[31m-                    br.close();[m
[31m-                }[m
[31m-            } catch(IOException ioe) {[m
[31m-                throw new RuntimeException(ioe);[m
[31m-            }[m
[31m-        }[m
[31m-    }[m
[31m-[m
[31m-    public Person getPerson(Integer personId) {[m
[31m-        for (Person person : personList) {[m
[31m-            if (person.getPersonId().equals(personId)) {[m
[31m-                return person;[m
[31m-            }[m
[31m-        }[m
[31m-        return null;[m
[31m-    }[m
[31m-[m
[31m-    public List<Person> getPersonList() {[m
[31m-        return personList;[m
[31m-    }[m
[31m-[m
[31m-    public void addPerson(Person person) {[m
[31m-        person.setPersonId(getNextPersonId());[m
[31m-        personList.add(person);[m
[31m-    }[m
[31m-[m
[31m-    public void removePerson(Integer personId) {[m
[31m-        for (Person p : personList) {[m
[31m-            if (p.getPersonId().equals(personId)) {[m
[31m-                personList.remove(p);[m
[31m-                return;[m
[31m-            }[m
[31m-        }[m
[31m-    }[m
[31m-[m
[31m-    public void updatePerson(Person person) {[m
[31m-        for (int i = 0; i < personList.size(); i++) {[m
[31m-            if (personList.get(i).getPersonId().equals(person.getPersonId())) {[m
[31m-                personList.remove(i);[m
[31m-                personList.add(i, person);[m
[31m-                return;[m
[31m-            }[m
[31m-        }[m
[31m-        personList.add(person);[m
[31m-    }[m
[31m-[m
[31m-    private Person createPersonFromLine(String line) {[m
[31m-        StringTokenizer st = new StringTokenizer(line, ",");[m
[31m-        Integer personId = Integer.parseInt(st.nextToken());[m
[31m-        String personName = st.nextToken();[m
[31m-        Integer age = Integer.parseInt(st.nextToken());[m
[31m-        String gender = st.nextToken();[m
[31m-        Person person = new Person(personId, personName, age, gender);[m
[31m-        return person;[m
[31m-    }[m
[31m-[m
[31m-    private Integer getNextPersonId() {[m
[31m-        return personList.get(personList.size() - 1).getPersonId() + 1;[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/projects/jsf_person/src/main/java/dev/cline/apricot/jsf/person/PersonTableBean.java b/projects/jsf_person/src/main/java/dev/cline/apricot/jsf/person/PersonTableBean.java[m
[1mdeleted file mode 100644[m
[1mindex 816dc23..0000000[m
[1m--- a/projects/jsf_person/src/main/java/dev/cline/apricot/jsf/person/PersonTableBean.java[m
[1m+++ /dev/null[m
[36m@@ -1,54 +0,0 @@[m
[31m-package dev.cline.apricot.jsf.person;[m
[31m-[m
[31m-import java.io.Serializable;[m
[31m-import java.util.List;[m
[31m-[m
[31m-import jakarta.annotation.PostConstruct;[m
[31m-import jakarta.faces.context.FacesContext;[m
[31m-import jakarta.faces.context.Flash;[m
[31m-import jakarta.faces.view.ViewScoped;[m
[31m-import jakarta.inject.Inject;[m
[31m-import jakarta.inject.Named;[m
[31m-[m
[31m-@ViewScoped[m
[31m-@Named("personTable")[m
[31m-public class PersonTableBean implements Serializable {[m
[31m-    // UIコンポーネントの値を保持するためのプロパティ[m
[31m-    private List<Person> personList;[m
[31m-[m
[31m-    public List<Person> getPersonList() {[m
[31m-        return personList;[m
[31m-    }[m
[31m-[m
[31m-    public void setPersonList(List<Person> personList) {[m
[31m-        this.personList = personList;[m
[31m-    }[m
[31m-[m
[31m-    // フラッシュスコープ[m
[31m-    private Flash flash;[m
[31m-[m
[31m-    // ライフサイクルメソッド[m
[31m-    @PostConstruct[m
[31m-    public void postConstruct() {[m
[31m-        FacesContext facesContext = FacesContext.getCurrentInstance();[m
[31m-        flash = facesContext.getExternalContext().getFlash();[m
[31m-        personList = personService.getPersonList();[m
[31m-    }[m
[31m-[m
[31m-    // インジェクションポイント[m
[31m-    @Inject[m
[31m-    private PersonService personService;[m
[31m-[m
[31m-    // アクションメソッド（人員を削除する）[m
[31m-    public String removePerson(Integer personId) {[m
[31m-        personService.removePerson(personId);[m
[31m-        return "PersonTablePage";[m
[31m-    }[m
[31m-[m
[31m-    // アクションメソッド（人員を編集する）[m
[31m-    public String editPerson(Integer personId) {[m
[31m-        Person person = personService.getPerson(personId);[m
[31m-        flash.put("person", person);[m
[31m-        return "PersonInputPage";[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/projects/jsf_person/src/main/java/dev/cline/apricot/jsf/person/PersonUpdateBean.java b/projects/jsf_person/src/main/java/dev/cline/apricot/jsf/person/PersonUpdateBean.java[m
[1mdeleted file mode 100644[m
[1mindex 1651cc5..0000000[m
[1m--- a/projects/jsf_person/src/main/java/dev/cline/apricot/jsf/person/PersonUpdateBean.java[m
[1m+++ /dev/null[m
[36m@@ -1,57 +0,0 @@[m
[31m-package dev.cline.apricot.jsf.person;[m
[31m-[m
[31m-import java.io.Serializable;[m
[31m-[m
[31m-import jakarta.annotation.PostConstruct;[m
[31m-import jakarta.faces.context.FacesContext;[m
[31m-import jakarta.faces.context.Flash;[m
[31m-import jakarta.faces.view.ViewScoped;[m
[31m-import jakarta.inject.Inject;[m
[31m-import jakarta.inject.Named;[m
[31m-[m
[31m-@ViewScoped[m
[31m-@Named("personUpdate")[m
[31m-public class PersonUpdateBean implements Serializable {[m
[31m-    // UIコンポーネントの値を保持するためのプロパティ[m
[31m-    private Person person;[m
[31m-[m
[31m-    public Person getPerson() {[m
[31m-        return person;[m
[31m-    }[m
[31m-[m
[31m-    public void setPerson(Person person) {[m
[31m-        this.person = person;[m
[31m-    }[m
[31m-[m
[31m-    // インジェクションポイント[m
[31m-    @Inject[m
[31m-    private PersonService personService;[m
[31m-[m
[31m-    // ライフサイクルメソッド[m
[31m-    @PostConstruct[m
[31m-    public void postConstruct() {[m
[31m-        System.out.println("[ PersonUpdateBean#postConstruct ]");[m
[31m-        FacesContext facesContext = FacesContext.getCurrentInstance();[m
[31m-        flash = facesContext.getExternalContext().getFlash();[m
[31m-        person = (Person) flash.get("person");[m
[31m-    }[m
[31m-[m
[31m-    // フラッシュスコープ[m
[31m-    private Flash flash;[m
[31m-[m
[31m-    // アクションメソッド（人員を更新・追加する）[m
[31m-    public String updatePerson() {[m
[31m-        if (person.getPersonId() != null) {[m
[31m-            personService.updatePerson(person);[m
[31m-        } else {[m
[31m-            personService.addPerson(person);[m
[31m-        }[m
[31m-        return "PersonTablePage";[m
[31m-    }[m
[31m-[m
[31m-    // アクションメソッド（「入力画面」に戻る）[m
[31m-    public String back() {[m
[31m-        flash.put("person", person);[m
[31m-        return "PersonInputPage";[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/projects/jsf_person/src/main/resources/.gitkeep b/projects/jsf_person/src/main/resources/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/jsf_person/src/main/resources/persons.csv b/projects/jsf_person/src/main/resources/persons.csv[m
[1mdeleted file mode 100644[m
[1mindex de13f89..0000000[m
[1m--- a/projects/jsf_person/src/main/resources/persons.csv[m
[1m+++ /dev/null[m
[36m@@ -1,3 +0,0 @@[m
[31m-1,Alice,35,female[m
[31m-2,Bob,20,male[m
[31m-3,Carol,30,female[m
[1mdiff --git a/projects/jsf_person/src/main/webapp/.gitkeep b/projects/jsf_person/src/main/webapp/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/jsf_person/src/main/webapp/PersonInputPage.xhtml b/projects/jsf_person/src/main/webapp/PersonInputPage.xhtml[m
[1mdeleted file mode 100644[m
[1mindex cca2f67..0000000[m
[1m--- a/projects/jsf_person/src/main/webapp/PersonInputPage.xhtml[m
[1m+++ /dev/null[m
[36m@@ -1,40 +0,0 @@[m
[31m-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja"[m
[31m-      xmlns:f="http://java.sun.com/jsf/core"[m
[31m-      xmlns:h="http://java.sun.com/jsf/html"[m
[31m-      xmlns:ui="http://java.sun.com/jsf/facelets">[m
[31m-<h:head>[m
[31m-<title>PersonInputPage</title>[m
[31m-<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />[m
[31m-</h:head>[m
[31m-<h:body>[m
[31m-  <h2>PersonInputPage</h2>[m
[31m-  <hr />[m
[31m-  <h:form id="form1">[m
[31m-    <h:outputText value="ID : #{personInput.person.personId}"[m
[31m-      rendered="#{personInput.person.personId != null}" />[m
[31m-    <h:panelGrid border="0" columns="3">[m
[31m-      <h:outputText value="名前" />[m
[31m-      <h:inputText id="personName" value="#{personInput.person.personName}"[m
[31m-        required="true">[m
[31m-        <f:validateLength minimum="1" maximum="15" />[m
[31m-      </h:inputText>[m
[31m-      <h:message for="personName" errorStyle="color: red" />[m
[31m-      <h:outputText value="年齢" />[m
[31m-      <h:inputText id="age" value="#{personInput.person.age}" required="true">[m
[31m-        <f:validateLongRange minimum="20" maximum="100" />[m
[31m-      </h:inputText>[m
[31m-      <h:message for="age" errorStyle="color: red" />[m
[31m-      <h:outputText value="性別" />[m
[31m-      <h:selectOneRadio id="gender" value="#{personInput.person.gender}"[m
[31m-        required="true">[m
[31m-        <f:selectItem itemValue="male" itemLabel="男性" />[m
[31m-        <f:selectItem itemValue="female" itemLabel="女性" />[m
[31m-      </h:selectOneRadio>[m
[31m-      <h:message for="gender" errorStyle="color: red" />[m
[31m-    </h:panelGrid>[m
[31m-    <div>[m
[31m-      <h:commandButton value="確認画面へ" action="#{personInput.confirm}" />[m
[31m-    </div>[m
[31m-  </h:form>[m
[31m-</h:body>[m
[31m-</html>[m
\ No newline at end of file[m
[1mdiff --git a/projects/jsf_person/src/main/webapp/PersonTablePage.xhtml b/projects/jsf_person/src/main/webapp/PersonTablePage.xhtml[m
[1mdeleted file mode 100644[m
[1mindex 6ca7976..0000000[m
[1m--- a/projects/jsf_person/src/main/webapp/PersonTablePage.xhtml[m
[1m+++ /dev/null[m
[36m@@ -1,48 +0,0 @@[m
[31m-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja"[m
[31m-      xmlns:f="http://java.sun.com/jsf/core"[m
[31m-      xmlns:h="http://java.sun.com/jsf/html"[m
[31m-      xmlns:ui="http://java.sun.com/jsf/facelets">[m
[31m-<h:head>[m
[31m-<title>PersonTablePage</title>[m
[31m-<meta http-equiv="content-type" content="text/html; charset=UTF-8" />[m
[31m-</h:head>[m
[31m-<h:body>[m
[31m-  <h2>PersonTablePage</h2>[m
[31m-  <hr />[m
[31m-  <h:form>[m
[31m-    <h:dataTable id="dataTable" value="#{personTable.personList}"[m
[31m-      var="person" border="1">[m
[31m-      <h:column>[m
[31m-        <f:facet name="header">ID</f:facet>[m
[31m-        <h:outputText id="personId" value="#{person.personId}" />[m
[31m-      </h:column>[m
[31m-      <h:column>[m
[31m-        <f:facet name="header">名前</f:facet>[m
[31m-        <h:outputText id="personName" value="#{person.personName}" />[m
[31m-      </h:column>[m
[31m-      <h:column>[m
[31m-        <f:facet name="header">年齢</f:facet>[m
[31m-        <h:outputText id="age" value="#{person.age}" />[m
[31m-      </h:column>[m
[31m-      <h:column>[m
[31m-        <f:facet name="header">性別</f:facet>[m
[31m-        <h:outputText id="gender" value="#{person.gender == null ? '' :[m
[31m-          person.gender == 'male' ? '男性' : '女性'}" />[m
[31m-      </h:column>[m
[31m-      <h:column>[m
[31m-        <f:facet name="header">編集</f:facet>[m
[31m-        <h:commandButton value="編集"[m
[31m-          action="#{personTable.editPerson(person.personId)}" />[m
[31m-      </h:column>[m
[31m-      <h:column>[m
[31m-        <f:facet name="header">削除</f:facet>[m
[31m-        <h:commandButton value="削除"[m
[31m-          action="#{personTable.removePerson(person.personId)}" />[m
[31m-      </h:column>[m
[31m-    </h:dataTable>[m
[31m-    <div>[m
[31m-      <h:commandButton value="作成" action="PersonInputPage" />[m
[31m-    </div>[m
[31m-  </h:form>[m
[31m-</h:body>[m
[31m-</html>[m
\ No newline at end of file[m
[1mdiff --git a/projects/jsf_person/src/main/webapp/PersonUpdatePage.xhtml b/projects/jsf_person/src/main/webapp/PersonUpdatePage.xhtml[m
[1mdeleted file mode 100644[m
[1mindex ed7df92..0000000[m
[1m--- a/projects/jsf_person/src/main/webapp/PersonUpdatePage.xhtml[m
[1m+++ /dev/null[m
[36m@@ -1,30 +0,0 @@[m
[31m-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja"[m
[31m-      xmlns:f="http://java.sun.com/jsf/core"[m
[31m-      xmlns:h="http://java.sun.com/jsf/html"[m
[31m-      xmlns:ui="http://java.sun.com/jsf/facelets">[m
[31m-<h:head>[m
[31m-<title>UpdatePage</title>[m
[31m-<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />[m
[31m-</h:head>[m
[31m-<h:body>[m
[31m-  <h2>UpdatePage</h2>[m
[31m-  <hr />[m
[31m-  <h:form id="form1">[m
[31m-    <h:outputText value="ID : #{personUpdate.person.personId}"[m
[31m-      rendered="#{personUpdate.person.personId != null}" />[m
[31m-    <h:panelGrid columns="2">[m
[31m-      <h:outputText value="名前" />[m
[31m-      <h:outputText value="#{personUpdate.person.personName}" />[m
[31m-      <h:outputText value="年齢" />[m
[31m-      <h:outputText value="#{personUpdate.person.age}" />[m
[31m-      <h:outputText value="性別" />[m
[31m-      <h:outputText value="#{personUpdate.person.gender == null ? '' :[m
[31m-        personUpdate.person.gender == 'male' ? '男性' : '女性'}" />[m
[31m-    </h:panelGrid>[m
[31m-    <div>[m
[31m-      <h:commandButton value="戻る" action="#{personUpdate.back}" />[m
[31m-      <h:commandButton value="更新実行" action="#{personUpdate.updatePerson}" />[m
[31m-    </div>[m
[31m-  </h:form>[m
[31m-</h:body>[m
[31m-</html>[m
\ No newline at end of file[m
[1mdiff --git a/projects/jsf_person/src/main/webapp/WEB-INF/.gitkeep b/projects/jsf_person/src/main/webapp/WEB-INF/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/jsf_person/src/main/webapp/WEB-INF/beans.xml b/projects/jsf_person/src/main/webapp/WEB-INF/beans.xml[m
[1mdeleted file mode 100644[m
[1mindex 0fc6e30..0000000[m
[1m--- a/projects/jsf_person/src/main/webapp/WEB-INF/beans.xml[m
[1m+++ /dev/null[m
[36m@@ -1,6 +0,0 @@[m
[31m-<beans xmlns="http://xmlns.jcp.org/xml/ns/javaee"[m
[31m-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"[m
[31m-       xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee[m
[31m-       http://xmlns.jcp.org/xml/ns/javaee/beans_2_0.xsd"[m
[31m-       bean-discovery-mode="all" version="2.0">[m
[31m-</beans>[m
\ No newline at end of file[m
[1mdiff --git a/projects/jsf_person/src/main/webapp/WEB-INF/web.xml b/projects/jsf_person/src/main/webapp/WEB-INF/web.xml[m
[1mdeleted file mode 100644[m
[1mindex 76462f2..0000000[m
[1m--- a/projects/jsf_person/src/main/webapp/WEB-INF/web.xml[m
[1m+++ /dev/null[m
[36m@@ -1,48 +0,0 @@[m
[31m-<?xml version="1.0" encoding="UTF-8"?>[m
[31m-<web-app xmlns="https://jakarta.ee/xml/ns/jakartaee"[m
[31m-         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"[m
[31m-         xsi:schemaLocation="https://jakarta.ee/xml/ns/jakartaee[m
[31m-         https://jakarta.ee/xml/ns/jakartaee/web-app_5_0.xsd"[m
[31m-         version="5.0">[m
[31m-[m
[31m-  <!-- ========== Context Param ================================= -->[m
[31m-  <!-- Select JSF State Saving Mode -->[m
[31m-  <context-param>[m
[31m-    <param-name>jakarta.faces.STATE_SAVING_METHOD</param-name>[m
[31m-    <param-value>server</param-value>[m
[31m-  </context-param>[m
[31m-[m
[31m-  <!-- For Facelets Comment Skip -->[m
[31m-  <context-param>[m
[31m-    <param-name>jakarta.faces.FACELETS_SKIP_COMMENTS</param-name>[m
[31m-    <param-value>true</param-value>[m
[31m-  </context-param>[m
[31m-[m
[31m-  <!-- For Empty String Validation -->[m
[31m-  <context-param>[m
[31m-    <param-name>jakarta.faces.INTERPRET_EMPTY_STRING_SUBMITTED_VALUES_AS_NULL[m
[31m-    </param-name>[m
[31m-    <param-value>true</param-value>[m
[31m-  </context-param>[m
[31m-[m
[31m-  <!-- For Using System Timezone -->[m
[31m-  <context-param>[m
[31m-    <param-name>jakarta.faces.DATETIMECONVERTER_DEFAULT_TIMEZONE_IS_SYSTEM_TIMEZONE[m
[31m-    </param-name>[m
[31m-    <param-value>true</param-value>[m
[31m-  </context-param>[m
[31m-[m
[31m-  <!-- ========== Servlet ======================================= -->[m
[31m-  <servlet>[m
[31m-    <servlet-name>Faces Servlet</servlet-name>[m
[31m-    <servlet-class>jakarta.faces.webapp.FacesServlet</servlet-class>[m
[31m-    <load-on-startup>1</load-on-startup>[m
[31m-  </servlet>[m
[31m-[m
[31m-  <!-- ========== Servlet Mapping =============================== -->[m
[31m-  <servlet-mapping>[m
[31m-    <servlet-name>Faces Servlet</servlet-name>[m
[31m-    <url-pattern>/faces/*</url-pattern>[m
[31m-  </servlet-mapping>[m
[31m-[m
[31m-</web-app>[m
\ No newline at end of file[m
[1mdiff --git a/projects/jsf_person/src/test/java/.gitkeep b/projects/jsf_person/src/test/java/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/jsf_person/src/test/resources/.gitkeep b/projects/jsf_person/src/test/resources/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/jsf_person_rdb/.gitignore b/projects/jsf_person_rdb/.gitignore[m
[1mdeleted file mode 100644[m
[1mindex 6f1d2c2..0000000[m
[1m--- a/projects/jsf_person_rdb/.gitignore[m
[1m+++ /dev/null[m
[36m@@ -1,5 +0,0 @@[m
[31m-/classes[m
[31m-/bin[m
[31m-/build[m
[31m-/target[m
[31m-/.gradle[m
[1mdiff --git a/projects/jsf_person_rdb/README.md b/projects/jsf_person_rdb/README.md[m
[1mdeleted file mode 100644[m
[1mindex a6e2102..0000000[m
[1m--- a/projects/jsf_person_rdb/README.md[m
[1m+++ /dev/null[m
[36m@@ -1,148 +0,0 @@[m
[31m-﻿# jsf_person_rdb プロジェクト[m
[31m-[m
[31m-## 📖 概要[m
[31m-[m
[31m-JSFとJPA (Java Persistence API) を組み合わせたデータベースCRUD操作のサンプルです。[m
[31m-エンティティ、永続化コンテキスト、トランザクション管理を学習できます。[m
[31m-[m
[31m-## 🚀 アプリケーションの開発フローとデプロイ方法[m
[31m-[m
[31m-### 前提条件[m
[31m-[m
[31m-- JDK 21以上[m
[31m-- Gradle 8.x以上[m
[31m-- Payara Server 6（プロジェクトルートの`payara6/`に配置）[m
[31m-- HSQLDB（プロジェクトルートの`hsqldb/`に配置）[m
[31m-[m
[31m-### 1. HSQLDBサーバーの起動（研修1回について初回だけ）[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew startHsqldb[m
[31m-```[m
[31m-[m
[31m-### 2. 初期データのセットアップ（研修1回について初回だけ）[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew :projects:jsf_person_rdb:setupHsqldb[m
[31m-```[m
[31m-[m
[31m-### 3. Payara Serverの起動（研修1回について初回だけ）[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew startPayara[m
[31m-```[m
[31m-[m
[31m-### 4. データソースの作成（研修1回について初回だけ）[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew createConnectionPool[m
[31m-.\gradlew createDataSource[m
[31m-```[m
[31m-[m
[31m-### 5. WARファイルのビルド（アプリケーション作成・更新のたびに実施）[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew :projects:jsf_person_rdb:war[m
[31m-```[m
[31m-[m
[31m-### 6. アプリケーションのデプロイ（アプリケーション作成・更新のたびに実施）[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew :projects:jsf_person_rdb:deploy[m
[31m-```[m
[31m-[m
[31m-## 📍 アクセスURL[m
[31m-[m
[31m-デプロイ後、以下のURLにアクセス：[m
[31m-[m
[31m-- **Person一覧**: http://localhost:8080/jsf_person_rdb/faces/PersonTablePage.xhtml[m
[31m-[m
[31m-## 🎯 プロジェクト構成[m
[31m-[m
[31m-```[m
[31m-projects/jsf_person_rdb/[m
[31m-├── src/[m
[31m-│   ├── main/[m
[31m-│   │   ├── java/[m
[31m-│   │   │   ├── bean/              # マネージドBean[m
[31m-│   │   │   ├── entity/            # JPAエンティティ[m
[31m-│   │   │   └── service/           # ビジネスロジック[m
[31m-│   │   ├── resources/[m
[31m-│   │   │   └── META-INF/[m
[31m-│   │   │       └── persistence.xml  # JPA設定[m
[31m-│   │   └── webapp/[m
[31m-│   │       ├── *.xhtml[m
[31m-│   │       └── WEB-INF/[m
[31m-│   │           ├── web.xml[m
[31m-│   │           └── beans.xml[m
[31m-│   └── test/[m
[31m-├── sql/[m
[31m-│   └── hsqldb/                     # SQLスクリプト[m
[31m-└── build/[m
[31m-    └── libs/[m
[31m-        └── jsf_person_rdb.war[m
[31m-```[m
[31m-[m
[31m-## 🔧 使用している技術[m
[31m-[m
[31m-- **Jakarta EE 10**[m
[31m-- **Payara Server 6**[m
[31m-- **Jakarta Faces (JSF) 4.0**[m
[31m-- **Jakarta Persistence (JPA) 3.1**[m
[31m-- **Jakarta Transactions (JTA)**[m
[31m-- **Jakarta CDI 4.0**[m
[31m-- **HSQLDB 2.7.x**[m
[31m-[m
[31m-## 📝 データソース設定について[m
[31m-[m
[31m-このプロジェクトはルートの`build.gradle`で定義されたタスクを使用してデータソースを作成します。[m
[31m-[m
[31m-### 設定内容[m
[31m-[m
[31m-- **JNDI名**: `jdbc/HsqldbDS`[m
[31m-- **データベース**: `testdb`[m
[31m-- **ユーザー**: `SA`[m
[31m-- **パスワード**: （空文字）[m
[31m-- **TCPサーバー**: `localhost:9001`[m
[31m-[m
[31m-データソースはPayara Serverのドメイン設定に登録されます。[m
[31m-[m
[31m-### ⚠️ 注意事項[m
[31m-[m
[31m-- HSQLDB Databaseサーバーが起動している必要があります[m
[31m-- データソース作成はPayara Server起動前に実行してください[m
[31m-- 初回のみ実行が必要です（2回目以降は不要）[m
[31m-[m
[31m-## 🛑 アプリケーションを停止する[m
[31m-[m
[31m-### アプリケーションのアンデプロイ[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew :projects:jsf_person_rdb:undeploy[m
[31m-```[m
[31m-[m
[31m-### Payara Server全体を停止[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew stopPayara[m
[31m-```[m
[31m-[m
[31m-### HSQLDBサーバーを停止[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew stopHsqldb[m
[31m-```[m
[31m-[m
[31m-## 🔍 ログ監視[m
[31m-[m
[31m-別のターミナルでログをリアルタイム監視：[m
[31m-[m
[31m-**Windows (PowerShell):**[m
[31m-```powershell[m
[31m-Get-Content -Path payara6\glassfish\domains\domain1\logs\server.log -Wait -Tail 50 -Encoding UTF8[m
[31m-```[m
[31m-[m
[31m-**Linux/Mac:**[m
[31m-```bash[m
[31m-tail -f -n 50 payara6/glassfish/domains/domain1/logs/server.log[m
[31m-```[m
[1mdiff --git a/projects/jsf_person_rdb/sql/h2/1_PERSON_DROP.sql b/projects/jsf_person_rdb/sql/h2/1_PERSON_DROP.sql[m
[1mdeleted file mode 100644[m
[1mindex b260b8b..0000000[m
[1m--- a/projects/jsf_person_rdb/sql/h2/1_PERSON_DROP.sql[m
[1m+++ /dev/null[m
[36m@@ -1,2 +0,0 @@[m
[31m--- 一括ドロップ[m
[31m-DROP TABLE IF EXISTS PERSON;[m
[1mdiff --git a/projects/jsf_person_rdb/sql/h2/2_PERSON_DDL.sql b/projects/jsf_person_rdb/sql/h2/2_PERSON_DDL.sql[m
[1mdeleted file mode 100644[m
[1mindex 6d97287..0000000[m
[1m--- a/projects/jsf_person_rdb/sql/h2/2_PERSON_DDL.sql[m
[1m+++ /dev/null[m
[36m@@ -1,8 +0,0 @@[m
[31m--- 人員テーブル[m
[31m-CREATE TABLE PERSON ([m
[31m-PERSON_ID   INT NOT NULL AUTO_INCREMENT, -- ID[m
[31m-PERSON_NAME VARCHAR(30) NOT NULL,        -- 名前[m
[31m-AGE         INT NOT NULL,                -- 年齢[m
[31m-GENDER      VARCHAR(10) NOT NULL,        -- 性別[m
[31m-PRIMARY KEY(PERSON_ID)[m
[31m-);[m
\ No newline at end of file[m
[1mdiff --git a/projects/jsf_person_rdb/sql/h2/3_PERSON_DML.sql b/projects/jsf_person_rdb/sql/h2/3_PERSON_DML.sql[m
[1mdeleted file mode 100644[m
[1mindex ff3e691..0000000[m
[1m--- a/projects/jsf_person_rdb/sql/h2/3_PERSON_DML.sql[m
[1m+++ /dev/null[m
[36m@@ -1,7 +0,0 @@[m
[31m--- 一括削除[m
[31m-DELETE FROM PERSON;[m
[31m-[m
[31m--- 人員テーブル[m
[31m-INSERT INTO PERSON VALUES(1, 'Alice', 35, 'female');[m
[31m-INSERT INTO PERSON VALUES(2, 'Bob', 20, 'male');[m
[31m-INSERT INTO PERSON VALUES(3, 'Carol', 30, 'female');[m
[1mdiff --git a/projects/jsf_person_rdb/sql/hsqldb/1_PERSON_DROP.sql b/projects/jsf_person_rdb/sql/hsqldb/1_PERSON_DROP.sql[m
[1mdeleted file mode 100644[m
[1mindex a74143e..0000000[m
[1m--- a/projects/jsf_person_rdb/sql/hsqldb/1_PERSON_DROP.sql[m
[1m+++ /dev/null[m
[36m@@ -1,7 +0,0 @@[m
[31m--- 一括ドロップ[m
[31m-DROP TABLE PERSON IF EXISTS;[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[1mdiff --git a/projects/jsf_person_rdb/sql/hsqldb/2_PERSON_DDL.sql b/projects/jsf_person_rdb/sql/hsqldb/2_PERSON_DDL.sql[m
[1mdeleted file mode 100644[m
[1mindex 05f84a9..0000000[m
[1m--- a/projects/jsf_person_rdb/sql/hsqldb/2_PERSON_DDL.sql[m
[1m+++ /dev/null[m
[36m@@ -1,12 +0,0 @@[m
[31m--- 人員テーブル[m
[31m-CREATE TABLE PERSON ([m
[31m-PERSON_ID   INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, -- ID[m
[31m-PERSON_NAME VARCHAR(30) NOT NULL,        -- 名前[m
[31m-AGE         INT NOT NULL,                -- 年齢[m
[31m-GENDER      VARCHAR(10) NOT NULL         -- 性別[m
[31m-);[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[1mdiff --git a/projects/jsf_person_rdb/sql/hsqldb/3_PERSON_DML.sql b/projects/jsf_person_rdb/sql/hsqldb/3_PERSON_DML.sql[m
[1mdeleted file mode 100644[m
[1mindex 2231e4a..0000000[m
[1m--- a/projects/jsf_person_rdb/sql/hsqldb/3_PERSON_DML.sql[m
[1m+++ /dev/null[m
[36m@@ -1,12 +0,0 @@[m
[31m--- 一括削除[m
[31m-DELETE FROM PERSON;[m
[31m-[m
[31m--- 人員テーブル[m
[31m-INSERT INTO PERSON (PERSON_ID, PERSON_NAME, AGE, GENDER) VALUES(1, 'Alice', 35, 'female');[m
[31m-INSERT INTO PERSON (PERSON_ID, PERSON_NAME, AGE, GENDER) VALUES(2, 'Bob', 20, 'male');[m
[31m-INSERT INTO PERSON (PERSON_ID, PERSON_NAME, AGE, GENDER) VALUES(3, 'Carol', 30, 'female');[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[1mdiff --git a/projects/jsf_person_rdb/src/main/java/.gitkeep b/projects/jsf_person_rdb/src/main/java/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/jsf_person_rdb/src/main/java/dev/cline/apricot/jsf/person/.LCKPerson.java~ b/projects/jsf_person_rdb/src/main/java/dev/cline/apricot/jsf/person/.LCKPerson.java~[m
[1mdeleted file mode 100644[m
[1mindex 4f36d55..0000000[m
[1m--- a/projects/jsf_person_rdb/src/main/java/dev/cline/apricot/jsf/person/.LCKPerson.java~[m
[1m+++ /dev/null[m
[36m@@ -1 +0,0 @@[m
[31m-D:\GitHubRepos\cline_training_2025\cline_training_answer\projects\jsf_person_rdb\src\main\java\jp\mufg\it\ee\jsf\person\Person.java[m
\ No newline at end of file[m
[1mdiff --git a/projects/jsf_person_rdb/src/main/java/dev/cline/apricot/jsf/person/Person.java b/projects/jsf_person_rdb/src/main/java/dev/cline/apricot/jsf/person/Person.java[m
[1mdeleted file mode 100644[m
[1mindex aa94b20..0000000[m
[1m--- a/projects/jsf_person_rdb/src/main/java/dev/cline/apricot/jsf/person/Person.java[m
[1m+++ /dev/null[m
[36m@@ -1,86 +0,0 @@[m
[31m-package dev.cline.apricot.jsf.person;[m
[31m-[m
[31m-import jakarta.persistence.Column;[m
[31m-import jakarta.persistence.Entity;[m
[31m-import jakarta.persistence.Id;[m
[31m-import jakarta.persistence.Table;[m
[31m-[m
[31m-@Entity[m
[31m-@Table(name = "PERSON")[m
[31m-public class Person {[m
[31m-    // ID[m
[31m-    @Id[m
[31m-    @Column(name = "PERSON_ID")[m
[31m-    private Integer personId;[m
[31m-[m
[31m-    // 名前[m
[31m-    @Column(name = "PERSON_NAME")[m
[31m-    private String personName;[m
[31m-[m
[31m-    // 年齢[m
[31m-    @Column(name = "AGE")[m
[31m-    private Integer age;[m
[31m-[m
[31m-    // 性別[m
[31m-    @Column(name = "GENDER")[m
[31m-    private String gender;[m
[31m-[m
[31m-    // コンストラクタ[m
[31m-    public Person() {}[m
[31m-[m
[31m-    public Person(Integer personId, String personName, Integer age,[m
[31m-            String gender) {[m
[31m-        this.personId = personId;[m
[31m-        this.personName = personName;[m
[31m-        this.age = age;[m
[31m-        this.gender = gender;[m
[31m-    }[m
[31m-[m
[31m-    public Person(String personName, Integer age, String gender) {[m
[31m-        this.personName = personName;[m
[31m-        this.age = age;[m
[31m-        this.gender = gender;[m
[31m-    }[m
[31m-[m
[31m-    // IDへのアクセサメソッド[m
[31m-    public Integer getPersonId() {[m
[31m-        return personId;[m
[31m-    }[m
[31m-[m
[31m-    public void setPersonId(Integer personId) {[m
[31m-        this.personId = personId;[m
[31m-    }[m
[31m-[m
[31m-    // 名前へのアクセサメソッド[m
[31m-    public String getPersonName() {[m
[31m-        return personName;[m
[31m-    }[m
[31m-[m
[31m-    public void setPersonName(String personName) {[m
[31m-        this.personName = personName;[m
[31m-    }[m
[31m-[m
[31m-    // 性別へのアクセサメソッド[m
[31m-    public String getGender() {[m
[31m-        return gender;[m
[31m-    }[m
[31m-[m
[31m-    public void setGender(String gender) {[m
[31m-        this.gender = gender;[m
[31m-    }[m
[31m-[m
[31m-    // 年齢へのアクセサメソッド[m
[31m-    public Integer getAge() {[m
[31m-        return age;[m
[31m-    }[m
[31m-[m
[31m-    public void setAge(Integer age) {[m
[31m-        this.age = age;[m
[31m-    }[m
[31m-[m
[31m-    @Override[m
[31m-    public String toString() {[m
[31m-        return "Person [personId=" + personId + ", personName=" + personName[m
[31m-                + ", age=" + age + ", gender=" + gender + "]";[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/projects/jsf_person_rdb/src/main/java/dev/cline/apricot/jsf/person/PersonInputBean.java b/projects/jsf_person_rdb/src/main/java/dev/cline/apricot/jsf/person/PersonInputBean.java[m
[1mdeleted file mode 100644[m
[1mindex d3d8c27..0000000[m
[1m--- a/projects/jsf_person_rdb/src/main/java/dev/cline/apricot/jsf/person/PersonInputBean.java[m
[1m+++ /dev/null[m
[36m@@ -1,48 +0,0 @@[m
[31m-package dev.cline.apricot.jsf.person;[m
[31m-[m
[31m-import java.io.Serializable;[m
[31m-[m
[31m-import jakarta.annotation.PostConstruct;[m
[31m-import jakarta.faces.context.FacesContext;[m
[31m-import jakarta.faces.context.Flash;[m
[31m-import jakarta.faces.view.ViewScoped;[m
[31m-import jakarta.inject.Named;[m
[31m-[m
[31m-@ViewScoped[m
[31m-@Named("personInput")[m
[31m-public class PersonInputBean implements Serializable {[m
[31m-    // UIコンポーネントの値を保持するためのプロパティ[m
[31m-    private Person person;[m
[31m-[m
[31m-    public Person getPerson() {[m
[31m-        if (person == null) {[m
[31m-            person = new Person();[m
[31m-        }[m
[31m-        return person;[m
[31m-    }[m
[31m-[m
[31m-    public void setPerson(Person person) {[m
[31m-        this.person = person;[m
[31m-    }[m
[31m-[m
[31m-    // フラッシュスコープ[m
[31m-    private Flash flash;[m
[31m-[m
[31m-    // ライフサイクルメソッド[m
[31m-    @PostConstruct[m
[31m-    public void postConstruct() {[m
[31m-        System.out.println("[ PersonInput#postConstruct ]");[m
[31m-        FacesContext facesContext = FacesContext.getCurrentInstance();[m
[31m-        flash = facesContext.getExternalContext().getFlash();[m
[31m-        person = (Person)flash.get("person");[m
[31m-        if (person == null) {[m
[31m-            person = new Person();[m
[31m-        }[m
[31m-    }[m
[31m-[m
[31m-    // アクションメソッド（「確認画面」に遷移する）[m
[31m-    public String confirm() {[m
[31m-        flash.put("person", person);[m
[31m-        return "PersonUpdatePage";[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/projects/jsf_person_rdb/src/main/java/dev/cline/apricot/jsf/person/PersonService.java b/projects/jsf_person_rdb/src/main/java/dev/cline/apricot/jsf/person/PersonService.java[m
[1mdeleted file mode 100644[m
[1mindex 169cbc2..0000000[m
[1m--- a/projects/jsf_person_rdb/src/main/java/dev/cline/apricot/jsf/person/PersonService.java[m
[1m+++ /dev/null[m
[36m@@ -1,41 +0,0 @@[m
[31m-package dev.cline.apricot.jsf.person;[m
[31m-[m
[31m-import java.util.List;[m
[31m-[m
[31m-import jakarta.enterprise.context.RequestScoped;[m
[31m-import jakarta.persistence.EntityManager;[m
[31m-import jakarta.persistence.PersistenceContext;[m
[31m-import jakarta.persistence.Query;[m
[31m-import jakarta.transaction.Transactional;[m
[31m-import jakarta.transaction.Transactional.TxType;[m
[31m-[m
[31m-@RequestScoped[m
[31m-@Transactional(TxType.REQUIRED)[m
[31m-public class PersonService {[m
[31m-    @PersistenceContext(unitName = "MyPersistenceUnit")[m
[31m-    private EntityManager entitiManager;[m
[31m-[m
[31m-    public Person getPerson(Integer personId) {[m
[31m-        return entitiManager.find(Person.class, personId);[m
[31m-    }[m
[31m-[m
[31m-    @SuppressWarnings("unchecked")[m
[31m-    public List<Person> getPersonList() {[m
[31m-        Query query = entitiManager.createQuery([m
[31m-                "SELECT p FROM Person AS p");[m
[31m-        return query.getResultList();[m
[31m-    }[m
[31m-[m
[31m-    public void addPerson(Person person) {[m
[31m-        entitiManager.persist(person);[m
[31m-    }[m
[31m-[m
[31m-    public void removePerson(Integer personId) {[m
[31m-        Person person = entitiManager.find(Person.class, personId);[m
[31m-        entitiManager.remove(person);[m
[31m-    }[m
[31m-[m
[31m-    public void updatePerson(Person person) {[m
[31m-        entitiManager.merge(person);[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/projects/jsf_person_rdb/src/main/java/dev/cline/apricot/jsf/person/PersonTableBean.java b/projects/jsf_person_rdb/src/main/java/dev/cline/apricot/jsf/person/PersonTableBean.java[m
[1mdeleted file mode 100644[m
[1mindex 816dc23..0000000[m
[1m--- a/projects/jsf_person_rdb/src/main/java/dev/cline/apricot/jsf/person/PersonTableBean.java[m
[1m+++ /dev/null[m
[36m@@ -1,54 +0,0 @@[m
[31m-package dev.cline.apricot.jsf.person;[m
[31m-[m
[31m-import java.io.Serializable;[m
[31m-import java.util.List;[m
[31m-[m
[31m-import jakarta.annotation.PostConstruct;[m
[31m-import jakarta.faces.context.FacesContext;[m
[31m-import jakarta.faces.context.Flash;[m
[31m-import jakarta.faces.view.ViewScoped;[m
[31m-import jakarta.inject.Inject;[m
[31m-import jakarta.inject.Named;[m
[31m-[m
[31m-@ViewScoped[m
[31m-@Named("personTable")[m
[31m-public class PersonTableBean implements Serializable {[m
[31m-    // UIコンポーネントの値を保持するためのプロパティ[m
[31m-    private List<Person> personList;[m
[31m-[m
[31m-    public List<Person> getPersonList() {[m
[31m-        return personList;[m
[31m-    }[m
[31m-[m
[31m-    public void setPersonList(List<Person> personList) {[m
[31m-        this.personList = personList;[m
[31m-    }[m
[31m-[m
[31m-    // フラッシュスコープ[m
[31m-    private Flash flash;[m
[31m-[m
[31m-    // ライフサイクルメソッド[m
[31m-    @PostConstruct[m
[31m-    public void postConstruct() {[m
[31m-        FacesContext facesContext = FacesContext.getCurrentInstance();[m
[31m-        flash = facesContext.getExternalContext().getFlash();[m
[31m-        personList = personService.getPersonList();[m
[31m-    }[m
[31m-[m
[31m-    // インジェクションポイント[m
[31m-    @Inject[m
[31m-    private PersonService personService;[m
[31m-[m
[31m-    // アクションメソッド（人員を削除する）[m
[31m-    public String removePerson(Integer personId) {[m
[31m-        personService.removePerson(personId);[m
[31m-        return "PersonTablePage";[m
[31m-    }[m
[31m-[m
[31m-    // アクションメソッド（人員を編集する）[m
[31m-    public String editPerson(Integer personId) {[m
[31m-        Person person = personService.getPerson(personId);[m
[31m-        flash.put("person", person);[m
[31m-        return "PersonInputPage";[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/projects/jsf_person_rdb/src/main/java/dev/cline/apricot/jsf/person/PersonUpdateBean.java b/projects/jsf_person_rdb/src/main/java/dev/cline/apricot/jsf/person/PersonUpdateBean.java[m
[1mdeleted file mode 100644[m
[1mindex 1651cc5..0000000[m
[1m--- a/projects/jsf_person_rdb/src/main/java/dev/cline/apricot/jsf/person/PersonUpdateBean.java[m
[1m+++ /dev/null[m
[36m@@ -1,57 +0,0 @@[m
[31m-package dev.cline.apricot.jsf.person;[m
[31m-[m
[31m-import java.io.Serializable;[m
[31m-[m
[31m-import jakarta.annotation.PostConstruct;[m
[31m-import jakarta.faces.context.FacesContext;[m
[31m-import jakarta.faces.context.Flash;[m
[31m-import jakarta.faces.view.ViewScoped;[m
[31m-import jakarta.inject.Inject;[m
[31m-import jakarta.inject.Named;[m
[31m-[m
[31m-@ViewScoped[m
[31m-@Named("personUpdate")[m
[31m-public class PersonUpdateBean implements Serializable {[m
[31m-    // UIコンポーネントの値を保持するためのプロパティ[m
[31m-    private Person person;[m
[31m-[m
[31m-    public Person getPerson() {[m
[31m-        return person;[m
[31m-    }[m
[31m-[m
[31m-    public void setPerson(Person person) {[m
[31m-        this.person = person;[m
[31m-    }[m
[31m-[m
[31m-    // インジェクションポイント[m
[31m-    @Inject[m
[31m-    private PersonService personService;[m
[31m-[m
[31m-    // ライフサイクルメソッド[m
[31m-    @PostConstruct[m
[31m-    public void postConstruct() {[m
[31m-        System.out.println("[ PersonUpdateBean#postConstruct ]");[m
[31m-        FacesContext facesContext = FacesContext.getCurrentInstance();[m
[31m-        flash = facesContext.getExternalContext().getFlash();[m
[31m-        person = (Person) flash.get("person");[m
[31m-    }[m
[31m-[m
[31m-    // フラッシュスコープ[m
[31m-    private Flash flash;[m
[31m-[m
[31m-    // アクションメソッド（人員を更新・追加する）[m
[31m-    public String updatePerson() {[m
[31m-        if (person.getPersonId() != null) {[m
[31m-            personService.updatePerson(person);[m
[31m-        } else {[m
[31m-            personService.addPerson(person);[m
[31m-        }[m
[31m-        return "PersonTablePage";[m
[31m-    }[m
[31m-[m
[31m-    // アクションメソッド（「入力画面」に戻る）[m
[31m-    public String back() {[m
[31m-        flash.put("person", person);[m
[31m-        return "PersonInputPage";[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/projects/jsf_person_rdb/src/main/resources/.gitkeep b/projects/jsf_person_rdb/src/main/resources/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/jsf_person_rdb/src/main/resources/META-INF/persistence.xml b/projects/jsf_person_rdb/src/main/resources/META-INF/persistence.xml[m
[1mdeleted file mode 100644[m
[1mindex 5876b4e..0000000[m
[1m--- a/projects/jsf_person_rdb/src/main/resources/META-INF/persistence.xml[m
[1m+++ /dev/null[m
[36m@@ -1,20 +0,0 @@[m
[31m-<?xml version="1.0" encoding="UTF-8"?>[m
[31m-<persistence xmlns="http://java.sun.com/xml/ns/persistence"[m
[31m-             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"[m
[31m-             xsi:schemaLocation="http://java.sun.com/xml/ns/persistence[m
[31m-             http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd"[m
[31m-             version="2.0">[m
[31m-[m
[31m-  <!-- EclipseLink -->[m
[31m-  <persistence-unit name="MyPersistenceUnit" transaction-type="JTA">[m
[31m-    <jta-data-source>jdbc/HsqldbDS</jta-data-source>[m
[31m-    <properties>[m
[31m-      <property name="eclipselink.target-database" value="org.eclipse.persistence.platform.database.HSQLPlatform" />[m
[31m-      <property name="eclipselink.logging.level"   value="FINE" />[m
[31m-      <!-- HSQLDB SA user credentials (no password) -->[m
[31m-      <property name="eclipselink.jdbc.user" value="SA" />[m
[31m-      <property name="eclipselink.jdbc.password" value="" />[m
[31m-    </properties>[m
[31m-  </persistence-unit>[m
[31m-[m
[31m-</persistence>[m
[1mdiff --git a/projects/jsf_person_rdb/src/main/webapp/.gitkeep b/projects/jsf_person_rdb/src/main/webapp/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/jsf_person_rdb/src/main/webapp/PersonInputPage.xhtml b/projects/jsf_person_rdb/src/main/webapp/PersonInputPage.xhtml[m
[1mdeleted file mode 100644[m
[1mindex cca2f67..0000000[m
[1m--- a/projects/jsf_person_rdb/src/main/webapp/PersonInputPage.xhtml[m
[1m+++ /dev/null[m
[36m@@ -1,40 +0,0 @@[m
[31m-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja"[m
[31m-      xmlns:f="http://java.sun.com/jsf/core"[m
[31m-      xmlns:h="http://java.sun.com/jsf/html"[m
[31m-      xmlns:ui="http://java.sun.com/jsf/facelets">[m
[31m-<h:head>[m
[31m-<title>PersonInputPage</title>[m
[31m-<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />[m
[31m-</h:head>[m
[31m-<h:body>[m
[31m-  <h2>PersonInputPage</h2>[m
[31m-  <hr />[m
[31m-  <h:form id="form1">[m
[31m-    <h:outputText value="ID : #{personInput.person.personId}"[m
[31m-      rendered="#{personInput.person.personId != null}" />[m
[31m-    <h:panelGrid border="0" columns="3">[m
[31m-      <h:outputText value="名前" />[m
[31m-      <h:inputText id="personName" value="#{personInput.person.personName}"[m
[31m-        required="true">[m
[31m-        <f:validateLength minimum="1" maximum="15" />[m
[31m-      </h:inputText>[m
[31m-      <h:message for="personName" errorStyle="color: red" />[m
[31m-      <h:outputText value="年齢" />[m
[31m-      <h:inputText id="age" value="#{personInput.person.age}" required="true">[m
[31m-        <f:validateLongRange minimum="20" maximum="100" />[m
[31m-      </h:inputText>[m
[31m-      <h:message for="age" errorStyle="color: red" />[m
[31m-      <h:outputText value="性別" />[m
[31m-      <h:selectOneRadio id="gender" value="#{personInput.person.gender}"[m
[31m-        required="true">[m
[31m-        <f:selectItem itemValue="male" itemLabel="男性" />[m
[31m-        <f:selectItem itemValue="female" itemLabel="女性" />[m
[31m-      </h:selectOneRadio>[m
[31m-      <h:message for="gender" errorStyle="color: red" />[m
[31m-    </h:panelGrid>[m
[31m-    <div>[m
[31m-      <h:commandButton value="確認画面へ" action="#{personInput.confirm}" />[m
[31m-    </div>[m
[31m-  </h:form>[m
[31m-</h:body>[m
[31m-</html>[m
\ No newline at end of file[m
[1mdiff --git a/projects/jsf_person_rdb/src/main/webapp/PersonTablePage.xhtml b/projects/jsf_person_rdb/src/main/webapp/PersonTablePage.xhtml[m
[1mdeleted file mode 100644[m
[1mindex 6ca7976..0000000[m
[1m--- a/projects/jsf_person_rdb/src/main/webapp/PersonTablePage.xhtml[m
[1m+++ /dev/null[m
[36m@@ -1,48 +0,0 @@[m
[31m-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja"[m
[31m-      xmlns:f="http://java.sun.com/jsf/core"[m
[31m-      xmlns:h="http://java.sun.com/jsf/html"[m
[31m-      xmlns:ui="http://java.sun.com/jsf/facelets">[m
[31m-<h:head>[m
[31m-<title>PersonTablePage</title>[m
[31m-<meta http-equiv="content-type" content="text/html; charset=UTF-8" />[m
[31m-</h:head>[m
[31m-<h:body>[m
[31m-  <h2>PersonTablePage</h2>[m
[31m-  <hr />[m
[31m-  <h:form>[m
[31m-    <h:dataTable id="dataTable" value="#{personTable.personList}"[m
[31m-      var="person" border="1">[m
[31m-      <h:column>[m
[31m-        <f:facet name="header">ID</f:facet>[m
[31m-        <h:outputText id="personId" value="#{person.personId}" />[m
[31m-      </h:column>[m
[31m-      <h:column>[m
[31m-        <f:facet name="header">名前</f:facet>[m
[31m-        <h:outputText id="personName" value="#{person.personName}" />[m
[31m-      </h:column>[m
[31m-      <h:column>[m
[31m-        <f:facet name="header">年齢</f:facet>[m
[31m-        <h:outputText id="age" value="#{person.age}" />[m
[31m-      </h:column>[m
[31m-      <h:column>[m
[31m-        <f:facet name="header">性別</f:facet>[m
[31m-        <h:outputText id="gender" value="#{person.gender == null ? '' :[m
[31m-          person.gender == 'male' ? '男性' : '女性'}" />[m
[31m-      </h:column>[m
[31m-      <h:column>[m
[31m-        <f:facet name="header">編集</f:facet>[m
[31m-        <h:commandButton value="編集"[m
[31m-          action="#{personTable.editPerson(person.personId)}" />[m
[31m-      </h:column>[m
[31m-      <h:column>[m
[31m-        <f:facet name="header">削除</f:facet>[m
[31m-        <h:commandButton value="削除"[m
[31m-          action="#{personTable.removePerson(person.personId)}" />[m
[31m-      </h:column>[m
[31m-    </h:dataTable>[m
[31m-    <div>[m
[31m-      <h:commandButton value="作成" action="PersonInputPage" />[m
[31m-    </div>[m
[31m-  </h:form>[m
[31m-</h:body>[m
[31m-</html>[m
\ No newline at end of file[m
[1mdiff --git a/projects/jsf_person_rdb/src/main/webapp/PersonUpdatePage.xhtml b/projects/jsf_person_rdb/src/main/webapp/PersonUpdatePage.xhtml[m
[1mdeleted file mode 100644[m
[1mindex ed7df92..0000000[m
[1m--- a/projects/jsf_person_rdb/src/main/webapp/PersonUpdatePage.xhtml[m
[1m+++ /dev/null[m
[36m@@ -1,30 +0,0 @@[m
[31m-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja"[m
[31m-      xmlns:f="http://java.sun.com/jsf/core"[m
[31m-      xmlns:h="http://java.sun.com/jsf/html"[m
[31m-      xmlns:ui="http://java.sun.com/jsf/facelets">[m
[31m-<h:head>[m
[31m-<title>UpdatePage</title>[m
[31m-<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />[m
[31m-</h:head>[m
[31m-<h:body>[m
[31m-  <h2>UpdatePage</h2>[m
[31m-  <hr />[m
[31m-  <h:form id="form1">[m
[31m-    <h:outputText value="ID : #{personUpdate.person.personId}"[m
[31m-      rendered="#{personUpdate.person.personId != null}" />[m
[31m-    <h:panelGrid columns="2">[m
[31m-      <h:outputText value="名前" />[m
[31m-      <h:outputText value="#{personUpdate.person.personName}" />[m
[31m-      <h:outputText value="年齢" />[m
[31m-      <h:outputText value="#{personUpdate.person.age}" />[m
[31m-      <h:outputText value="性別" />[m
[31m-      <h:outputText value="#{personUpdate.person.gender == null ? '' :[m
[31m-        personUpdate.person.gender == 'male' ? '男性' : '女性'}" />[m
[31m-    </h:panelGrid>[m
[31m-    <div>[m
[31m-      <h:commandButton value="戻る" action="#{personUpdate.back}" />[m
[31m-      <h:commandButton value="更新実行" action="#{personUpdate.updatePerson}" />[m
[31m-    </div>[m
[31m-  </h:form>[m
[31m-</h:body>[m
[31m-</html>[m
\ No newline at end of file[m
[1mdiff --git a/projects/jsf_person_rdb/src/main/webapp/WEB-INF/.gitkeep b/projects/jsf_person_rdb/src/main/webapp/WEB-INF/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/jsf_person_rdb/src/main/webapp/WEB-INF/META-INF/.gitignore b/projects/jsf_person_rdb/src/main/webapp/WEB-INF/META-INF/.gitignore[m
[1mdeleted file mode 100644[m
[1mindex c548067..0000000[m
[1m--- a/projects/jsf_person_rdb/src/main/webapp/WEB-INF/META-INF/.gitignore[m
[1m+++ /dev/null[m
[36m@@ -1 +0,0 @@[m
[31m-/persistence.xml[m
[1mdiff --git a/projects/jsf_person_rdb/src/main/webapp/WEB-INF/beans.xml b/projects/jsf_person_rdb/src/main/webapp/WEB-INF/beans.xml[m
[1mdeleted file mode 100644[m
[1mindex 0fc6e30..0000000[m
[1m--- a/projects/jsf_person_rdb/src/main/webapp/WEB-INF/beans.xml[m
[1m+++ /dev/null[m
[36m@@ -1,6 +0,0 @@[m
[31m-<beans xmlns="http://xmlns.jcp.org/xml/ns/javaee"[m
[31m-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"[m
[31m-       xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee[m
[31m-       http://xmlns.jcp.org/xml/ns/javaee/beans_2_0.xsd"[m
[31m-       bean-discovery-mode="all" version="2.0">[m
[31m-</beans>[m
\ No newline at end of file[m
[1mdiff --git a/projects/jsf_person_rdb/src/main/webapp/WEB-INF/web.xml b/projects/jsf_person_rdb/src/main/webapp/WEB-INF/web.xml[m
[1mdeleted file mode 100644[m
[1mindex 76462f2..0000000[m
[1m--- a/projects/jsf_person_rdb/src/main/webapp/WEB-INF/web.xml[m
[1m+++ /dev/null[m
[36m@@ -1,48 +0,0 @@[m
[31m-<?xml version="1.0" encoding="UTF-8"?>[m
[31m-<web-app xmlns="https://jakarta.ee/xml/ns/jakartaee"[m
[31m-         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"[m
[31m-         xsi:schemaLocation="https://jakarta.ee/xml/ns/jakartaee[m
[31m-         https://jakarta.ee/xml/ns/jakartaee/web-app_5_0.xsd"[m
[31m-         version="5.0">[m
[31m-[m
[31m-  <!-- ========== Context Param ================================= -->[m
[31m-  <!-- Select JSF State Saving Mode -->[m
[31m-  <context-param>[m
[31m-    <param-name>jakarta.faces.STATE_SAVING_METHOD</param-name>[m
[31m-    <param-value>server</param-value>[m
[31m-  </context-param>[m
[31m-[m
[31m-  <!-- For Facelets Comment Skip -->[m
[31m-  <context-param>[m
[31m-    <param-name>jakarta.faces.FACELETS_SKIP_COMMENTS</param-name>[m
[31m-    <param-value>true</param-value>[m
[31m-  </context-param>[m
[31m-[m
[31m-  <!-- For Empty String Validation -->[m
[31m-  <context-param>[m
[31m-    <param-name>jakarta.faces.INTERPRET_EMPTY_STRING_SUBMITTED_VALUES_AS_NULL[m
[31m-    </param-name>[m
[31m-    <param-value>true</param-value>[m
[31m-  </context-param>[m
[31m-[m
[31m-  <!-- For Using System Timezone -->[m
[31m-  <context-param>[m
[31m-    <param-name>jakarta.faces.DATETIMECONVERTER_DEFAULT_TIMEZONE_IS_SYSTEM_TIMEZONE[m
[31m-    </param-name>[m
[31m-    <param-value>true</param-value>[m
[31m-  </context-param>[m
[31m-[m
[31m-  <!-- ========== Servlet ======================================= -->[m
[31m-  <servlet>[m
[31m-    <servlet-name>Faces Servlet</servlet-name>[m
[31m-    <servlet-class>jakarta.faces.webapp.FacesServlet</servlet-class>[m
[31m-    <load-on-startup>1</load-on-startup>[m
[31m-  </servlet>[m
[31m-[m
[31m-  <!-- ========== Servlet Mapping =============================== -->[m
[31m-  <servlet-mapping>[m
[31m-    <servlet-name>Faces Servlet</servlet-name>[m
[31m-    <url-pattern>/faces/*</url-pattern>[m
[31m-  </servlet-mapping>[m
[31m-[m
[31m-</web-app>[m
\ No newline at end of file[m
[1mdiff --git a/projects/jsf_person_rdb/src/test/java/.gitkeep b/projects/jsf_person_rdb/src/test/java/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/jsf_person_rdb/src/test/resources/.gitkeep b/projects/jsf_person_rdb/src/test/resources/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/person_jee/.gitkeep b/projects/person_jee/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/person_service/.gitignore b/projects/person_service/.gitignore[m
[1mdeleted file mode 100644[m
[1mindex 6f1d2c2..0000000[m
[1m--- a/projects/person_service/.gitignore[m
[1m+++ /dev/null[m
[36m@@ -1,5 +0,0 @@[m
[31m-/classes[m
[31m-/bin[m
[31m-/build[m
[31m-/target[m
[31m-/.gradle[m
[1mdiff --git a/projects/person_service/README.md b/projects/person_service/README.md[m
[1mdeleted file mode 100644[m
[1mindex c7ab18f..0000000[m
[1m--- a/projects/person_service/README.md[m
[1m+++ /dev/null[m
[36m@@ -1,95 +0,0 @@[m
[31m-# person_service プロジェクト[m
[31m-[m
[31m-## 📖 概要[m
[31m-[m
[31m-JAX-RSとメモリ内データ管理を使用したPersonデータのCRUD APIサンプルです。[m
[31m-RESTful APIの設計パターンを学習できます。[m
[31m-[m
[31m-## 🚀 アプリケーションの開発フローとデプロイ方法[m
[31m-[m
[31m-### 前提条件[m
[31m-[m
[31m-- JDK 21以上[m
[31m-- Gradle 8.x以上[m
[31m-- Payara Server 6（プロジェクトルートの`payara6/`に配置）[m
[31m-[m
[31m-### 1. Payara Serverの起動（研修1回について初回だけ）[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew startPayara[m
[31m-```[m
[31m-[m
[31m-### 2. WARファイルのビルド（アプリケーション作成・更新のたびに実施）[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew :projects:person_service:war[m
[31m-```[m
[31m-[m
[31m-### 3. アプリケーションのデプロイ（アプリケーション作成・更新のたびに実施）[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew :projects:person_service:deploy[m
[31m-```[m
[31m-[m
[31m-## 📍 アクセスURL[m
[31m-[m
[31m-デプロイ後、以下のURLにアクセス：[m
[31m-[m
[31m-- **Person一覧 API**: http://localhost:8080/person_service/api/persons[m
[31m-[m
[31m-## 🎯 プロジェクト構成[m
[31m-[m
[31m-```[m
[31m-projects/person_service/[m
[31m-├── src/[m
[31m-│   ├── main/[m
[31m-│   │   ├── java/[m
[31m-│   │   │   ├── application/       # JAX-RS Application[m
[31m-│   │   │   ├── resource/          # REST Resource[m
[31m-│   │   │   ├── model/             # データモデル[m
[31m-│   │   │   └── mapper/            # データマッパー（メモリ内）[m
[31m-│   │   └── webapp/[m
[31m-│   │       └── WEB-INF/[m
[31m-│   │           └── web.xml[m
[31m-│   └── test/[m
[31m-└── build/[m
[31m-    └── libs/[m
[31m-        └── person_service.war[m
[31m-```[m
[31m-[m
[31m-## 🔧 使用している技術[m
[31m-[m
[31m-- **Jakarta EE 10**[m
[31m-- **Payara Server 6**[m
[31m-- **Jakarta RESTful Web Services (JAX-RS) 3.1**[m
[31m-- **Jakarta JSON Binding (JSON-B)**[m
[31m-- **Jakarta CDI 4.0**[m
[31m-- **メモリ内データ管理**[m
[31m-[m
[31m-## 🛑 アプリケーションを停止する[m
[31m-[m
[31m-### アプリケーションのアンデプロイ[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew :projects:person_service:undeploy[m
[31m-```[m
[31m-[m
[31m-### Payara Server全体を停止[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew stopPayara[m
[31m-```[m
[31m-[m
[31m-## 🔍 ログ監視[m
[31m-[m
[31m-別のターミナルでログをリアルタイム監視：[m
[31m-[m
[31m-**Windows (PowerShell):**[m
[31m-```powershell[m
[31m-Get-Content -Path payara6\glassfish\domains\domain1\logs\server.log -Wait -Tail 50 -Encoding UTF8[m
[31m-```[m
[31m-[m
[31m-**Linux/Mac:**[m
[31m-```bash[m
[31m-tail -f -n 50 payara6/glassfish/domains/domain1/logs/server.log[m
[31m-```[m
[1mdiff --git "a/projects/person_service/curl\343\203\241\343\203\242.txt" "b/projects/person_service/curl\343\203\241\343\203\242.txt"[m
[1mdeleted file mode 100644[m
[1mindex 48aa8b6..0000000[m
[1m--- "a/projects/person_service/curl\343\203\241\343\203\242.txt"[m
[1m+++ /dev/null[m
[36m@@ -1,17 +0,0 @@[m
[31m-### getPerson[m
[31m-curl -i localhost:8080/person_service/persons/1[m
[31m-[m
[31m-### getPersonsAll[m
[31m-curl -i localhost:8080/person_service/persons[m
[31m-[m
[31m-### replacePerson[m
[31m-curl -i -X PUT localhost:8080/person_service/persons/2 -H "Content-Type: application/json" -d {\"personId\":2,\"personName\":\"Bob\",\"age\":36,\"gender\":\"male\"}[m
[31m-curl -i localhost:8080/person_service/persons/2[m
[31m-[m
[31m-### createPerson[m
[31m-curl -i -X POST localhost:8080/person_service/persons -H "Content-Type: application/json" -d {\"personName\":\"Frank\",\"age\":45,\"gender\":\"male\"}[m
[31m-curl -i localhost:8080/person_service/persons[m
[31m-[m
[31m-### removePerson[m
[31m-curl -i -X DELETE localhost:8080/person_service/persons/2[m
[31m-curl -i localhost:8080/person_service/persons/2[m
[1mdiff --git a/projects/person_service/src/main/java/.gitkeep b/projects/person_service/src/main/java/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/person_service/src/main/java/dev/cline/apricot/rs/person/MyApplication.java b/projects/person_service/src/main/java/dev/cline/apricot/rs/person/MyApplication.java[m
[1mdeleted file mode 100644[m
[1mindex 62a90fa..0000000[m
[1m--- a/projects/person_service/src/main/java/dev/cline/apricot/rs/person/MyApplication.java[m
[1m+++ /dev/null[m
[36m@@ -1,8 +0,0 @@[m
[31m-package dev.cline.apricot.rs.person;[m
[31m-[m
[31m-import jakarta.ws.rs.ApplicationPath;[m
[31m-import jakarta.ws.rs.core.Application;[m
[31m-[m
[31m-@ApplicationPath("/*")[m
[31m-public class MyApplication extends Application {[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/projects/person_service/src/main/java/dev/cline/apricot/rs/person/Person.java b/projects/person_service/src/main/java/dev/cline/apricot/rs/person/Person.java[m
[1mdeleted file mode 100644[m
[1mindex 117b916..0000000[m
[1m--- a/projects/person_service/src/main/java/dev/cline/apricot/rs/person/Person.java[m
[1m+++ /dev/null[m
[36m@@ -1,79 +0,0 @@[m
[31m-package dev.cline.apricot.rs.person;[m
[31m-[m
[31m-import jakarta.xml.bind.annotation.XmlRootElement;[m
[31m-[m
[31m-@XmlRootElement(name = "person")[m
[31m-public class Person {[m
[31m-    // ID[m
[31m-    private Integer personId;[m
[31m-[m
[31m-    // 名前[m
[31m-    private String personName;[m
[31m-[m
[31m-    // 年齢[m
[31m-    private Integer age;[m
[31m-[m
[31m-    // 性別[m
[31m-    private String gender;[m
[31m-[m
[31m-    // 引数なしのコンストラクタ[m
[31m-    public Person() {}[m
[31m-[m
[31m-    // コンストラクタ[m
[31m-    public Person(Integer personId, String personName, Integer age,[m
[31m-            String gender) {[m
[31m-        this.personId = personId;[m
[31m-        this.personName = personName;[m
[31m-        this.age = age;[m
[31m-        this.gender = gender;[m
[31m-    }[m
[31m-[m
[31m-    // コンストラクタ[m
[31m-    public Person(String personName, Integer age, String gender) {[m
[31m-        this.personName = personName;[m
[31m-        this.age = age;[m
[31m-        this.gender = gender;[m
[31m-    }[m
[31m-[m
[31m-    // IDへのアクセサメソッド[m
[31m-    public Integer getPersonId() {[m
[31m-        return personId;[m
[31m-    }[m
[31m-[m
[31m-    public void setPersonId(Integer personId) {[m
[31m-        this.personId = personId;[m
[31m-    }[m
[31m-[m
[31m-    // 名前へのアクセサメソッド[m
[31m-    public String getPersonName() {[m
[31m-        return personName;[m
[31m-    }[m
[31m-[m
[31m-    public void setPersonName(String personName) {[m
[31m-        this.personName = personName;[m
[31m-    }[m
[31m-[m
[31m-    // 性別へのアクセサメソッド[m
[31m-    public String getGender() {[m
[31m-        return gender;[m
[31m-    }[m
[31m-[m
[31m-    public void setGender(String gender) {[m
[31m-        this.gender = gender;[m
[31m-    }[m
[31m-[m
[31m-    // 年齢へのアクセサメソッド[m
[31m-    public Integer getAge() {[m
[31m-        return age;[m
[31m-    }[m
[31m-[m
[31m-    public void setAge(Integer age) {[m
[31m-        this.age = age;[m
[31m-    }[m
[31m-[m
[31m-    @Override[m
[31m-    public String toString() {[m
[31m-        return "Person [personId=" + personId + ", personName=" + personName[m
[31m-                + ", age=" + age + ", gender=" + gender + "]";[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/projects/person_service/src/main/java/dev/cline/apricot/rs/person/PersonMapper.java b/projects/person_service/src/main/java/dev/cline/apricot/rs/person/PersonMapper.java[m
[1mdeleted file mode 100644[m
[1mindex 386ca8e..0000000[m
[1m--- a/projects/person_service/src/main/java/dev/cline/apricot/rs/person/PersonMapper.java[m
[1m+++ /dev/null[m
[36m@@ -1,165 +0,0 @@[m
[31m-package dev.cline.apricot.rs.person;[m
[31m-[m
[31m-import java.util.ArrayList;[m
[31m-import java.util.Collections;[m
[31m-import java.util.Comparator;[m
[31m-import java.util.List;[m
[31m-import java.util.concurrent.CopyOnWriteArrayList;[m
[31m-[m
[31m-import jakarta.enterprise.context.ApplicationScoped;[m
[31m-[m
[31m-@ApplicationScoped[m
[31m-public class PersonMapper {[m
[31m-    // 主キー検索[m
[31m-    public Person select(Integer personId) {[m
[31m-        for (Person person : personList) {[m
[31m-            if (person.getPersonId().equals(personId)) {[m
[31m-                return person;[m
[31m-            }[m
[31m-        }[m
[31m-        return null;[m
[31m-    }[m
[31m-[m
[31m-    // 全件検索[m
[31m-    public List<Person> selectAll() {[m
[31m-        Collections.sort(personList, new PersonPersonIdComparator());[m
[31m-        dumpPersonList();[m
[31m-        return personList;[m
[31m-    }[m
[31m-[m
[31m-    // 全件検索（ソート）[m
[31m-    public List<Person> selectSortByAge(boolean isAsc) {[m
[31m-        List<Person> pList = new ArrayList<Person>(personList);[m
[31m-        if (isAsc) {[m
[31m-            Collections.sort(pList, new PersonAgeAscComparator());[m
[31m-        } else {[m
[31m-            Collections.sort(pList, new PersonAgeDescComparator());[m
[31m-        }[m
[31m-        return pList;[m
[31m-    }[m
[31m-[m
[31m-    // 条件検索（指定された年齢以上）[m
[31m-    public List<Person> selectByLowerAge(Integer lowerAge) {[m
[31m-        List<Person> pList = new ArrayList<Person>();[m
[31m-        for (Person person : personList) {[m
[31m-            if (lowerAge <= person.getAge()) {[m
[31m-                pList.add(person);[m
[31m-            }[m
[31m-        }[m
[31m-        return pList;[m
[31m-    }[m
[31m-[m
[31m-    // 最大値取得[m
[31m-    public int selectMaxPersonId() {[m
[31m-        int maxPersonId = 0;[m
[31m-        for (Person person : personList) {[m
[31m-            if (maxPersonId < person.getPersonId()) {[m
[31m-                maxPersonId = person.getPersonId();[m
[31m-            }[m
[31m-        }[m
[31m-        return maxPersonId;[m
[31m-    }[m
[31m-[m
[31m-    // 挿入[m
[31m-    public Person insert(Person person) {[m
[31m-        int maxPersonId = selectMaxPersonId();[m
[31m-        person.setPersonId(maxPersonId + 1);[m
[31m-        personList.add(person);[m
[31m-        dumpPersonList();[m
[31m-        return person;[m
[31m-    }[m
[31m-[m
[31m-    // 一件削除[m
[31m-    public int delete(Integer personId) {[m
[31m-        for (Person person : personList) {[m
[31m-            if (person.getPersonId().equals(personId)) {[m
[31m-                personList.remove(person);[m
[31m-                dumpPersonList();[m
[31m-                return 1;[m
[31m-            }[m
[31m-        }[m
[31m-        dumpPersonList();[m
[31m-        return 0;[m
[31m-    }[m
[31m-[m
[31m-    // 一件更新[m
[31m-    public int update(Person person) {[m
[31m-        for (Person p : personList) {[m
[31m-            if (p.getPersonId().equals(person.getPersonId())) {[m
[31m-                personList.remove(p);[m
[31m-                personList.add(person);[m
[31m-                dumpPersonList();[m
[31m-                return 1;[m
[31m-            }[m
[31m-        }[m
[31m-        dumpPersonList();[m
[31m-        return 0;[m
[31m-    }[m
[31m-[m
[31m-    // 一括更新[m
[31m-    public int updateAge(Integer personId, Integer age) {[m
[31m-        for (Person p : personList) {[m
[31m-            if (p.getPersonId().equals(personId)) {[m
[31m-                p.setAge(age);[m
[31m-                dumpPersonList();[m
[31m-                return 1;[m
[31m-            }[m
[31m-        }[m
[31m-        dumpPersonList();[m
[31m-        return 0;[m
[31m-    }[m
[31m-[m
[31m-    private static List<Person> personList = new CopyOnWriteArrayList<Person>();[m
[31m-[m
[31m-    private static void dumpPersonList() {[m
[31m-        for (Person person : personList) {[m
[31m-            System.out.println(person);[m
[31m-        }[m
[31m-    }[m
[31m-[m
[31m-    // 簡易データベース[m
[31m-    static {[m
[31m-        // Alice[m
[31m-        Person person1 = new Person(1, "Alice", 25, "female");[m
[31m-        personList.add(person1);[m
[31m-        // Bob[m
[31m-        Person person2 = new Person(2, "Bob", 35, "male");[m
[31m-        personList.add(person2);[m
[31m-        // Carol[m
[31m-        Person person3 = new Person(3, "Carol", 30, "female");[m
[31m-        personList.add(person3);[m
[31m-    }[m
[31m-[m
[31m-    static class PersonPersonIdComparator implements Comparator<Person> {[m
[31m-        @Override[m
[31m-        public int compare(Person p1, Person p2) {[m
[31m-            if (p1.getPersonId() < p2.getPersonId())[m
[31m-                return -1;[m
[31m-            if (p1.getPersonId() > p2.getPersonId())[m
[31m-                return 1;[m
[31m-            return 0;[m
[31m-        }[m
[31m-    }[m
[31m-[m
[31m-    static class PersonAgeAscComparator implements Comparator<Person> {[m
[31m-        @Override[m
[31m-        public int compare(Person p1, Person p2) {[m
[31m-            if (p1.getAge() < p2.getAge())[m
[31m-                return 1;[m
[31m-            if (p1.getAge() > p2.getAge())[m
[31m-                return -1;[m
[31m-            return 0;[m
[31m-        }[m
[31m-    }[m
[31m-[m
[31m-    static class PersonAgeDescComparator implements Comparator<Person> {[m
[31m-        @Override[m
[31m-        public int compare(Person p1, Person p2) {[m
[31m-            if (p1.getAge() < p2.getAge())[m
[31m-                return -1;[m
[31m-            if (p1.getAge() > p2.getAge())[m
[31m-                return 1;[m
[31m-            return 0;[m
[31m-        }[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/projects/person_service/src/main/java/dev/cline/apricot/rs/person/PersonResource.java b/projects/person_service/src/main/java/dev/cline/apricot/rs/person/PersonResource.java[m
[1mdeleted file mode 100644[m
[1mindex f60b01b..0000000[m
[1m--- a/projects/person_service/src/main/java/dev/cline/apricot/rs/person/PersonResource.java[m
[1m+++ /dev/null[m
[36m@@ -1,91 +0,0 @@[m
[31m-package dev.cline.apricot.rs.person;[m
[31m-[m
[31m-import java.util.List;[m
[31m-[m
[31m-import jakarta.enterprise.context.ApplicationScoped;[m
[31m-import jakarta.inject.Inject;[m
[31m-import jakarta.ws.rs.Consumes;[m
[31m-import jakarta.ws.rs.DELETE;[m
[31m-import jakarta.ws.rs.GET;[m
[31m-import jakarta.ws.rs.POST;[m
[31m-import jakarta.ws.rs.PUT;[m
[31m-import jakarta.ws.rs.Path;[m
[31m-import jakarta.ws.rs.PathParam;[m
[31m-import jakarta.ws.rs.Produces;[m
[31m-import jakarta.ws.rs.QueryParam;[m
[31m-import jakarta.ws.rs.core.MediaType;[m
[31m-[m
[31m-@ApplicationScoped[m
[31m-@Path("/persons")[m
[31m-public class PersonResource {[m
[31m-[m
[31m-    // インジェクションポイント[m
[31m-    @Inject[m
[31m-    private PersonMapper personMapper;[m
[31m-[m
[31m-    // リソースの取得（主キー検索によるPerson取得）[m
[31m-    @GET[m
[31m-    @Path("/{personId}")[m
[31m-    @Consumes(MediaType.APPLICATION_FORM_URLENCODED)[m
[31m-    @Produces(MediaType.APPLICATION_JSON)[m
[31m-    public Person getPerson(@PathParam("personId") int personId) {[m
[31m-        System.out.println("[ PersonResource#getPerson ]");[m
[31m-        return personMapper.select(personId);[m
[31m-    }[m
[31m-[m
[31m-    // リソースの取得（全Personリスト取得）[m
[31m-    @GET[m
[31m-    @Consumes(MediaType.APPLICATION_FORM_URLENCODED)[m
[31m-    @Produces(MediaType.APPLICATION_JSON)[m
[31m-    public List<Person> getPersonsAll() {[m
[31m-        System.out.println("[ PersonResource#getPersonsAll ]");[m
[31m-        return personMapper.selectAll();[m
[31m-    }[m
[31m-[m
[31m-    // リソースの取得（年齢でソートして全Personリスト取得）[m
[31m-    @GET[m
[31m-    @Path("/sort_by_age")[m
[31m-    @Consumes(MediaType.APPLICATION_FORM_URLENCODED)[m
[31m-    @Produces(MediaType.APPLICATION_JSON)[m
[31m-    public List<Person> getPersonsSortByAge(@QueryParam("isAsc")[m
[31m-            boolean isAsc) {[m
[31m-        System.out.println("[ PersonResource#getPersonsSortByAge ]");[m
[31m-        return personMapper.selectSortByAge(isAsc);[m
[31m-    }[m
[31m-[m
[31m-    // リソースの作成（Personの挿入）[m
[31m-    @POST[m
[31m-    @Consumes(MediaType.APPLICATION_JSON)[m
[31m-    @Produces(MediaType.APPLICATION_JSON)[m
[31m-    public Person createPerson(Person person) {[m
[31m-        System.out.println("[ PersonResource#createPerson ]");[m
[31m-        Person person2 = personMapper.insert(person);[m
[31m-        return person2;[m
[31m-    }[m
[31m-[m
[31m-    // リソースの置換（Personの更新または挿入）[m
[31m-    @PUT[m
[31m-    @Path("/{personId}")[m
[31m-    @Consumes(MediaType.APPLICATION_JSON)[m
[31m-    public void replacePerson(Person person) {[m
[31m-        System.out.println("[ PersonResource#replacePerson ]");[m
[31m-        personMapper.update(person);[m
[31m-    }[m
[31m-[m
[31m-    // リソースの削除（Personの削除）[m
[31m-    @DELETE[m
[31m-    @Path("/{personId}")[m
[31m-    @Consumes(MediaType.APPLICATION_JSON)[m
[31m-    public void removePerson(@PathParam("personId") int personId) {[m
[31m-        System.out.println("[ PersonResource#removePerson ]");[m
[31m-        personMapper.delete(personId);[m
[31m-    }[m
[31m-[m
[31m-    // リソースの更新（年齢）[m
[31m-    public int updatePersonAge(Person person) {[m
[31m-        System.out.println("[ PersonResource#updatePersonAge ]");[m
[31m-        int result = personMapper.updateAge(person.getPersonId(),[m
[31m-                person.getAge());[m
[31m-        return result;[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/projects/person_service/src/main/resources/.gitkeep b/projects/person_service/src/main/resources/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/person_service/src/main/webapp/.gitkeep b/projects/person_service/src/main/webapp/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/person_service/src/main/webapp/WEB-INF/.gitkeep b/projects/person_service/src/main/webapp/WEB-INF/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/person_service/src/main/webapp/WEB-INF/web.xml b/projects/person_service/src/main/webapp/WEB-INF/web.xml[m
[1mdeleted file mode 100644[m
[1mindex b7a659c..0000000[m
[1m--- a/projects/person_service/src/main/webapp/WEB-INF/web.xml[m
[1m+++ /dev/null[m
[36m@@ -1,7 +0,0 @@[m
[31m-<?xml version="1.0" encoding="UTF-8"?>[m
[31m-<web-app xmlns="https://jakarta.ee/xml/ns/jakartaee"[m
[31m-         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"[m
[31m-         xsi:schemaLocation="https://jakarta.ee/xml/ns/jakartaee[m
[31m-         https://jakarta.ee/xml/ns/jakartaee/web-app_5_0.xsd"[m
[31m-         version="5.0">[m
[31m-</web-app>[m
\ No newline at end of file[m
[1mdiff --git a/projects/person_service/src/test/java/.gitkeep b/projects/person_service/src/test/java/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/person_service/src/test/resources/.gitkeep b/projects/person_service/src/test/resources/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/person_struts/.gitkeep b/projects/person_struts/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/rs_greeting_service/.gitignore b/projects/rs_greeting_service/.gitignore[m
[1mdeleted file mode 100644[m
[1mindex 6f1d2c2..0000000[m
[1m--- a/projects/rs_greeting_service/.gitignore[m
[1m+++ /dev/null[m
[36m@@ -1,5 +0,0 @@[m
[31m-/classes[m
[31m-/bin[m
[31m-/build[m
[31m-/target[m
[31m-/.gradle[m
[1mdiff --git a/projects/rs_greeting_service/README.md b/projects/rs_greeting_service/README.md[m
[1mdeleted file mode 100644[m
[1mindex 4b665b4..0000000[m
[1m--- a/projects/rs_greeting_service/README.md[m
[1m+++ /dev/null[m
[36m@@ -1,94 +0,0 @@[m
[31m-# rs_greeting_service プロジェクト[m
[31m-[m
[31m-## 📖 概要[m
[31m-[m
[31m-JAX-RSのより高度な機能を学ぶサンプルプロジェクトです。[m
[31m-JSON処理、クエリパラメータ、HTTPステータスコードの制御を学習できます。[m
[31m-[m
[31m-## 🚀 アプリケーションの開発フローとデプロイ方法[m
[31m-[m
[31m-### 前提条件[m
[31m-[m
[31m-- JDK 21以上[m
[31m-- Gradle 8.x以上[m
[31m-- Payara Server 6（プロジェクトルートの`payara6/`に配置）[m
[31m-[m
[31m-### 1. Payara Serverの起動（研修1回について初回だけ）[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew startPayara[m
[31m-```[m
[31m-[m
[31m-### 2. WARファイルのビルド（アプリケーション作成・更新のたびに実施）[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew :projects:rs_greeting_service:war[m
[31m-```[m
[31m-[m
[31m-### 3. アプリケーションのデプロイ（アプリケーション作成・更新のたびに実施）[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew :projects:rs_greeting_service:deploy[m
[31m-```[m
[31m-[m
[31m-## 📍 アクセスURL[m
[31m-[m
[31m-デプロイ後、以下のURLにアクセス：[m
[31m-[m
[31m-- **Greeting API**: http://localhost:8080/rs_greeting_service/api/greeting[m
[31m-[m
[31m-## 🎯 プロジェクト構成[m
[31m-[m
[31m-```[m
[31m-projects/rs_greeting_service/[m
[31m-├── src/[m
[31m-│   ├── main/[m
[31m-│   │   ├── java/[m
[31m-│   │   │   ├── application/       # JAX-RS Application[m
[31m-│   │   │   ├── resource/          # REST Resource[m
[31m-│   │   │   └── model/             # データモデル[m
[31m-│   │   └── webapp/[m
[31m-│   │       └── WEB-INF/[m
[31m-│   │           ├── web.xml[m
[31m-│   │           └── beans.xml[m
[31m-│   └── test/[m
[31m-└── build/[m
[31m-    └── libs/[m
[31m-        └── rs_greeting_service.war[m
[31m-```[m
[31m-[m
[31m-## 🔧 使用している技術[m
[31m-[m
[31m-- **Jakarta EE 10**[m
[31m-- **Payara Server 6**[m
[31m-- **Jakarta RESTful Web Services (JAX-RS) 3.1**[m
[31m-- **Jakarta JSON Binding (JSON-B)**[m
[31m-- **Jakarta CDI 4.0**[m
[31m-[m
[31m-## 🛑 アプリケーションを停止する[m
[31m-[m
[31m-### アプリケーションのアンデプロイ[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew :projects:rs_greeting_service:undeploy[m
[31m-```[m
[31m-[m
[31m-### Payara Server全体を停止[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew stopPayara[m
[31m-```[m
[31m-[m
[31m-## 🔍 ログ監視[m
[31m-[m
[31m-別のターミナルでログをリアルタイム監視：[m
[31m-[m
[31m-**Windows (PowerShell):**[m
[31m-```powershell[m
[31m-Get-Content -Path payara6\glassfish\domains\domain1\logs\server.log -Wait -Tail 50 -Encoding UTF8[m
[31m-```[m
[31m-[m
[31m-**Linux/Mac:**[m
[31m-```bash[m
[31m-tail -f -n 50 payara6/glassfish/domains/domain1/logs/server.log[m
[31m-```[m
[1mdiff --git a/projects/rs_greeting_service/src/main/java/.gitkeep b/projects/rs_greeting_service/src/main/java/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/rs_greeting_service/src/main/java/dev/cline/apricot/rs/greeting/.LCKMyApplication.java~ b/projects/rs_greeting_service/src/main/java/dev/cline/apricot/rs/greeting/.LCKMyApplication.java~[m
[1mdeleted file mode 100644[m
[1mindex 6cab70a..0000000[m
[1m--- a/projects/rs_greeting_service/src/main/java/dev/cline/apricot/rs/greeting/.LCKMyApplication.java~[m
[1m+++ /dev/null[m
[36m@@ -1 +0,0 @@[m
[31m-D:\GitHubRepos\cline_training_2025\cline_training_answer\projects\rs_greeting_service\src\main\java\jp\mufg\it\ee\rs\greeting\MyApplication.java[m
\ No newline at end of file[m
[1mdiff --git a/projects/rs_greeting_service/src/main/java/dev/cline/apricot/rs/greeting/GreetingResource.java b/projects/rs_greeting_service/src/main/java/dev/cline/apricot/rs/greeting/GreetingResource.java[m
[1mdeleted file mode 100644[m
[1mindex 03a5850..0000000[m
[1m--- a/projects/rs_greeting_service/src/main/java/dev/cline/apricot/rs/greeting/GreetingResource.java[m
[1m+++ /dev/null[m
[36m@@ -1,58 +0,0 @@[m
[31m-package dev.cline.apricot.rs.greeting;[m
[31m-[m
[31m-import jakarta.ws.rs.CookieParam;[m
[31m-import jakarta.ws.rs.FormParam;[m
[31m-import jakarta.ws.rs.GET;[m
[31m-import jakarta.ws.rs.HeaderParam;[m
[31m-import jakarta.ws.rs.POST;[m
[31m-import jakarta.ws.rs.Path;[m
[31m-import jakarta.ws.rs.PathParam;[m
[31m-import jakarta.ws.rs.Produces;[m
[31m-import jakarta.ws.rs.QueryParam;[m
[31m-import jakarta.ws.rs.core.MediaType;[m
[31m-[m
[31m-@Path("/greeting")[m
[31m-public class GreetingResource {[m
[31m-[m
[31m-    @GET[m
[31m-    @Path("/hello/{personName}")[m
[31m-    @Produces(MediaType.TEXT_PLAIN)[m
[31m-    public String sayHello(@PathParam("personName") String personName) {[m
[31m-        return "Hello " + personName + "!";[m
[31m-    }[m
[31m-[m
[31m-    @GET[m
[31m-    @Path("/goodbye/{personName}")[m
[31m-    @Produces(MediaType.TEXT_PLAIN)[m
[31m-    public String sayGoodbye(@PathParam("personName") String personName) {[m
[31m-        return "Goodbye " + personName + "!";[m
[31m-    }[m
[31m-[m
[31m-    @GET[m
[31m-    @Path("/morning")[m
[31m-    @Produces(MediaType.TEXT_PLAIN)[m
[31m-    public String sayGoodMorning(@QueryParam("personName") String personName) {[m
[31m-        return "Good Morning " + personName + "!";[m
[31m-    }[m
[31m-[m
[31m-    @POST[m
[31m-    @Path("/afternoon")[m
[31m-    @Produces(MediaType.TEXT_PLAIN)[m
[31m-    public String sayGoodAfternoon(@FormParam("personName") String personName) {[m
[31m-        return "Good Afternoon " + personName + "!";[m
[31m-    }[m
[31m-[m
[31m-    @GET[m
[31m-    @Path("/night")[m
[31m-    @Produces(MediaType.TEXT_PLAIN)[m
[31m-    public String sayGoodNight(@HeaderParam("personName") String personName) {[m
[31m-        return "Good Night " + personName + "!";[m
[31m-    }[m
[31m-[m
[31m-    @GET[m
[31m-    @Path("/evening")[m
[31m-    @Produces(MediaType.TEXT_PLAIN)[m
[31m-    public String sayGoodEvening(@CookieParam("personName") String personName) {[m
[31m-        return "Good Evening " + personName + "!";[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/projects/rs_greeting_service/src/main/java/dev/cline/apricot/rs/greeting/MyApplication.java b/projects/rs_greeting_service/src/main/java/dev/cline/apricot/rs/greeting/MyApplication.java[m
[1mdeleted file mode 100644[m
[1mindex 771c4e3..0000000[m
[1m--- a/projects/rs_greeting_service/src/main/java/dev/cline/apricot/rs/greeting/MyApplication.java[m
[1m+++ /dev/null[m
[36m@@ -1,8 +0,0 @@[m
[31m-package dev.cline.apricot.rs.greeting;[m
[31m-[m
[31m-import jakarta.ws.rs.ApplicationPath;[m
[31m-import jakarta.ws.rs.core.Application;[m
[31m-[m
[31m-@ApplicationPath("/")[m
[31m-public class MyApplication extends Application {[m
[31m-}[m
[1mdiff --git a/projects/rs_greeting_service/src/main/resources/.gitkeep b/projects/rs_greeting_service/src/main/resources/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/rs_greeting_service/src/main/webapp/.gitkeep b/projects/rs_greeting_service/src/main/webapp/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/rs_greeting_service/src/main/webapp/WEB-INF/.gitkeep b/projects/rs_greeting_service/src/main/webapp/WEB-INF/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/rs_greeting_service/src/main/webapp/WEB-INF/web.xml b/projects/rs_greeting_service/src/main/webapp/WEB-INF/web.xml[m
[1mdeleted file mode 100644[m
[1mindex b7a659c..0000000[m
[1m--- a/projects/rs_greeting_service/src/main/webapp/WEB-INF/web.xml[m
[1m+++ /dev/null[m
[36m@@ -1,7 +0,0 @@[m
[31m-<?xml version="1.0" encoding="UTF-8"?>[m
[31m-<web-app xmlns="https://jakarta.ee/xml/ns/jakartaee"[m
[31m-         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"[m
[31m-         xsi:schemaLocation="https://jakarta.ee/xml/ns/jakartaee[m
[31m-         https://jakarta.ee/xml/ns/jakartaee/web-app_5_0.xsd"[m
[31m-         version="5.0">[m
[31m-</web-app>[m
\ No newline at end of file[m
[1mdiff --git a/projects/rs_greeting_service/src/test/java/.gitkeep b/projects/rs_greeting_service/src/test/java/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/rs_greeting_service/src/test/resources/.gitkeep b/projects/rs_greeting_service/src/test/resources/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/rs_hello_service/.gitignore b/projects/rs_hello_service/.gitignore[m
[1mdeleted file mode 100644[m
[1mindex 6f1d2c2..0000000[m
[1m--- a/projects/rs_hello_service/.gitignore[m
[1m+++ /dev/null[m
[36m@@ -1,5 +0,0 @@[m
[31m-/classes[m
[31m-/bin[m
[31m-/build[m
[31m-/target[m
[31m-/.gradle[m
[1mdiff --git a/projects/rs_hello_service/README.md b/projects/rs_hello_service/README.md[m
[1mdeleted file mode 100644[m
[1mindex 1e13ea0..0000000[m
[1m--- a/projects/rs_hello_service/README.md[m
[1m+++ /dev/null[m
[36m@@ -1,92 +0,0 @@[m
[31m-# rs_hello_service プロジェクト[m
[31m-[m
[31m-## 📖 概要[m
[31m-[m
[31m-JAX-RS (Jakarta RESTful Web Services) の基本を学ぶサンプルプロジェクトです。[m
[31m-RESTful APIの作成、HTTPメソッド、パスパラメータを学習できます。[m
[31m-[m
[31m-## 🚀 アプリケーションの開発フローとデプロイ方法[m
[31m-[m
[31m-### 前提条件[m
[31m-[m
[31m-- JDK 21以上[m
[31m-- Gradle 8.x以上[m
[31m-- Payara Server 6（プロジェクトルートの`payara6/`に配置）[m
[31m-[m
[31m-### 1. Payara Serverの起動（研修1回について初回だけ）[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew startPayara[m
[31m-```[m
[31m-[m
[31m-### 2. WARファイルのビルド（アプリケーション作成・更新のたびに実施）[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew :projects:rs_hello_service:war[m
[31m-```[m
[31m-[m
[31m-### 3. アプリケーションのデプロイ（アプリケーション作成・更新のたびに実施）[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew :projects:rs_hello_service:deploy[m
[31m-```[m
[31m-[m
[31m-## 📍 アクセスURL[m
[31m-[m
[31m-デプロイ後、以下のURLにアクセス：[m
[31m-[m
[31m-- **Hello API**: http://localhost:8080/rs_hello_service/api/hello[m
[31m-[m
[31m-## 🎯 プロジェクト構成[m
[31m-[m
[31m-```[m
[31m-projects/rs_hello_service/[m
[31m-├── src/[m
[31m-│   ├── main/[m
[31m-│   │   ├── java/[m
[31m-│   │   │   ├── application/       # JAX-RS Application[m
[31m-│   │   │   └── resource/          # REST Resource[m
[31m-│   │   └── webapp/[m
[31m-│   │       └── WEB-INF/[m
[31m-│   │           ├── web.xml[m
[31m-│   │           └── beans.xml[m
[31m-│   └── test/[m
[31m-└── build/[m
[31m-    └── libs/[m
[31m-        └── rs_hello_service.war[m
[31m-```[m
[31m-[m
[31m-## 🔧 使用している技術[m
[31m-[m
[31m-- **Jakarta EE 10**[m
[31m-- **Payara Server 6**[m
[31m-- **Jakarta RESTful Web Services (JAX-RS) 3.1**[m
[31m-- **Jakarta CDI 4.0**[m
[31m-[m
[31m-## 🛑 アプリケーションを停止する[m
[31m-[m
[31m-### アプリケーションのアンデプロイ[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew :projects:rs_hello_service:undeploy[m
[31m-```[m
[31m-[m
[31m-### Payara Server全体を停止[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew stopPayara[m
[31m-```[m
[31m-[m
[31m-## 🔍 ログ監視[m
[31m-[m
[31m-別のターミナルでログをリアルタイム監視：[m
[31m-[m
[31m-**Windows (PowerShell):**[m
[31m-```powershell[m
[31m-Get-Content -Path payara6\glassfish\domains\domain1\logs\server.log -Wait -Tail 50 -Encoding UTF8[m
[31m-```[m
[31m-[m
[31m-**Linux/Mac:**[m
[31m-```bash[m
[31m-tail -f -n 50 payara6/glassfish/domains/domain1/logs/server.log[m
[31m-```[m
[1mdiff --git a/projects/rs_hello_service/src/main/java/.gitkeep b/projects/rs_hello_service/src/main/java/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/rs_hello_service/src/main/java/dev/cline/apricot/rs/hello/HelloResource.java b/projects/rs_hello_service/src/main/java/dev/cline/apricot/rs/hello/HelloResource.java[m
[1mdeleted file mode 100644[m
[1mindex bf943d5..0000000[m
[1m--- a/projects/rs_hello_service/src/main/java/dev/cline/apricot/rs/hello/HelloResource.java[m
[1m+++ /dev/null[m
[36m@@ -1,16 +0,0 @@[m
[31m-package dev.cline.apricot.rs.hello;[m
[31m-[m
[31m-import jakarta.ws.rs.GET;[m
[31m-import jakarta.ws.rs.Path;[m
[31m-import jakarta.ws.rs.Produces;[m
[31m-[m
[31m-@Path("/hello")[m
[31m-public class HelloResource {[m
[31m-[m
[31m-    @GET[m
[31m-    @Path("/jaxrs")[m
[31m-    @Produces("text/plain")[m
[31m-    public String sayHello() {[m
[31m-        return "Hello JAX-RS!";[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/projects/rs_hello_service/src/main/java/dev/cline/apricot/rs/hello/MyApplication.java b/projects/rs_hello_service/src/main/java/dev/cline/apricot/rs/hello/MyApplication.java[m
[1mdeleted file mode 100644[m
[1mindex 5ac9b99..0000000[m
[1m--- a/projects/rs_hello_service/src/main/java/dev/cline/apricot/rs/hello/MyApplication.java[m
[1m+++ /dev/null[m
[36m@@ -1,10 +0,0 @@[m
[31m-package dev.cline.apricot.rs.hello;[m
[31m-[m
[31m-import jakarta.ws.rs.ApplicationPath;[m
[31m-import jakarta.ws.rs.core.Application;[m
[31m-[m
[31m-// Quarkus注記：このクラスはQuarkusでは不要ですが、互換性のため残しています。[m
[31m-// application.propertiesで quarkus.resteasy-reactive.path=/ を設定することで同じ動作を実現できます。[m
[31m-@ApplicationPath("/")[m
[31m-public class MyApplication extends Application {[m
[31m-}[m
[1mdiff --git a/projects/rs_hello_service/src/main/resources/.gitkeep b/projects/rs_hello_service/src/main/resources/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/rs_hello_service/src/main/webapp/.gitkeep b/projects/rs_hello_service/src/main/webapp/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/rs_hello_service/src/main/webapp/WEB-INF/.gitkeep b/projects/rs_hello_service/src/main/webapp/WEB-INF/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/rs_hello_service/src/main/webapp/WEB-INF/web.xml b/projects/rs_hello_service/src/main/webapp/WEB-INF/web.xml[m
[1mdeleted file mode 100644[m
[1mindex b7a659c..0000000[m
[1m--- a/projects/rs_hello_service/src/main/webapp/WEB-INF/web.xml[m
[1m+++ /dev/null[m
[36m@@ -1,7 +0,0 @@[m
[31m-<?xml version="1.0" encoding="UTF-8"?>[m
[31m-<web-app xmlns="https://jakarta.ee/xml/ns/jakartaee"[m
[31m-         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"[m
[31m-         xsi:schemaLocation="https://jakarta.ee/xml/ns/jakartaee[m
[31m-         https://jakarta.ee/xml/ns/jakartaee/web-app_5_0.xsd"[m
[31m-         version="5.0">[m
[31m-</web-app>[m
\ No newline at end of file[m
[1mdiff --git a/projects/rs_hello_service/src/test/java/.gitkeep b/projects/rs_hello_service/src/test/java/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/rs_hello_service/src/test/resources/.gitkeep b/projects/rs_hello_service/src/test/resources/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/servlet_jsp/.gitignore b/projects/servlet_jsp/.gitignore[m
[1mdeleted file mode 100644[m
[1mindex 6f1d2c2..0000000[m
[1m--- a/projects/servlet_jsp/.gitignore[m
[1m+++ /dev/null[m
[36m@@ -1,5 +0,0 @@[m
[31m-/classes[m
[31m-/bin[m
[31m-/build[m
[31m-/target[m
[31m-/.gradle[m
[1mdiff --git a/projects/servlet_jsp/README.md b/projects/servlet_jsp/README.md[m
[1mdeleted file mode 100644[m
[1mindex 4f3a262..0000000[m
[1m--- a/projects/servlet_jsp/README.md[m
[1m+++ /dev/null[m
[36m@@ -1,94 +0,0 @@[m
[31m-﻿# servlet_jsp プロジェクト[m
[31m-[m
[31m-## 📖 概要[m
[31m-[m
[31m-Jakarta ServletとJSP (Jakarta Server Pages) の基本を学ぶサンプルプロジェクトです。[m
[31m-サーブレット、JSPの連携、フォーム処理を学習できます。[m
[31m-[m
[31m-## 🚀 アプリケーションの開発フローとデプロイ方法[m
[31m-[m
[31m-### 前提条件[m
[31m-[m
[31m-- JDK 21以上[m
[31m-- Gradle 8.x以上[m
[31m-- Payara Server 6（プロジェクトルートの`payara6/`に配置）[m
[31m-[m
[31m-### 1. Payara Serverの起動（研修1回について初回だけ）[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew startPayara[m
[31m-```[m
[31m-[m
[31m-### 2. WARファイルのビルド（アプリケーション作成・更新のたびに実施）[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew :projects:servlet_jsp:war[m
[31m-```[m
[31m-[m
[31m-### 3. アプリケーションのデプロイ（アプリケーション作成・更新のたびに実施）[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew :projects:servlet_jsp:deploy[m
[31m-```[m
[31m-[m
[31m-## 📍 アクセスURL[m
[31m-[m
[31m-デプロイ後、以下のURLにアクセス：[m
[31m-[m
[31m-- **トップページ**: http://localhost:8080/servlet_jsp/PersonServlet?personName=Alice[m
[31m-[m
[31m-## 🎯 プロジェクト構成[m
[31m-[m
[31m-```[m
[31m-projects/servlet_jsp/[m
[31m-├── src/[m
[31m-│   ├── main/[m
[31m-│   │   ├── java/[m
[31m-│   │   │   └── servlet/           # Servletクラス[m
[31m-│   │   └── webapp/[m
[31m-│   │       ├── index.html[m
[31m-│   │       ├── WEB-INF/[m
[31m-│   │       │   ├── web.xml[m
[31m-│   │       │   └── jsp/           # JSPファイル[m
[31m-│   │       └── css/               # スタイルシート[m
[31m-│   └── test/[m
[31m-└── build/[m
[31m-    └── libs/[m
[31m-        └── servlet_jsp.war[m
[31m-```[m
[31m-[m
[31m-## 🔧 使用している技術[m
[31m-[m
[31m-- **Jakarta EE 10**[m
[31m-- **Payara Server 6**[m
[31m-- **Jakarta Servlet 6.0**[m
[31m-- **Jakarta Server Pages (JSP) 3.1**[m
[31m-- **JSTL 3.0**[m
[31m-[m
[31m-## 🛑 アプリケーションを停止する[m
[31m-[m
[31m-### アプリケーションのアンデプロイ[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew :projects:servlet_jsp:undeploy[m
[31m-```[m
[31m-[m
[31m-### Payara Server全体を停止[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew stopPayara[m
[31m-```[m
[31m-[m
[31m-## 🔍 ログ監視[m
[31m-[m
[31m-別のターミナルでログをリアルタイム監視：[m
[31m-[m
[31m-**Windows (PowerShell):**[m
[31m-```powershell[m
[31m-Get-Content -Path payara6\glassfish\domains\domain1\logs\server.log -Wait -Tail 50 -Encoding UTF8[m
[31m-```[m
[31m-[m
[31m-**Linux/Mac:**[m
[31m-```bash[m
[31m-tail -f -n 50 payara6/glassfish/domains/domain1/logs/server.log[m
[31m-```[m
[1mdiff --git a/projects/servlet_jsp/src/main/java/.gitkeep b/projects/servlet_jsp/src/main/java/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/servlet_jsp/src/main/java/dev/cline/apricot/servlet/.LCKPersonServlet.java~ b/projects/servlet_jsp/src/main/java/dev/cline/apricot/servlet/.LCKPersonServlet.java~[m
[1mdeleted file mode 100644[m
[1mindex 18380a3..0000000[m
[1m--- a/projects/servlet_jsp/src/main/java/dev/cline/apricot/servlet/.LCKPersonServlet.java~[m
[1m+++ /dev/null[m
[36m@@ -1 +0,0 @@[m
[31m-D:\GitHubRepos\cline_training_2025\cline_training_answer\projects\servlet_jsp\src\main\java\jp\mufg\it\ee\servlet\PersonServlet.java[m
\ No newline at end of file[m
[1mdiff --git a/projects/servlet_jsp/src/main/java/dev/cline/apricot/servlet/PersonServlet.java b/projects/servlet_jsp/src/main/java/dev/cline/apricot/servlet/PersonServlet.java[m
[1mdeleted file mode 100644[m
[1mindex aeff197..0000000[m
[1m--- a/projects/servlet_jsp/src/main/java/dev/cline/apricot/servlet/PersonServlet.java[m
[1m+++ /dev/null[m
[36m@@ -1,42 +0,0 @@[m
[31m-package dev.cline.apricot.servlet;[m
[31m-[m
[31m-import java.io.IOException;[m
[31m-import java.io.PrintWriter;[m
[31m-import jakarta.servlet.ServletException;[m
[31m-import jakarta.servlet.annotation.WebServlet;[m
[31m-import jakarta.servlet.http.HttpServlet;[m
[31m-import jakarta.servlet.http.HttpServletRequest;[m
[31m-import jakarta.servlet.http.HttpServletResponse;[m
[31m-[m
[31m-@WebServlet(urlPatterns = "/PersonServlet")[m
[31m-public class PersonServlet extends HttpServlet {[m
[31m-[m
[31m-    public void doGet(HttpServletRequest request, HttpServletResponse response)[m
[31m-            throws ServletException, IOException {[m
[31m-[m
[31m-        // リクエストの文字コードを設定する[m
[31m-        request.setCharacterEncoding("UTF-8");[m
[31m-[m
[31m-        // 入力値を取得する[m
[31m-        String personName = request.getParameter("personName");[m
[31m-        String country = request.getParameter("country");[m
[31m-[m
[31m-        // ビジネスロジックを実行する[m
[31m-        String message = null;[m
[31m-        if (country != null && country.equals("japan")) {[m
[31m-            message = "こんにちは！私は" + personName + "です";[m
[31m-        } else {[m
[31m-            message = "Hello! I'm " + personName + ".";[m
[31m-        }[m
[31m-[m
[31m-        // ビジネスロジックの結果を含むHTMLコードを出力する[m
[31m-        response.setContentType("text/html; charset=UTF-8");[m
[31m-        PrintWriter out = response.getWriter();[m
[31m-        out.println("<html>");[m
[31m-        out.println("<body>");[m
[31m-        out.println("<div>" + personName + "さんのメッセージ</div>");[m
[31m-        out.println("<div>" + message + "</div>");[m
[31m-        out.println("</body>");[m
[31m-        out.println("</html>");[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/projects/servlet_jsp/src/main/resources/.gitkeep b/projects/servlet_jsp/src/main/resources/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/servlet_jsp/src/main/webapp/.gitkeep b/projects/servlet_jsp/src/main/webapp/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/servlet_jsp/src/main/webapp/PersonPage.jsp b/projects/servlet_jsp/src/main/webapp/PersonPage.jsp[m
[1mdeleted file mode 100644[m
[1mindex c833691..0000000[m
[1m--- a/projects/servlet_jsp/src/main/webapp/PersonPage.jsp[m
[1m+++ /dev/null[m
[36m@@ -1,16 +0,0 @@[m
[31m-﻿<%@ page contentType="text/html; charset=UTF-8"%>[m
[31m-<%@ page import="java.util.*"%>[m
[31m-<%[m
[31m-    String personName = request.getParameter("personName");[m
[31m-    String country = request.getParameter("country");[m
[31m-%>[m
[31m-<html>[m
[31m-<body>[m
[31m-<div><%= personName %>さんのメッセージ</div>[m
[31m-<% if (country != null && country.equals("japan")) { %>[m
[31m-  <div>こんにちは！私は<%= personName %>です</div>[m
[31m-<% } else { %>[m
[31m-  <div>Hello! I'm <%= personName %>.</div>[m
[31m-<% } %>[m
[31m-</body>[m
[31m-</html>[m
\ No newline at end of file[m
[1mdiff --git a/projects/servlet_jsp/src/main/webapp/WEB-INF/.gitkeep b/projects/servlet_jsp/src/main/webapp/WEB-INF/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/servlet_jsp/src/main/webapp/WEB-INF/beans.xml b/projects/servlet_jsp/src/main/webapp/WEB-INF/beans.xml[m
[1mdeleted file mode 100644[m
[1mindex 0fc6e30..0000000[m
[1m--- a/projects/servlet_jsp/src/main/webapp/WEB-INF/beans.xml[m
[1m+++ /dev/null[m
[36m@@ -1,6 +0,0 @@[m
[31m-<beans xmlns="http://xmlns.jcp.org/xml/ns/javaee"[m
[31m-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"[m
[31m-       xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee[m
[31m-       http://xmlns.jcp.org/xml/ns/javaee/beans_2_0.xsd"[m
[31m-       bean-discovery-mode="all" version="2.0">[m
[31m-</beans>[m
\ No newline at end of file[m
[1mdiff --git a/projects/servlet_jsp/src/main/webapp/WEB-INF/jsp/PersonOutputPage.jsp b/projects/servlet_jsp/src/main/webapp/WEB-INF/jsp/PersonOutputPage.jsp[m
[1mdeleted file mode 100644[m
[1mindex a9e28e0..0000000[m
[1m--- a/projects/servlet_jsp/src/main/webapp/WEB-INF/jsp/PersonOutputPage.jsp[m
[1m+++ /dev/null[m
[36m@@ -1,8 +0,0 @@[m
[31m-﻿<%@ page contentType="text/html; charset=UTF-8"%>[m
[31m-<%@ page pageEncoding="UTF-8"%>[m
[31m-<html>[m
[31m-<body>[m
[31m-<div>${person.personName}さんのメッセージ</div>[m
[31m-<div>${person.message}</div>[m
[31m-</body>[m
[31m-</html>[m
\ No newline at end of file[m
[1mdiff --git a/projects/servlet_jsp/src/main/webapp/WEB-INF/web.xml b/projects/servlet_jsp/src/main/webapp/WEB-INF/web.xml[m
[1mdeleted file mode 100644[m
[1mindex b7a659c..0000000[m
[1m--- a/projects/servlet_jsp/src/main/webapp/WEB-INF/web.xml[m
[1m+++ /dev/null[m
[36m@@ -1,7 +0,0 @@[m
[31m-<?xml version="1.0" encoding="UTF-8"?>[m
[31m-<web-app xmlns="https://jakarta.ee/xml/ns/jakartaee"[m
[31m-         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"[m
[31m-         xsi:schemaLocation="https://jakarta.ee/xml/ns/jakartaee[m
[31m-         https://jakarta.ee/xml/ns/jakartaee/web-app_5_0.xsd"[m
[31m-         version="5.0">[m
[31m-</web-app>[m
\ No newline at end of file[m
[1mdiff --git a/projects/servlet_jsp/src/test/java/.gitkeep b/projects/servlet_jsp/src/test/java/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/servlet_jsp/src/test/resources/.gitkeep b/projects/servlet_jsp/src/test/resources/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/servlet_jsp_mvc/.gitignore b/projects/servlet_jsp_mvc/.gitignore[m
[1mdeleted file mode 100644[m
[1mindex 6f1d2c2..0000000[m
[1m--- a/projects/servlet_jsp_mvc/.gitignore[m
[1m+++ /dev/null[m
[36m@@ -1,5 +0,0 @@[m
[31m-/classes[m
[31m-/bin[m
[31m-/build[m
[31m-/target[m
[31m-/.gradle[m
[1mdiff --git a/projects/servlet_jsp_mvc/README.md b/projects/servlet_jsp_mvc/README.md[m
[1mdeleted file mode 100644[m
[1mindex d258697..0000000[m
[1m--- a/projects/servlet_jsp_mvc/README.md[m
[1m+++ /dev/null[m
[36m@@ -1,96 +0,0 @@[m
[31m-# servlet_jsp_mvc プロジェクト[m
[31m-[m
[31m-## 📖 概要[m
[31m-[m
[31m-Servlet + JSPを使用したMVC (Model-View-Controller) パターンの実装サンプルです。[m
[31m-アプリケーションアーキテクチャの基本を学習できます。[m
[31m-[m
[31m-## 🚀 アプリケーションの開発フローとデプロイ方法[m
[31m-[m
[31m-### 前提条件[m
[31m-[m
[31m-- JDK 21以上[m
[31m-- Gradle 8.x以上[m
[31m-- Payara Server 6（プロジェクトルートの`payara6/`に配置）[m
[31m-[m
[31m-### 1. Payara Serverの起動（研修1回について初回だけ）[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew startPayara[m
[31m-```[m
[31m-[m
[31m-### 2. WARファイルのビルド（アプリケーション作成・更新のたびに実施）[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew :projects:servlet_jsp_mvc:war[m
[31m-```[m
[31m-[m
[31m-### 3. アプリケーションのデプロイ（アプリケーション作成・更新のたびに実施）[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew :projects:servlet_jsp_mvc:deploy[m
[31m-```[m
[31m-[m
[31m-## 📍 アクセスURL[m
[31m-[m
[31m-デプロイ後、以下のURLにアクセス：[m
[31m-[m
[31m-- **トップページ**: http://localhost:8080/servlet_jsp_mvc/[m
[31m-[m
[31m-## 🎯 プロジェクト構成[m
[31m-[m
[31m-```[m
[31m-projects/servlet_jsp_mvc/[m
[31m-├── src/[m
[31m-│   ├── main/[m
[31m-│   │   ├── java/[m
[31m-│   │   │   ├── controller/        # Controller (Servlet)[m
[31m-│   │   │   ├── model/             # Model (ビジネスロジック)[m
[31m-│   │   │   └── bean/              # JavaBeans[m
[31m-│   │   └── webapp/[m
[31m-│   │       ├── index.html[m
[31m-│   │       ├── WEB-INF/[m
[31m-│   │       │   ├── web.xml[m
[31m-│   │       │   └── jsp/           # View (JSP)[m
[31m-│   │       └── css/[m
[31m-│   └── test/[m
[31m-└── build/[m
[31m-    └── libs/[m
[31m-        └── servlet_jsp_mvc.war[m
[31m-```[m
[31m-[m
[31m-## 🔧 使用している技術[m
[31m-[m
[31m-- **Jakarta EE 10**[m
[31m-- **Payara Server 6**[m
[31m-- **Jakarta Servlet 6.0**[m
[31m-- **Jakarta Server Pages (JSP) 3.1**[m
[31m-- **MVC パターン**[m
[31m-[m
[31m-## 🛑 アプリケーションを停止する[m
[31m-[m
[31m-### アプリケーションのアンデプロイ[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew :projects:servlet_jsp_mvc:undeploy[m
[31m-```[m
[31m-[m
[31m-### Payara Server全体を停止[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew stopPayara[m
[31m-```[m
[31m-[m
[31m-## 🔍 ログ監視[m
[31m-[m
[31m-別のターミナルでログをリアルタイム監視：[m
[31m-[m
[31m-**Windows (PowerShell):**[m
[31m-```powershell[m
[31m-Get-Content -Path payara6\glassfish\domains\domain1\logs\server.log -Wait -Tail 50 -Encoding UTF8[m
[31m-```[m
[31m-[m
[31m-**Linux/Mac:**[m
[31m-```bash[m
[31m-tail -f -n 50 payara6/glassfish/domains/domain1/logs/server.log[m
[31m-```[m
[1mdiff --git a/projects/servlet_jsp_mvc/src/main/java/.gitkeep b/projects/servlet_jsp_mvc/src/main/java/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/servlet_jsp_mvc/src/main/java/dev/cline/apricot/servlet/mvc/.LCKPersonServlet.java~ b/projects/servlet_jsp_mvc/src/main/java/dev/cline/apricot/servlet/mvc/.LCKPersonServlet.java~[m
[1mdeleted file mode 100644[m
[1mindex 4082bff..0000000[m
[1m--- a/projects/servlet_jsp_mvc/src/main/java/dev/cline/apricot/servlet/mvc/.LCKPersonServlet.java~[m
[1m+++ /dev/null[m
[36m@@ -1 +0,0 @@[m
[31m-D:\GitHubRepos\cline_training_2025\cline_training_answer\projects\servlet_jsp_mvc\src\main\java\jp\mufg\it\ee\servlet\mvc\PersonServlet.java[m
\ No newline at end of file[m
[1mdiff --git a/projects/servlet_jsp_mvc/src/main/java/dev/cline/apricot/servlet/mvc/PersonLogic.java b/projects/servlet_jsp_mvc/src/main/java/dev/cline/apricot/servlet/mvc/PersonLogic.java[m
[1mdeleted file mode 100644[m
[1mindex c475544..0000000[m
[1m--- a/projects/servlet_jsp_mvc/src/main/java/dev/cline/apricot/servlet/mvc/PersonLogic.java[m
[1m+++ /dev/null[m
[36m@@ -1,11 +0,0 @@[m
[31m-package dev.cline.apricot.servlet.mvc;[m
[31m-[m
[31m-public class PersonLogic {[m
[31m-    public String sayHello(String personName, String country) {[m
[31m-        if (country != null && country.equals("japan")) {[m
[31m-            return "こんにちは！私は" + personName + "です";[m
[31m-        } else {[m
[31m-            return "Hello! I'm " + personName + ".";[m
[31m-        }[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/projects/servlet_jsp_mvc/src/main/java/dev/cline/apricot/servlet/mvc/PersonModel.java b/projects/servlet_jsp_mvc/src/main/java/dev/cline/apricot/servlet/mvc/PersonModel.java[m
[1mdeleted file mode 100644[m
[1mindex 15b54b4..0000000[m
[1m--- a/projects/servlet_jsp_mvc/src/main/java/dev/cline/apricot/servlet/mvc/PersonModel.java[m
[1m+++ /dev/null[m
[36m@@ -1,48 +0,0 @@[m
[31m-package dev.cline.apricot.servlet.mvc;[m
[31m-[m
[31m-public class PersonModel {[m
[31m-    // フィールド（状態）[m
[31m-    private String personName;[m
[31m-    private String country;[m
[31m-    private String message;[m
[31m-[m
[31m-    // コンストラクタ[m
[31m-    public PersonModel(String personName, String country) {[m
[31m-        this.personName = personName;[m
[31m-        this.country = country;[m
[31m-    }[m
[31m-[m
[31m-    // アクセサメソッド[m
[31m-    public String getPersonName() {[m
[31m-        return personName;[m
[31m-    }[m
[31m-[m
[31m-    public void setPersonName(String personName) {[m
[31m-        this.personName = personName;[m
[31m-    }[m
[31m-[m
[31m-    public String getCountry() {[m
[31m-        return country;[m
[31m-    }[m
[31m-[m
[31m-    public void setCountry(String country) {[m
[31m-        this.country = country;[m
[31m-    }[m
[31m-[m
[31m-    public String getMessage() {[m
[31m-        return message;[m
[31m-    }[m
[31m-[m
[31m-    public void setMessage(String message) {[m
[31m-        this.message = message;[m
[31m-    }[m
[31m-[m
[31m-    // ビジネスメソッド[m
[31m-    public void sayHello() {[m
[31m-        if (country != null && country.equals("japan")) {[m
[31m-            message = "こんにちは！私は" + personName + "です";[m
[31m-        } else {[m
[31m-            message = "Hello! I'm " + personName + ".";[m
[31m-        }[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/projects/servlet_jsp_mvc/src/main/java/dev/cline/apricot/servlet/mvc/PersonServlet.java b/projects/servlet_jsp_mvc/src/main/java/dev/cline/apricot/servlet/mvc/PersonServlet.java[m
[1mdeleted file mode 100644[m
[1mindex 49c0b3d..0000000[m
[1m--- a/projects/servlet_jsp_mvc/src/main/java/dev/cline/apricot/servlet/mvc/PersonServlet.java[m
[1m+++ /dev/null[m
[36m@@ -1,35 +0,0 @@[m
[31m-package dev.cline.apricot.servlet.mvc;[m
[31m-[m
[31m-import java.io.IOException;[m
[31m-[m
[31m-import jakarta.servlet.RequestDispatcher;[m
[31m-import jakarta.servlet.ServletException;[m
[31m-import jakarta.servlet.annotation.WebServlet;[m
[31m-import jakarta.servlet.http.HttpServlet;[m
[31m-import jakarta.servlet.http.HttpServletRequest;[m
[31m-import jakarta.servlet.http.HttpServletResponse;[m
[31m-[m
[31m-@WebServlet("/PersonServlet")[m
[31m-public class PersonServlet extends HttpServlet {[m
[31m-    public void doPost(HttpServletRequest request, HttpServletResponse response)[m
[31m-            throws ServletException, IOException {[m
[31m-        // リクエストの文字コードを設定する[m
[31m-        request.setCharacterEncoding("UTF-8");[m
[31m-[m
[31m-        // 入力値を取得する[m
[31m-        String personName = request.getParameter("personName");[m
[31m-        String country = request.getParameter("country");[m
[31m-[m
[31m-        // モデルを呼び出してビジネスロジックを実行する[m
[31m-        PersonModel person = new PersonModel(personName, country);[m
[31m-        person.sayHello();[m
[31m-[m
[31m-        // リクエストスコープにモデルを格納する[m
[31m-        request.setAttribute("person", person);[m
[31m-[m
[31m-        // リクエストをJSPページにフォワードする[m
[31m-        RequestDispatcher rd = request.getRequestDispatcher([m
[31m-                "/WEB-INF/jsp/PersonOutputPage.jsp");[m
[31m-        rd.forward(request, response);[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/projects/servlet_jsp_mvc/src/main/resources/.gitkeep b/projects/servlet_jsp_mvc/src/main/resources/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/servlet_jsp_mvc/src/main/webapp/.gitkeep b/projects/servlet_jsp_mvc/src/main/webapp/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/servlet_jsp_mvc/src/main/webapp/PersonInputPage.html b/projects/servlet_jsp_mvc/src/main/webapp/PersonInputPage.html[m
[1mdeleted file mode 100644[m
[1mindex 987ad7e..0000000[m
[1m--- a/projects/servlet_jsp_mvc/src/main/webapp/PersonInputPage.html[m
[1m+++ /dev/null[m
[36m@@ -1,16 +0,0 @@[m
[31m-﻿<!DOCTYPE html>[m
[31m-<html lang="ja">[m
[31m-<body>[m
[31m-  <form action="/servlet_jsp_mvc/PersonServlet" method="POST">[m
[31m-    <div>[m
[31m-      <span>名前</span>[m
[31m-      <input type="text" name="personName">[m
[31m-    </div>[m
[31m-    <div>[m
[31m-      <span>国</span>[m
[31m-      <input type="text" name="country">[m
[31m-    </div>[m
[31m-    <input type="submit" value="送信">[m
[31m-  </form>[m
[31m-</body>[m
[31m-</html>[m
\ No newline at end of file[m
[1mdiff --git a/projects/servlet_jsp_mvc/src/main/webapp/WEB-INF/.gitkeep b/projects/servlet_jsp_mvc/src/main/webapp/WEB-INF/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/servlet_jsp_mvc/src/main/webapp/WEB-INF/beans.xml b/projects/servlet_jsp_mvc/src/main/webapp/WEB-INF/beans.xml[m
[1mdeleted file mode 100644[m
[1mindex 0fc6e30..0000000[m
[1m--- a/projects/servlet_jsp_mvc/src/main/webapp/WEB-INF/beans.xml[m
[1m+++ /dev/null[m
[36m@@ -1,6 +0,0 @@[m
[31m-<beans xmlns="http://xmlns.jcp.org/xml/ns/javaee"[m
[31m-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"[m
[31m-       xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee[m
[31m-       http://xmlns.jcp.org/xml/ns/javaee/beans_2_0.xsd"[m
[31m-       bean-discovery-mode="all" version="2.0">[m
[31m-</beans>[m
\ No newline at end of file[m
[1mdiff --git a/projects/servlet_jsp_mvc/src/main/webapp/WEB-INF/jsp/PersonOutputPage.jsp b/projects/servlet_jsp_mvc/src/main/webapp/WEB-INF/jsp/PersonOutputPage.jsp[m
[1mdeleted file mode 100644[m
[1mindex a9e28e0..0000000[m
[1m--- a/projects/servlet_jsp_mvc/src/main/webapp/WEB-INF/jsp/PersonOutputPage.jsp[m
[1m+++ /dev/null[m
[36m@@ -1,8 +0,0 @@[m
[31m-﻿<%@ page contentType="text/html; charset=UTF-8"%>[m
[31m-<%@ page pageEncoding="UTF-8"%>[m
[31m-<html>[m
[31m-<body>[m
[31m-<div>${person.personName}さんのメッセージ</div>[m
[31m-<div>${person.message}</div>[m
[31m-</body>[m
[31m-</html>[m
\ No newline at end of file[m
[1mdiff --git a/projects/servlet_jsp_mvc/src/main/webapp/WEB-INF/web.xml b/projects/servlet_jsp_mvc/src/main/webapp/WEB-INF/web.xml[m
[1mdeleted file mode 100644[m
[1mindex b7a659c..0000000[m
[1m--- a/projects/servlet_jsp_mvc/src/main/webapp/WEB-INF/web.xml[m
[1m+++ /dev/null[m
[36m@@ -1,7 +0,0 @@[m
[31m-<?xml version="1.0" encoding="UTF-8"?>[m
[31m-<web-app xmlns="https://jakarta.ee/xml/ns/jakartaee"[m
[31m-         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"[m
[31m-         xsi:schemaLocation="https://jakarta.ee/xml/ns/jakartaee[m
[31m-         https://jakarta.ee/xml/ns/jakartaee/web-app_5_0.xsd"[m
[31m-         version="5.0">[m
[31m-</web-app>[m
\ No newline at end of file[m
[1mdiff --git a/projects/servlet_jsp_mvc/src/test/java/.gitkeep b/projects/servlet_jsp_mvc/src/test/java/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/servlet_jsp_mvc/src/test/resources/.gitkeep b/projects/servlet_jsp_mvc/src/test/resources/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/servlet_session/.gitignore b/projects/servlet_session/.gitignore[m
[1mdeleted file mode 100644[m
[1mindex 6f1d2c2..0000000[m
[1m--- a/projects/servlet_session/.gitignore[m
[1m+++ /dev/null[m
[36m@@ -1,5 +0,0 @@[m
[31m-/classes[m
[31m-/bin[m
[31m-/build[m
[31m-/target[m
[31m-/.gradle[m
[1mdiff --git a/projects/servlet_session/README.md b/projects/servlet_session/README.md[m
[1mdeleted file mode 100644[m
[1mindex 52a266b..0000000[m
[1m--- a/projects/servlet_session/README.md[m
[1m+++ /dev/null[m
[36m@@ -1,93 +0,0 @@[m
[31m-# servlet_session プロジェクト[m
[31m-[m
[31m-## 📖 概要[m
[31m-[m
[31m-Servletのセッション管理を学ぶサンプルプロジェクトです。[m
[31m-HttpSession APIを使ったユーザー状態の保持方法を学習できます。[m
[31m-[m
[31m-## 🚀 アプリケーションの開発フローとデプロイ方法[m
[31m-[m
[31m-### 前提条件[m
[31m-[m
[31m-- JDK 21以上[m
[31m-- Gradle 8.x以上[m
[31m-- Payara Server 6（プロジェクトルートの`payara6/`に配置）[m
[31m-[m
[31m-### 1. Payara Serverの起動（研修1回について初回だけ）[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew startPayara[m
[31m-```[m
[31m-[m
[31m-### 2. WARファイルのビルド（アプリケーション作成・更新のたびに実施）[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew :projects:servlet_session:war[m
[31m-```[m
[31m-[m
[31m-### 3. アプリケーションのデプロイ（アプリケーション作成・更新のたびに実施）[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew :projects:servlet_session:deploy[m
[31m-```[m
[31m-[m
[31m-## 📍 アクセスURL[m
[31m-[m
[31m-デプロイ後、以下のURLにアクセス：[m
[31m-[m
[31m-- **トップページ**: http://localhost:8080/servlet_session/[m
[31m-[m
[31m-## 🎯 プロジェクト構成[m
[31m-[m
[31m-```[m
[31m-projects/servlet_session/[m
[31m-├── src/[m
[31m-│   ├── main/[m
[31m-│   │   ├── java/[m
[31m-│   │   │   └── servlet/           # Servletクラス[m
[31m-│   │   └── webapp/[m
[31m-│   │       ├── index.html[m
[31m-│   │       ├── WEB-INF/[m
[31m-│   │       │   ├── web.xml[m
[31m-│   │       │   └── jsp/           # JSPファイル[m
[31m-│   │       └── css/[m
[31m-│   └── test/[m
[31m-└── build/[m
[31m-    └── libs/[m
[31m-        └── servlet_session.war[m
[31m-```[m
[31m-[m
[31m-## 🔧 使用している技術[m
[31m-[m
[31m-- **Jakarta EE 10**[m
[31m-- **Payara Server 6**[m
[31m-- **Jakarta Servlet 6.0**[m
[31m-- **HttpSession API**[m
[31m-[m
[31m-## 🛑 アプリケーションを停止する[m
[31m-[m
[31m-### アプリケーションのアンデプロイ[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew :projects:servlet_session:undeploy[m
[31m-```[m
[31m-[m
[31m-### Payara Server全体を停止[m
[31m-[m
[31m-```powershell[m
[31m-.\gradlew stopPayara[m
[31m-```[m
[31m-[m
[31m-## 🔍 ログ監視[m
[31m-[m
[31m-別のターミナルでログをリアルタイム監視：[m
[31m-[m
[31m-**Windows (PowerShell):**[m
[31m-```powershell[m
[31m-Get-Content -Path payara6\glassfish\domains\domain1\logs\server.log -Wait -Tail 50 -Encoding UTF8[m
[31m-```[m
[31m-[m
[31m-**Linux/Mac:**[m
[31m-```bash[m
[31m-tail -f -n 50 payara6/glassfish/domains/domain1/logs/server.log[m
[31m-```[m
[1mdiff --git a/projects/servlet_session/src/main/java/.gitkeep b/projects/servlet_session/src/main/java/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/servlet_session/src/main/java/dev/cline/apricot/servlet/session/ColorSessionServlet.java b/projects/servlet_session/src/main/java/dev/cline/apricot/servlet/session/ColorSessionServlet.java[m
[1mdeleted file mode 100644[m
[1mindex 6488f9a..0000000[m
[1m--- a/projects/servlet_session/src/main/java/dev/cline/apricot/servlet/session/ColorSessionServlet.java[m
[1m+++ /dev/null[m
[36m@@ -1,63 +0,0 @@[m
[31m-package dev.cline.apricot.servlet.session;[m
[31m-[m
[31m-import java.io.IOException;[m
[31m-import java.io.PrintWriter;[m
[31m-import java.util.ArrayList;[m
[31m-import java.util.Iterator;[m
[31m-import jakarta.servlet.ServletException;[m
[31m-import jakarta.servlet.annotation.WebServlet;[m
[31m-import jakarta.servlet.http.HttpServlet;[m
[31m-import jakarta.servlet.http.HttpServletRequest;[m
[31m-import jakarta.servlet.http.HttpServletResponse;[m
[31m-import jakarta.servlet.http.HttpSession;[m
[31m- [m
[31m-@WebServlet("/ColorSessionServlet")[m
[31m-public class ColorSessionServlet extends HttpServlet {[m
[31m-[m
[31m-    @SuppressWarnings({ "unchecked", "rawtypes" })[m
[31m-    public void doGet(HttpServletRequest request, HttpServletResponse response)[m
[31m-            throws ServletException, IOException {[m
[31m-        // リクエストの文字コードを設定する[m
[31m-        request.setCharacterEncoding("UTF-8");[m
[31m-[m
[31m-        // 入力値を取得する[m
[31m-        String selectedcolor = request.getParameter("selectedColor");[m
[31m-[m
[31m-        // セッションを生成・復元する[m
[31m-        HttpSession session = request.getSession();[m
[31m-[m
[31m-        System.out.println("jsessionId ---> " + session.getId());[m
[31m-[m
[31m-        ArrayList<String> colorList = null;[m
[31m-        // セッションが新規、またはセッションは新規ではないが[m
[31m-        // カラーリストがない格納されていない場合、新規でカラーリストを生成する[m
[31m-        if (session.isNew() || session.getAttribute("selectedColorList") == null) {[m
[31m-            colorList = new ArrayList<String>();[m
[31m-        } else {[m
[31m-            // すでにカラーリストがセッションにある場合、セッションから取り出す[m
[31m-            colorList = (ArrayList<String>)session.getAttribute("selectedColorList");[m
[31m-        }[m
[31m-[m
[31m-        // 選択された色をカラーリストに追加し、セッションスコープに格納する[m
[31m-        colorList.add(selectedcolor);[m
[31m-        session.setAttribute("selectedColorList", colorList);[m
[31m-[m
[31m-        // レスポンスのコンテントタイプを設定する[m
[31m-        response.setContentType("text/html; charset=UTF-8");[m
[31m-[m
[31m-        // HTMLコードを出力する[m
[31m-        PrintWriter out = response.getWriter();[m
[31m-        out.println("<html>");[m
[31m-        out.println("<head><title>ColorSessionServlet</title></head>");[m
[31m-        out.println("<body>");[m
[31m-        out.println("<h2>ColorSessionServlet</h2><hr />");[m
[31m-        out.println("今までに選択された色<br />");[m
[31m-        Iterator i = colorList.iterator();[m
[31m-        while (i.hasNext()) {[m
[31m-            String color = (String)i.next();[m
[31m-            out.println(color + "<br />");[m
[31m-        }[m
[31m-        out.println("</body></html>");[m
[31m-        out.close();[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/projects/servlet_session/src/main/java/dev/cline/apricot/servlet/session/CookieOverrideServlet.java b/projects/servlet_session/src/main/java/dev/cline/apricot/servlet/session/CookieOverrideServlet.java[m
[1mdeleted file mode 100644[m
[1mindex a2f08b7..0000000[m
[1m--- a/projects/servlet_session/src/main/java/dev/cline/apricot/servlet/session/CookieOverrideServlet.java[m
[1m+++ /dev/null[m
[36m@@ -1,44 +0,0 @@[m
[31m-package dev.cline.apricot.servlet.session;[m
[31m-[m
[31m-import java.io.IOException;[m
[31m-import java.io.PrintWriter;[m
[31m-import jakarta.servlet.ServletException;[m
[31m-import jakarta.servlet.annotation.WebServlet;[m
[31m-import jakarta.servlet.http.Cookie;[m
[31m-import jakarta.servlet.http.HttpServlet;[m
[31m-import jakarta.servlet.http.HttpServletRequest;[m
[31m-import jakarta.servlet.http.HttpServletResponse;[m
[31m-[m
[31m-@WebServlet("/CookieOverrideServlet")[m
[31m-public class CookieOverrideServlet extends HttpServlet {[m
[31m-[m
[31m-    public void doGet(HttpServletRequest request, HttpServletResponse response)[m
[31m-            throws ServletException, IOException {[m
[31m-        // リクエストの文字コードを設定する[m
[31m-        request.setCharacterEncoding("UTF-8");[m
[31m-[m
[31m-        // クッキー1を設定する[m
[31m-        Cookie cookie1 = new Cookie("userName", "Bar");[m
[31m-        response.addCookie(cookie1);[m
[31m-[m
[31m-        // クッキー2を設定する[m
[31m-        Cookie cookie2 = new Cookie("age", "30");[m
[31m-        cookie2.setDomain(".hoge.localdomain");[m
[31m-        response.addCookie(cookie2);[m
[31m-[m
[31m-        // レスポンスのコンテントタイプを設定する[m
[31m-        response.setContentType("text/html; charset=UTF-8");[m
[31m-[m
[31m-        // HTMLコードを出力する[m
[31m-        PrintWriter out = response.getWriter();[m
[31m-        out.println("<html>");[m
[31m-        out.println("<head><title>CookieOverrideServlet</title></head>");[m
[31m-        out.println("<body>");[m
[31m-        out.println("<h2>CookieOverrideServlet</h2><hr />");[m
[31m-        out.println("HTTPレスポンスにクッキーをセットしました<br /><br />");[m
[31m-        out.println("<a href='/web_session/CookieViewServlet'>このリンクをクリックすると、CookieViewServletが呼び出されます<a>");[m
[31m-        out.println("</body>");[m
[31m-        out.println("</html>");[m
[31m-        out.close();[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/projects/servlet_session/src/main/java/dev/cline/apricot/servlet/session/CookieSetServlet.java b/projects/servlet_session/src/main/java/dev/cline/apricot/servlet/session/CookieSetServlet.java[m
[1mdeleted file mode 100644[m
[1mindex a808d74..0000000[m
[1m--- a/projects/servlet_session/src/main/java/dev/cline/apricot/servlet/session/CookieSetServlet.java[m
[1m+++ /dev/null[m
[36m@@ -1,54 +0,0 @@[m
[31m-package dev.cline.apricot.servlet.session;[m
[31m-[m
[31m-import java.io.IOException;[m
[31m-import java.io.PrintWriter;[m
[31m-import jakarta.servlet.ServletException;[m
[31m-import jakarta.servlet.annotation.WebServlet;[m
[31m-import jakarta.servlet.http.Cookie;[m
[31m-import jakarta.servlet.http.HttpServlet;[m
[31m-import jakarta.servlet.http.HttpServletRequest;[m
[31m-import jakarta.servlet.http.HttpServletResponse;[m
[31m-[m
[31m-@WebServlet("/CookieSetServlet")[m
[31m-public class CookieSetServlet extends HttpServlet {[m
[31m-[m
[31m-    public void doGet(HttpServletRequest request, HttpServletResponse response)[m
[31m-            throws ServletException, IOException {[m
[31m-        // リクエストの文字コードを設定する[m
[31m-        request.setCharacterEncoding("UTF-8");[m
[31m-[m
[31m-        // クッキー1を設定する[m
[31m-        Cookie cookie1 = new Cookie("userName", "Foo");[m
[31m-        response.addCookie(cookie1);[m
[31m-[m
[31m-        // クッキー2を設定する[m
[31m-        Cookie cookie2 = new Cookie("age", "35");[m
[31m-        cookie2.setMaxAge(3600);[m
[31m-        response.addCookie(cookie2);[m
[31m-[m
[31m-        // クッキー3（セキュアクッキー）を設定する[m
[31m-        Cookie cookie3 = new Cookie("gender", "male");[m
[31m-        cookie3.setSecure(true);[m
[31m-        response.addCookie(cookie3);[m
[31m-[m
[31m-        // クッキー4（セキュアクッキー）を設定する[m
[31m-        Cookie cookie4 = new Cookie("job", "Manager");[m
[31m-        cookie2.setDomain("www.mufg.jp");[m
[31m-        response.addCookie(cookie4);[m
[31m-[m
[31m-        // レスポンスのコンテントタイプを設定する[m
[31m-        response.setContentType("text/html; charset=UTF-8");[m
[31m-[m
[31m-        // HTMLコードを出力する[m
[31m-        PrintWriter out = response.getWriter();[m
[31m-        out.println("<html>");[m
[31m-        out.println("<head><title>CookieSetServlet</title></head>");[m
[31m-        out.println("<body>");[m
[31m-        out.println("<h2>CookieSetServlet</h2><hr />");[m
[31m-        out.println("HTTPレスポンスにクッキーをセットしました<br /><br />");[m
[31m-        out.println("<a href='/web_session/CookieViewServlet'>このリンクをクリックすると、CookieViewServletが呼び出されます<a>");[m
[31m-        out.println("</body>");[m
[31m-        out.println("</html>");[m
[31m-        out.close();[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/projects/servlet_session/src/main/java/dev/cline/apricot/servlet/session/CookieViewServlet.java b/projects/servlet_session/src/main/java/dev/cline/apricot/servlet/session/CookieViewServlet.java[m
[1mdeleted file mode 100644[m
[1mindex a55b3f1..0000000[m
[1m--- a/projects/servlet_session/src/main/java/dev/cline/apricot/servlet/session/CookieViewServlet.java[m
[1m+++ /dev/null[m
[36m@@ -1,48 +0,0 @@[m
[31m-package dev.cline.apricot.servlet.session;[m
[31m-[m
[31m-import java.io.IOException;[m
[31m-import java.io.PrintWriter;[m
[31m-import jakarta.servlet.ServletException;[m
[31m-import jakarta.servlet.annotation.WebServlet;[m
[31m-import jakarta.servlet.http.Cookie;[m
[31m-import jakarta.servlet.http.HttpServlet;[m
[31m-import jakarta.servlet.http.HttpServletRequest;[m
[31m-import jakarta.servlet.http.HttpServletResponse;[m
[31m-[m
[31m-@WebServlet("/CookieViewServlet")[m
[31m-public class CookieViewServlet extends HttpServlet {[m
[31m-[m
[31m-    public void doGet(HttpServletRequest request, HttpServletResponse response)[m
[31m-            throws ServletException, IOException {[m
[31m-        // リクエストの文字コードを設定する[m
[31m-        request.setCharacterEncoding("UTF-8");[m
[31m-[m
[31m-        // レスポンスのコンテントタイプを設定する[m
[31m-        response.setContentType("text/html; charset=UTF-8");[m
[31m-[m
[31m-        // HTMLコードを出力する[m
[31m-        PrintWriter out = response.getWriter();[m
[31m-        Cookie[] cookies = request.getCookies();[m
[31m-        out.println("<html>");[m
[31m-        out.println("<head><title>CookieViewerServle</title></head>");[m
[31m-        out.println("<body>");[m
[31m-        out.println("<h2>CookieViewerServle</h2><hr />");[m
[31m-        out.println("WebブラウザからのHTTPリクエスト内にセットされているクッキー一覧<br /><br />");[m
[31m-        for (int i = 0; i < cookies.length; i++) {[m
[31m-            out.println("Cookie[" + i + "] Name ---> " + cookies[i].getName() + "<br />");[m
[31m-            out.println("Cookie[" + i + "] Value ---> " + cookies[i].getValue() + "<br />");[m
[31m-            // Comment and Version methods are deprecated in Jakarta Servlet 6+[m
[31m-            out.println("Cookie[" + i + "] Max Age ---> " + cookies[i].getMaxAge()[m
[31m-                    + "<br />");[m
[31m-            out.println("Cookie[" + i + "] Domain ---> " + cookies[i].getDomain()[m
[31m-                    + "<br />");[m
[31m-            out.println("Cookie[" + i + "] Path ---> " + cookies[i].getPath() + "<br />");[m
[31m-            out.println("Cookie[" + i + "] Secure ---> " + cookies[i].getSecure() + "<br />");[m
[31m-            out.println("Cookie[" + i + "] HttpOnly ---> " + cookies[i].isHttpOnly() + "<br />");[m
[31m-            out.println("<br />");[m
[31m-        }[m
[31m-        out.println("</body>");[m
[31m-        out.println("</html>");[m
[31m-        out.close();[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/projects/servlet_session/src/main/resources/.gitkeep b/projects/servlet_session/src/main/resources/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/servlet_session/src/main/webapp/.gitkeep b/projects/servlet_session/src/main/webapp/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/servlet_session/src/main/webapp/ColorSelectPage.html b/projects/servlet_session/src/main/webapp/ColorSelectPage.html[m
[1mdeleted file mode 100644[m
[1mindex 5374921..0000000[m
[1m--- a/projects/servlet_session/src/main/webapp/ColorSelectPage.html[m
[1m+++ /dev/null[m
[36m@@ -1,33 +0,0 @@[m
[31m-﻿<!DOCTYPE html>[m
[31m-<html lang="ja">[m
[31m-<head>[m
[31m-<title>ColorSelectPage</title>[m
[31m-<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">[m
[31m-</head>[m
[31m-<body>[m
[31m-  <h2>ColorSelectPage</h2>[m
[31m-  <hr />[m
[31m-  <div>[m
[31m-    <a href="/servlet_session/ColorSessionServlet?selectedColor=Red">Red</a>[m
[31m-  </div>[m
[31m-  <div>[m
[31m-    <a href="/servlet_session/ColorSessionServlet?selectedColor=Blue">Blue</a>[m
[31m-  </div>[m
[31m-  <div>[m
[31m-    <a href="/servlet_session/ColorSessionServlet?selectedColor=Yellow">Yellow</a>[m
[31m-  </div>[m
[31m-  <div>[m
[31m-    <a href="/servlet_session/ColorSessionServlet?selectedColor=Green">Green</a>[m
[31m-  </div>[m
[31m-  <hr />[m
[31m-  <div>上記以外の色</div>[m
[31m-  <form action="/servlet_session/ColorSessionServlet" method="POST">[m
[31m-    <div>[m
[31m-      <input type="text" name="selectedColor">[m
[31m-    </div>[m
[31m-    <div>[m
[31m-      <input type="submit" value="リクエスト送信">[m
[31m-    </div>[m
[31m-  </form>[m
[31m-</body>[m
[31m-</html>[m
\ No newline at end of file[m
[1mdiff --git a/projects/servlet_session/src/main/webapp/WEB-INF/.gitkeep b/projects/servlet_session/src/main/webapp/WEB-INF/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/servlet_session/src/test/java/.gitkeep b/projects/servlet_session/src/test/java/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/servlet_session/src/test/resources/.gitkeep b/projects/servlet_session/src/test/resources/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/projects/shipping_jee/.gitkeep b/projects/shipping_jee/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/settings.gradle b/settings.gradle[m
[1mindex ccc59af..28b3e67 100644[m
[1m--- a/settings.gradle[m
[1m+++ b/settings.gradle[m
[36m@@ -4,22 +4,13 @@[m
 [m
 rootProject.name = 'jee-web-projects-payara'[m
 [m
[31m-// Servlet系プロジェクト[m
[31m-include 'projects:servlet_jsp'[m
[31m-include 'projects:servlet_jsp_mvc'[m
[31m-include 'projects:servlet_session'[m
[31m-[m
 // JSF系プロジェクト[m
[31m-include 'projects:jsf_person'[m
[31m-include 'projects:jsf_person_rdb'[m
[31m-include 'projects:jsf_ajax'[m
[32m+[m[32minclude 'projects:java:jsf_person_rdb'[m
 [m
[31m-// CDI系プロジェクト[m
[31m-include 'projects:cdi_inject'[m
[31m-include 'projects:cdi_conversation'[m
[31m-include 'projects:cdi_transactional'[m
[32m+[m[32m// Berry Books プロジェクト[m
[32m+[m[32minclude 'projects:java:berry-books'[m
[32m+[m[32minclude 'projects:java:berry-books-rest'[m
[32m+[m[32minclude 'projects:java:berry-books-swing'[m
 [m
[31m-// RESTful Webサービス[m
[31m-include 'projects:person_service'[m
[31m-include 'projects:rs_hello_service'[m
[31m-include 'projects:rs_greeting_service'[m
[32m+[m[32m// Struts系プロジェクト[m
[32m+[m[32minclude 'projects:java:struts_person_rdb'[m
[1mdiff --git a/sql/h2/CREATE_H2_DATABASE.sql b/sql/h2/CREATE_H2_DATABASE.sql[m
[1mdeleted file mode 100644[m
[1mindex 4d7a261..0000000[m
[1m--- a/sql/h2/CREATE_H2_DATABASE.sql[m
[1m+++ /dev/null[m
[36m@@ -1,3 +0,0 @@[m
[31m--- H2 Database は自動的にデータベースを作成するため、特別な作成スクリプトは不要[m
[31m--- データベースは最初の接続時に自動的に作成されます[m
[31m-[m
[1mdiff --git a/sql/h2/CREATE_H2_USER.sql b/sql/h2/CREATE_H2_USER.sql[m
[1mdeleted file mode 100644[m
[1mindex 9371db2..0000000[m
[1m--- a/sql/h2/CREATE_H2_USER.sql[m
[1m+++ /dev/null[m
[36m@@ -1,3 +0,0 @@[m
[31m--- H2 Database は組み込みユーザー管理を使用するため、ユーザー作成スクリプトは不要[m
[31m--- デフォルトユーザー: sa / パスワード: sa[m
[31m-[m
[1mdiff --git a/sql/h2/DROP_H2_DATABASE.sql b/sql/h2/DROP_H2_DATABASE.sql[m
[1mdeleted file mode 100644[m
[1mindex 5e4eed9..0000000[m
[1m--- a/sql/h2/DROP_H2_DATABASE.sql[m
[1m+++ /dev/null[m
[36m@@ -1,3 +0,0 @@[m
[31m--- H2 Database のデータベース削除は、データベースファイルを削除することで行います[m
[31m--- このスクリプトでは何もしません[m
[31m-[m
[1mdiff --git a/sql/h2/DROP_H2_USER.sql b/sql/h2/DROP_H2_USER.sql[m
[1mdeleted file mode 100644[m
[1mindex 2c46d6c..0000000[m
[1m--- a/sql/h2/DROP_H2_USER.sql[m
[1m+++ /dev/null[m
[36m@@ -1,3 +0,0 @@[m
[31m--- H2 Database のユーザー削除は不要です[m
[31m--- このスクリプトでは何もしません[m
[31m-[m
[1mdiff --git a/sql/hsqldb/CREATE_HSQLDB_DATABASE.sql b/sql/hsqldb/CREATE_HSQLDB_DATABASE.sql[m
[1mdeleted file mode 100644[m
[1mindex 1ccb04f..0000000[m
[1m--- a/sql/hsqldb/CREATE_HSQLDB_DATABASE.sql[m
[1m+++ /dev/null[m
[36m@@ -1,8 +0,0 @@[m
[31m--- HSQLDB Database は自動的にデータベースを作成するため、特別な作成スクリプトは不要[m
[31m--- データベースは最初の接続時に自動的に作成されます[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[1mdiff --git a/sql/hsqldb/CREATE_HSQLDB_USER.sql b/sql/hsqldb/CREATE_HSQLDB_USER.sql[m
[1mdeleted file mode 100644[m
[1mindex b81087c..0000000[m
[1m--- a/sql/hsqldb/CREATE_HSQLDB_USER.sql[m
[1m+++ /dev/null[m
[36m@@ -1,8 +0,0 @@[m
[31m--- HSQLDB Database は組み込みユーザー管理を使用するため、ユーザー作成スクリプトは不要[m
[31m--- デフォルトユーザー: SA / パスワード: （空文字）[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[1mdiff --git a/sql/hsqldb/DROP_HSQLDB_DATABASE.sql b/sql/hsqldb/DROP_HSQLDB_DATABASE.sql[m
[1mdeleted file mode 100644[m
[1mindex bafa360..0000000[m
[1m--- a/sql/hsqldb/DROP_HSQLDB_DATABASE.sql[m
[1m+++ /dev/null[m
[36m@@ -1,9 +0,0 @@[m
[31m--- HSQLDB Database のデータベース削除は、データベースファイルを削除することで行います[m
[31m--- このスクリプトでは何もしません[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[1mdiff --git a/sql/hsqldb/DROP_HSQLDB_USER.sql b/sql/hsqldb/DROP_HSQLDB_USER.sql[m
[1mdeleted file mode 100644[m
[1mindex e08be6c..0000000[m
[1m--- a/sql/hsqldb/DROP_HSQLDB_USER.sql[m
[1m+++ /dev/null[m
[36m@@ -1,9 +0,0 @@[m
[31m--- HSQLDB Database のユーザー削除は不要です[m
[31m--- このスクリプトでは何もしません[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
